//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FDAModel", "RefBENCHMARK62", "BENCHMARK", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.BENCHMARK), "BENCHMARK_ASSOCIATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK_ASSOCIATION), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefBENCHMARK69", "BENCHMARK", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.BENCHMARK), "BENCHMARK_INDEX", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK_INDEX), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY64", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.CURRENCY), "BENCHMARK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefREBALANCING_FREQUENCY71", "REBALANCING_FREQUENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.REBALANCING_FREQUENCY), "BENCHMARK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefVALUATION_FREQUENCY60", "VALUATION_FREQUENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.VALUATION_FREQUENCY), "BENCHMARK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_BENCHMARK_ASSOCIATION174", "FUND_BENCHMARK_ASSOCIATION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_BENCHMARK_ASSOCIATION), "BENCHMARK_ASSOCIATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK_ASSOCIATION), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY234", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.CURRENCY), "BENCHMARK_INDEX", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK_INDEX), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefINDEX_ELEMENT70", "INDEX_ELEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.INDEX_ELEMENT), "BENCHMARK_INDEX", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.BENCHMARK_INDEX), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCALENDAR_EVENT_TYPE41", "CALENDAR_EVENT_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.CALENDAR_EVENT_TYPE), "FUND_CALENDAR_EVENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_CALENDAR_EVENT), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCOUNTRY56", "COUNTRY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.COUNTRY), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCOUNTRY58", "COUNTRY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.COUNTRY), "FUND_REGISTERED_COUNTRY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_REGISTERED_COUNTRY), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY13", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.CURRENCY), "FUND_ASSET", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY230", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.CURRENCY), "FUND_PAYMENT_CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_PAYMENT_CURRENCY), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY28", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.CURRENCY), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY29", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.CURRENCY), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY39", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.CURRENCY), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY45", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.CURRENCY), "FUND_REPORTING_CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_REPORTING_CURRENCY), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCURRENCY75", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.CURRENCY), "SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.SHARECLASS), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefCUT_OFF_TIME63", "CUT_OFF_TIME", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.CUT_OFF_TIME), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefDISTRIBUTION_FREQUENCY247", "DISTRIBUTION_FREQUENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.DISTRIBUTION_FREQUENCY), "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefDISTRIBUTION_POLICY233", "DISTRIBUTION_POLICY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.DISTRIBUTION_POLICY), "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFILE_PROVIDER157", "FILE_PROVIDER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.FILE_PROVIDER), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE322", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.PARTY_ROLE), "FILE_PROVIDER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.FILE_PROVIDER), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFISCALYEAREND", "FISCAL_YEAR_END", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.FISCAL_YEAR_END), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND173", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_BENCHMARK_ASSOCIATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_BENCHMARK_ASSOCIATION), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND188", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_PORTFOLIO_MANAGER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_PORTFOLIO_MANAGER), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND229", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_PAYMENT_CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_PAYMENT_CURRENCY), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND4", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_GROUPING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_GROUPING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND40", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_CALENDAR_EVENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_CALENDAR_EVENT), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND44", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_REPORTING_CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_REPORTING_CURRENCY), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND57", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_REGISTERED_COUNTRY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_REGISTERED_COUNTRY), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND72", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_VALUATION_TIMING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_VALUATION_TIMING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND8", "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND), "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefHOLDING_FILE_NAME", "HOLDING_FILE_NAME", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.HOLDING_FILE_NAME), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefIMA_SECTOR189", "IMA_SECTOR", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.IMA_SECTOR), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefNAV_FILE_NAME", "NAV_FILE_NAME", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.NAV_FILE_NAME), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE327", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.PARTY_ROLE), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefSUMMARY_FILE_NAME", "SUMMARY_FILE_NAME", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.SUMMARY_FILE_NAME), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefUMBRELLA6", "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.UMBRELLA), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefVALUATION_FREQUENCY59", "VALUATION_FREQUENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.VALUATION_FREQUENCY), "FUND", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_ASSET131", "FUND_ASSET", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_ASSET), "FUND_ASSET_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET_RATING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_ASSET36", "FUND_ASSET", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_ASSET), "FUND_ASSET_IDENTIFIER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET_IDENTIFIER), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_ASSET78", "FUND_ASSET", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_ASSET), "FUND_ASSET_PUBLICATION_MEDIA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET_PUBLICATION_MEDIA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_SHARECLASS12", "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_SHARECLASS), "FUND_ASSET", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_ASSET_IDENTIFIER_TYPE), "FUND_ASSET_IDENTIFIER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET_IDENTIFIER), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE325", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.PARTY_ROLE), "FUND_ASSET_PUBLICATION_MEDIA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET_PUBLICATION_MEDIA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefRATING50", "RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.RATING), "FUND_ASSET_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_ASSET_RATING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.FUND_BENCHMARK_ASSOCIATION_TYPE), "FUND_BENCHMARK_ASSOCIATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_BENCHMARK_ASSOCIATION), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefGROUPING3", "GROUPING", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.GROUPING), "FUND_GROUPING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_GROUPING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE326", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.PARTY_ROLE), "FUND_PORTFOLIO_MANAGER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_PORTFOLIO_MANAGER), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_SHARECLASS149", "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.FUND_SHARECLASS), "FUND_SHARECLASS1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_SHARECLASS150", "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_SHARECLASS), "FUND_SHARECLASS_FEATURE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS_FEATURE), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_SHARECLASS79", "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_SHARECLASS), "FUND_SHARECLASS_MANAGEMENT_FEE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS_MANAGEMENT_FEE), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefSHARECLASS9", "SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.SHARECLASS), "FUND_SHARECLASS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.FUND_SHARECLASS_FEATURE_TYPE), "FUND_SHARECLASS_FEATURE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_SHARECLASS_FEATURE), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefVALUATION_TIMING73", "VALUATION_TIMING", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.VALUATION_TIMING), "FUND_VALUATION_TIMING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.FUND_VALUATION_TIMING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefGROUP_TYPE2", "GROUP_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.GROUP_TYPE), "GROUPING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.GROUPING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefGROUP_USAGE1", "GROUP_USAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.GROUP_USAGE), "GROUPING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.GROUPING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefINDEX_TYPE66", "INDEX_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.INDEX_TYPE), "INDEX_ELEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.INDEX_ELEMENT), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefINDEX_VARIANT_TYPE67", "INDEX_VARIANT_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.INDEX_VARIANT_TYPE), "INDEX_ELEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.INDEX_ELEMENT), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE323", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.PARTY_ROLE), "INDEX_ELEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.INDEX_ELEMENT), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY321", "PARTY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.PARTY), "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.PARTY_ROLE), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE_TYPE320", "PARTY_ROLE_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.PARTY_ROLE_TYPE), "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.PARTY_ROLE), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE324", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FundDataMaintenanceData.PARTY_ROLE), "RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.RATING), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE328", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.PARTY_ROLE), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE329", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.PARTY_ROLE), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE330", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.PARTY_ROLE), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefPARTY_ROLE331", "PARTY_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.PARTY_ROLE), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]
[assembly: EdmRelationshipAttribute("FDAModel", "RefVehicalType", "VEHICLE_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FundDataMaintenanceData.VEHICLE_TYPE), "UMBRELLA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FundDataMaintenanceData.UMBRELLA), true)]

#endregion

namespace FundDataMaintenanceData
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FDAEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FDAEntities object using the connection string found in the 'FDAEntities' section of the application configuration file.
        /// </summary>
        public FDAEntities() : base("name=FDAEntities", "FDAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FDAEntities object.
        /// </summary>
        public FDAEntities(string connectionString) : base(connectionString, "FDAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FDAEntities object.
        /// </summary>
        public FDAEntities(EntityConnection connection) : base(connection, "FDAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASSET_MATCHING> ASSET_MATCHING
        {
            get
            {
                if ((_ASSET_MATCHING == null))
                {
                    _ASSET_MATCHING = base.CreateObjectSet<ASSET_MATCHING>("ASSET_MATCHING");
                }
                return _ASSET_MATCHING;
            }
        }
        private ObjectSet<ASSET_MATCHING> _ASSET_MATCHING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BENCHMARK> BENCHMARKs
        {
            get
            {
                if ((_BENCHMARKs == null))
                {
                    _BENCHMARKs = base.CreateObjectSet<BENCHMARK>("BENCHMARKs");
                }
                return _BENCHMARKs;
            }
        }
        private ObjectSet<BENCHMARK> _BENCHMARKs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BENCHMARK_ASSOCIATION> BENCHMARK_ASSOCIATION
        {
            get
            {
                if ((_BENCHMARK_ASSOCIATION == null))
                {
                    _BENCHMARK_ASSOCIATION = base.CreateObjectSet<BENCHMARK_ASSOCIATION>("BENCHMARK_ASSOCIATION");
                }
                return _BENCHMARK_ASSOCIATION;
            }
        }
        private ObjectSet<BENCHMARK_ASSOCIATION> _BENCHMARK_ASSOCIATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BENCHMARK_INDEX> BENCHMARK_INDEX
        {
            get
            {
                if ((_BENCHMARK_INDEX == null))
                {
                    _BENCHMARK_INDEX = base.CreateObjectSet<BENCHMARK_INDEX>("BENCHMARK_INDEX");
                }
                return _BENCHMARK_INDEX;
            }
        }
        private ObjectSet<BENCHMARK_INDEX> _BENCHMARK_INDEX;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CALENDAR_EVENT_TYPE> CALENDAR_EVENT_TYPE
        {
            get
            {
                if ((_CALENDAR_EVENT_TYPE == null))
                {
                    _CALENDAR_EVENT_TYPE = base.CreateObjectSet<CALENDAR_EVENT_TYPE>("CALENDAR_EVENT_TYPE");
                }
                return _CALENDAR_EVENT_TYPE;
            }
        }
        private ObjectSet<CALENDAR_EVENT_TYPE> _CALENDAR_EVENT_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COUNTRY> COUNTRies
        {
            get
            {
                if ((_COUNTRies == null))
                {
                    _COUNTRies = base.CreateObjectSet<COUNTRY>("COUNTRies");
                }
                return _COUNTRies;
            }
        }
        private ObjectSet<COUNTRY> _COUNTRies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CURRENCY> CURRENCies
        {
            get
            {
                if ((_CURRENCies == null))
                {
                    _CURRENCies = base.CreateObjectSet<CURRENCY>("CURRENCies");
                }
                return _CURRENCies;
            }
        }
        private ObjectSet<CURRENCY> _CURRENCies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CUT_OFF_TIME> CUT_OFF_TIME
        {
            get
            {
                if ((_CUT_OFF_TIME == null))
                {
                    _CUT_OFF_TIME = base.CreateObjectSet<CUT_OFF_TIME>("CUT_OFF_TIME");
                }
                return _CUT_OFF_TIME;
            }
        }
        private ObjectSet<CUT_OFF_TIME> _CUT_OFF_TIME;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DISTRIBUTION_FREQUENCY> DISTRIBUTION_FREQUENCY
        {
            get
            {
                if ((_DISTRIBUTION_FREQUENCY == null))
                {
                    _DISTRIBUTION_FREQUENCY = base.CreateObjectSet<DISTRIBUTION_FREQUENCY>("DISTRIBUTION_FREQUENCY");
                }
                return _DISTRIBUTION_FREQUENCY;
            }
        }
        private ObjectSet<DISTRIBUTION_FREQUENCY> _DISTRIBUTION_FREQUENCY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DISTRIBUTION_POLICY> DISTRIBUTION_POLICY
        {
            get
            {
                if ((_DISTRIBUTION_POLICY == null))
                {
                    _DISTRIBUTION_POLICY = base.CreateObjectSet<DISTRIBUTION_POLICY>("DISTRIBUTION_POLICY");
                }
                return _DISTRIBUTION_POLICY;
            }
        }
        private ObjectSet<DISTRIBUTION_POLICY> _DISTRIBUTION_POLICY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FILE_PROVIDER> FILE_PROVIDER
        {
            get
            {
                if ((_FILE_PROVIDER == null))
                {
                    _FILE_PROVIDER = base.CreateObjectSet<FILE_PROVIDER>("FILE_PROVIDER");
                }
                return _FILE_PROVIDER;
            }
        }
        private ObjectSet<FILE_PROVIDER> _FILE_PROVIDER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FISCAL_YEAR_END> FISCAL_YEAR_END
        {
            get
            {
                if ((_FISCAL_YEAR_END == null))
                {
                    _FISCAL_YEAR_END = base.CreateObjectSet<FISCAL_YEAR_END>("FISCAL_YEAR_END");
                }
                return _FISCAL_YEAR_END;
            }
        }
        private ObjectSet<FISCAL_YEAR_END> _FISCAL_YEAR_END;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND> FUNDs
        {
            get
            {
                if ((_FUNDs == null))
                {
                    _FUNDs = base.CreateObjectSet<FUND>("FUNDs");
                }
                return _FUNDs;
            }
        }
        private ObjectSet<FUND> _FUNDs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_ASSET> FUND_ASSET
        {
            get
            {
                if ((_FUND_ASSET == null))
                {
                    _FUND_ASSET = base.CreateObjectSet<FUND_ASSET>("FUND_ASSET");
                }
                return _FUND_ASSET;
            }
        }
        private ObjectSet<FUND_ASSET> _FUND_ASSET;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_ASSET_IDENTIFIER> FUND_ASSET_IDENTIFIER
        {
            get
            {
                if ((_FUND_ASSET_IDENTIFIER == null))
                {
                    _FUND_ASSET_IDENTIFIER = base.CreateObjectSet<FUND_ASSET_IDENTIFIER>("FUND_ASSET_IDENTIFIER");
                }
                return _FUND_ASSET_IDENTIFIER;
            }
        }
        private ObjectSet<FUND_ASSET_IDENTIFIER> _FUND_ASSET_IDENTIFIER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_ASSET_IDENTIFIER_TYPE> FUND_ASSET_IDENTIFIER_TYPE
        {
            get
            {
                if ((_FUND_ASSET_IDENTIFIER_TYPE == null))
                {
                    _FUND_ASSET_IDENTIFIER_TYPE = base.CreateObjectSet<FUND_ASSET_IDENTIFIER_TYPE>("FUND_ASSET_IDENTIFIER_TYPE");
                }
                return _FUND_ASSET_IDENTIFIER_TYPE;
            }
        }
        private ObjectSet<FUND_ASSET_IDENTIFIER_TYPE> _FUND_ASSET_IDENTIFIER_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_ASSET_PUBLICATION_MEDIA> FUND_ASSET_PUBLICATION_MEDIA
        {
            get
            {
                if ((_FUND_ASSET_PUBLICATION_MEDIA == null))
                {
                    _FUND_ASSET_PUBLICATION_MEDIA = base.CreateObjectSet<FUND_ASSET_PUBLICATION_MEDIA>("FUND_ASSET_PUBLICATION_MEDIA");
                }
                return _FUND_ASSET_PUBLICATION_MEDIA;
            }
        }
        private ObjectSet<FUND_ASSET_PUBLICATION_MEDIA> _FUND_ASSET_PUBLICATION_MEDIA;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_ASSET_RATING> FUND_ASSET_RATING
        {
            get
            {
                if ((_FUND_ASSET_RATING == null))
                {
                    _FUND_ASSET_RATING = base.CreateObjectSet<FUND_ASSET_RATING>("FUND_ASSET_RATING");
                }
                return _FUND_ASSET_RATING;
            }
        }
        private ObjectSet<FUND_ASSET_RATING> _FUND_ASSET_RATING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_BENCHMARK_ASSOCIATION> FUND_BENCHMARK_ASSOCIATION
        {
            get
            {
                if ((_FUND_BENCHMARK_ASSOCIATION == null))
                {
                    _FUND_BENCHMARK_ASSOCIATION = base.CreateObjectSet<FUND_BENCHMARK_ASSOCIATION>("FUND_BENCHMARK_ASSOCIATION");
                }
                return _FUND_BENCHMARK_ASSOCIATION;
            }
        }
        private ObjectSet<FUND_BENCHMARK_ASSOCIATION> _FUND_BENCHMARK_ASSOCIATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_BENCHMARK_ASSOCIATION_TYPE> FUND_BENCHMARK_ASSOCIATION_TYPE
        {
            get
            {
                if ((_FUND_BENCHMARK_ASSOCIATION_TYPE == null))
                {
                    _FUND_BENCHMARK_ASSOCIATION_TYPE = base.CreateObjectSet<FUND_BENCHMARK_ASSOCIATION_TYPE>("FUND_BENCHMARK_ASSOCIATION_TYPE");
                }
                return _FUND_BENCHMARK_ASSOCIATION_TYPE;
            }
        }
        private ObjectSet<FUND_BENCHMARK_ASSOCIATION_TYPE> _FUND_BENCHMARK_ASSOCIATION_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_CALENDAR_EVENT> FUND_CALENDAR_EVENT
        {
            get
            {
                if ((_FUND_CALENDAR_EVENT == null))
                {
                    _FUND_CALENDAR_EVENT = base.CreateObjectSet<FUND_CALENDAR_EVENT>("FUND_CALENDAR_EVENT");
                }
                return _FUND_CALENDAR_EVENT;
            }
        }
        private ObjectSet<FUND_CALENDAR_EVENT> _FUND_CALENDAR_EVENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_GROUPING> FUND_GROUPING
        {
            get
            {
                if ((_FUND_GROUPING == null))
                {
                    _FUND_GROUPING = base.CreateObjectSet<FUND_GROUPING>("FUND_GROUPING");
                }
                return _FUND_GROUPING;
            }
        }
        private ObjectSet<FUND_GROUPING> _FUND_GROUPING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_PAYMENT_CURRENCY> FUND_PAYMENT_CURRENCY
        {
            get
            {
                if ((_FUND_PAYMENT_CURRENCY == null))
                {
                    _FUND_PAYMENT_CURRENCY = base.CreateObjectSet<FUND_PAYMENT_CURRENCY>("FUND_PAYMENT_CURRENCY");
                }
                return _FUND_PAYMENT_CURRENCY;
            }
        }
        private ObjectSet<FUND_PAYMENT_CURRENCY> _FUND_PAYMENT_CURRENCY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_PORTFOLIO_MANAGER> FUND_PORTFOLIO_MANAGER
        {
            get
            {
                if ((_FUND_PORTFOLIO_MANAGER == null))
                {
                    _FUND_PORTFOLIO_MANAGER = base.CreateObjectSet<FUND_PORTFOLIO_MANAGER>("FUND_PORTFOLIO_MANAGER");
                }
                return _FUND_PORTFOLIO_MANAGER;
            }
        }
        private ObjectSet<FUND_PORTFOLIO_MANAGER> _FUND_PORTFOLIO_MANAGER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_REGISTERED_COUNTRY> FUND_REGISTERED_COUNTRY
        {
            get
            {
                if ((_FUND_REGISTERED_COUNTRY == null))
                {
                    _FUND_REGISTERED_COUNTRY = base.CreateObjectSet<FUND_REGISTERED_COUNTRY>("FUND_REGISTERED_COUNTRY");
                }
                return _FUND_REGISTERED_COUNTRY;
            }
        }
        private ObjectSet<FUND_REGISTERED_COUNTRY> _FUND_REGISTERED_COUNTRY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_REPORTING_CURRENCY> FUND_REPORTING_CURRENCY
        {
            get
            {
                if ((_FUND_REPORTING_CURRENCY == null))
                {
                    _FUND_REPORTING_CURRENCY = base.CreateObjectSet<FUND_REPORTING_CURRENCY>("FUND_REPORTING_CURRENCY");
                }
                return _FUND_REPORTING_CURRENCY;
            }
        }
        private ObjectSet<FUND_REPORTING_CURRENCY> _FUND_REPORTING_CURRENCY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_SHARECLASS> FUND_SHARECLASS
        {
            get
            {
                if ((_FUND_SHARECLASS == null))
                {
                    _FUND_SHARECLASS = base.CreateObjectSet<FUND_SHARECLASS>("FUND_SHARECLASS");
                }
                return _FUND_SHARECLASS;
            }
        }
        private ObjectSet<FUND_SHARECLASS> _FUND_SHARECLASS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_SHARECLASS_FEATURE> FUND_SHARECLASS_FEATURE
        {
            get
            {
                if ((_FUND_SHARECLASS_FEATURE == null))
                {
                    _FUND_SHARECLASS_FEATURE = base.CreateObjectSet<FUND_SHARECLASS_FEATURE>("FUND_SHARECLASS_FEATURE");
                }
                return _FUND_SHARECLASS_FEATURE;
            }
        }
        private ObjectSet<FUND_SHARECLASS_FEATURE> _FUND_SHARECLASS_FEATURE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_SHARECLASS_FEATURE_TYPE> FUND_SHARECLASS_FEATURE_TYPE
        {
            get
            {
                if ((_FUND_SHARECLASS_FEATURE_TYPE == null))
                {
                    _FUND_SHARECLASS_FEATURE_TYPE = base.CreateObjectSet<FUND_SHARECLASS_FEATURE_TYPE>("FUND_SHARECLASS_FEATURE_TYPE");
                }
                return _FUND_SHARECLASS_FEATURE_TYPE;
            }
        }
        private ObjectSet<FUND_SHARECLASS_FEATURE_TYPE> _FUND_SHARECLASS_FEATURE_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_SHARECLASS_MANAGEMENT_FEE> FUND_SHARECLASS_MANAGEMENT_FEE
        {
            get
            {
                if ((_FUND_SHARECLASS_MANAGEMENT_FEE == null))
                {
                    _FUND_SHARECLASS_MANAGEMENT_FEE = base.CreateObjectSet<FUND_SHARECLASS_MANAGEMENT_FEE>("FUND_SHARECLASS_MANAGEMENT_FEE");
                }
                return _FUND_SHARECLASS_MANAGEMENT_FEE;
            }
        }
        private ObjectSet<FUND_SHARECLASS_MANAGEMENT_FEE> _FUND_SHARECLASS_MANAGEMENT_FEE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FUND_VALUATION_TIMING> FUND_VALUATION_TIMING
        {
            get
            {
                if ((_FUND_VALUATION_TIMING == null))
                {
                    _FUND_VALUATION_TIMING = base.CreateObjectSet<FUND_VALUATION_TIMING>("FUND_VALUATION_TIMING");
                }
                return _FUND_VALUATION_TIMING;
            }
        }
        private ObjectSet<FUND_VALUATION_TIMING> _FUND_VALUATION_TIMING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GROUP_TYPE> GROUP_TYPE
        {
            get
            {
                if ((_GROUP_TYPE == null))
                {
                    _GROUP_TYPE = base.CreateObjectSet<GROUP_TYPE>("GROUP_TYPE");
                }
                return _GROUP_TYPE;
            }
        }
        private ObjectSet<GROUP_TYPE> _GROUP_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GROUP_USAGE> GROUP_USAGE
        {
            get
            {
                if ((_GROUP_USAGE == null))
                {
                    _GROUP_USAGE = base.CreateObjectSet<GROUP_USAGE>("GROUP_USAGE");
                }
                return _GROUP_USAGE;
            }
        }
        private ObjectSet<GROUP_USAGE> _GROUP_USAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GROUPING> GROUPINGs
        {
            get
            {
                if ((_GROUPINGs == null))
                {
                    _GROUPINGs = base.CreateObjectSet<GROUPING>("GROUPINGs");
                }
                return _GROUPINGs;
            }
        }
        private ObjectSet<GROUPING> _GROUPINGs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HOLDING_FILE_NAME> HOLDING_FILE_NAME
        {
            get
            {
                if ((_HOLDING_FILE_NAME == null))
                {
                    _HOLDING_FILE_NAME = base.CreateObjectSet<HOLDING_FILE_NAME>("HOLDING_FILE_NAME");
                }
                return _HOLDING_FILE_NAME;
            }
        }
        private ObjectSet<HOLDING_FILE_NAME> _HOLDING_FILE_NAME;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IMA_SECTOR> IMA_SECTOR
        {
            get
            {
                if ((_IMA_SECTOR == null))
                {
                    _IMA_SECTOR = base.CreateObjectSet<IMA_SECTOR>("IMA_SECTOR");
                }
                return _IMA_SECTOR;
            }
        }
        private ObjectSet<IMA_SECTOR> _IMA_SECTOR;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INDEX_ELEMENT> INDEX_ELEMENT
        {
            get
            {
                if ((_INDEX_ELEMENT == null))
                {
                    _INDEX_ELEMENT = base.CreateObjectSet<INDEX_ELEMENT>("INDEX_ELEMENT");
                }
                return _INDEX_ELEMENT;
            }
        }
        private ObjectSet<INDEX_ELEMENT> _INDEX_ELEMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INDEX_TYPE> INDEX_TYPE
        {
            get
            {
                if ((_INDEX_TYPE == null))
                {
                    _INDEX_TYPE = base.CreateObjectSet<INDEX_TYPE>("INDEX_TYPE");
                }
                return _INDEX_TYPE;
            }
        }
        private ObjectSet<INDEX_TYPE> _INDEX_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INDEX_VARIANT_TYPE> INDEX_VARIANT_TYPE
        {
            get
            {
                if ((_INDEX_VARIANT_TYPE == null))
                {
                    _INDEX_VARIANT_TYPE = base.CreateObjectSet<INDEX_VARIANT_TYPE>("INDEX_VARIANT_TYPE");
                }
                return _INDEX_VARIANT_TYPE;
            }
        }
        private ObjectSet<INDEX_VARIANT_TYPE> _INDEX_VARIANT_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NAV_FILE_NAME> NAV_FILE_NAME
        {
            get
            {
                if ((_NAV_FILE_NAME == null))
                {
                    _NAV_FILE_NAME = base.CreateObjectSet<NAV_FILE_NAME>("NAV_FILE_NAME");
                }
                return _NAV_FILE_NAME;
            }
        }
        private ObjectSet<NAV_FILE_NAME> _NAV_FILE_NAME;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PARTY> PARTies
        {
            get
            {
                if ((_PARTies == null))
                {
                    _PARTies = base.CreateObjectSet<PARTY>("PARTies");
                }
                return _PARTies;
            }
        }
        private ObjectSet<PARTY> _PARTies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PARTY_ROLE> PARTY_ROLE
        {
            get
            {
                if ((_PARTY_ROLE == null))
                {
                    _PARTY_ROLE = base.CreateObjectSet<PARTY_ROLE>("PARTY_ROLE");
                }
                return _PARTY_ROLE;
            }
        }
        private ObjectSet<PARTY_ROLE> _PARTY_ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PARTY_ROLE_TYPE> PARTY_ROLE_TYPE
        {
            get
            {
                if ((_PARTY_ROLE_TYPE == null))
                {
                    _PARTY_ROLE_TYPE = base.CreateObjectSet<PARTY_ROLE_TYPE>("PARTY_ROLE_TYPE");
                }
                return _PARTY_ROLE_TYPE;
            }
        }
        private ObjectSet<PARTY_ROLE_TYPE> _PARTY_ROLE_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RATING> RATINGs
        {
            get
            {
                if ((_RATINGs == null))
                {
                    _RATINGs = base.CreateObjectSet<RATING>("RATINGs");
                }
                return _RATINGs;
            }
        }
        private ObjectSet<RATING> _RATINGs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REBALANCING_FREQUENCY> REBALANCING_FREQUENCY
        {
            get
            {
                if ((_REBALANCING_FREQUENCY == null))
                {
                    _REBALANCING_FREQUENCY = base.CreateObjectSet<REBALANCING_FREQUENCY>("REBALANCING_FREQUENCY");
                }
                return _REBALANCING_FREQUENCY;
            }
        }
        private ObjectSet<REBALANCING_FREQUENCY> _REBALANCING_FREQUENCY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SECURITY_GROUP> SECURITY_GROUP
        {
            get
            {
                if ((_SECURITY_GROUP == null))
                {
                    _SECURITY_GROUP = base.CreateObjectSet<SECURITY_GROUP>("SECURITY_GROUP");
                }
                return _SECURITY_GROUP;
            }
        }
        private ObjectSet<SECURITY_GROUP> _SECURITY_GROUP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SECURITY_GROUP_ROLE> SECURITY_GROUP_ROLE
        {
            get
            {
                if ((_SECURITY_GROUP_ROLE == null))
                {
                    _SECURITY_GROUP_ROLE = base.CreateObjectSet<SECURITY_GROUP_ROLE>("SECURITY_GROUP_ROLE");
                }
                return _SECURITY_GROUP_ROLE;
            }
        }
        private ObjectSet<SECURITY_GROUP_ROLE> _SECURITY_GROUP_ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SECURITY_GROUP_ROLE_TYPE> SECURITY_GROUP_ROLE_TYPE
        {
            get
            {
                if ((_SECURITY_GROUP_ROLE_TYPE == null))
                {
                    _SECURITY_GROUP_ROLE_TYPE = base.CreateObjectSet<SECURITY_GROUP_ROLE_TYPE>("SECURITY_GROUP_ROLE_TYPE");
                }
                return _SECURITY_GROUP_ROLE_TYPE;
            }
        }
        private ObjectSet<SECURITY_GROUP_ROLE_TYPE> _SECURITY_GROUP_ROLE_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SHARECLASS> SHARECLASSes
        {
            get
            {
                if ((_SHARECLASSes == null))
                {
                    _SHARECLASSes = base.CreateObjectSet<SHARECLASS>("SHARECLASSes");
                }
                return _SHARECLASSes;
            }
        }
        private ObjectSet<SHARECLASS> _SHARECLASSes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SUMMARY_FILE_NAME> SUMMARY_FILE_NAME
        {
            get
            {
                if ((_SUMMARY_FILE_NAME == null))
                {
                    _SUMMARY_FILE_NAME = base.CreateObjectSet<SUMMARY_FILE_NAME>("SUMMARY_FILE_NAME");
                }
                return _SUMMARY_FILE_NAME;
            }
        }
        private ObjectSet<SUMMARY_FILE_NAME> _SUMMARY_FILE_NAME;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UMBRELLA> UMBRELLAs
        {
            get
            {
                if ((_UMBRELLAs == null))
                {
                    _UMBRELLAs = base.CreateObjectSet<UMBRELLA>("UMBRELLAs");
                }
                return _UMBRELLAs;
            }
        }
        private ObjectSet<UMBRELLA> _UMBRELLAs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VALUATION_FREQUENCY> VALUATION_FREQUENCY
        {
            get
            {
                if ((_VALUATION_FREQUENCY == null))
                {
                    _VALUATION_FREQUENCY = base.CreateObjectSet<VALUATION_FREQUENCY>("VALUATION_FREQUENCY");
                }
                return _VALUATION_FREQUENCY;
            }
        }
        private ObjectSet<VALUATION_FREQUENCY> _VALUATION_FREQUENCY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VALUATION_TIMING> VALUATION_TIMING
        {
            get
            {
                if ((_VALUATION_TIMING == null))
                {
                    _VALUATION_TIMING = base.CreateObjectSet<VALUATION_TIMING>("VALUATION_TIMING");
                }
                return _VALUATION_TIMING;
            }
        }
        private ObjectSet<VALUATION_TIMING> _VALUATION_TIMING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VEHICLE_TYPE> VEHICLE_TYPE
        {
            get
            {
                if ((_VEHICLE_TYPE == null))
                {
                    _VEHICLE_TYPE = base.CreateObjectSet<VEHICLE_TYPE>("VEHICLE_TYPE");
                }
                return _VEHICLE_TYPE;
            }
        }
        private ObjectSet<VEHICLE_TYPE> _VEHICLE_TYPE;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASSET_MATCHING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASSET_MATCHING(ASSET_MATCHING aSSET_MATCHING)
        {
            base.AddObject("ASSET_MATCHING", aSSET_MATCHING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BENCHMARKs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBENCHMARKs(BENCHMARK bENCHMARK)
        {
            base.AddObject("BENCHMARKs", bENCHMARK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BENCHMARK_ASSOCIATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBENCHMARK_ASSOCIATION(BENCHMARK_ASSOCIATION bENCHMARK_ASSOCIATION)
        {
            base.AddObject("BENCHMARK_ASSOCIATION", bENCHMARK_ASSOCIATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BENCHMARK_INDEX EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBENCHMARK_INDEX(BENCHMARK_INDEX bENCHMARK_INDEX)
        {
            base.AddObject("BENCHMARK_INDEX", bENCHMARK_INDEX);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CALENDAR_EVENT_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCALENDAR_EVENT_TYPE(CALENDAR_EVENT_TYPE cALENDAR_EVENT_TYPE)
        {
            base.AddObject("CALENDAR_EVENT_TYPE", cALENDAR_EVENT_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COUNTRies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOUNTRies(COUNTRY cOUNTRY)
        {
            base.AddObject("COUNTRies", cOUNTRY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CURRENCies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCURRENCies(CURRENCY cURRENCY)
        {
            base.AddObject("CURRENCies", cURRENCY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CUT_OFF_TIME EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCUT_OFF_TIME(CUT_OFF_TIME cUT_OFF_TIME)
        {
            base.AddObject("CUT_OFF_TIME", cUT_OFF_TIME);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DISTRIBUTION_FREQUENCY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDISTRIBUTION_FREQUENCY(DISTRIBUTION_FREQUENCY dISTRIBUTION_FREQUENCY)
        {
            base.AddObject("DISTRIBUTION_FREQUENCY", dISTRIBUTION_FREQUENCY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DISTRIBUTION_POLICY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDISTRIBUTION_POLICY(DISTRIBUTION_POLICY dISTRIBUTION_POLICY)
        {
            base.AddObject("DISTRIBUTION_POLICY", dISTRIBUTION_POLICY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FILE_PROVIDER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFILE_PROVIDER(FILE_PROVIDER fILE_PROVIDER)
        {
            base.AddObject("FILE_PROVIDER", fILE_PROVIDER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FISCAL_YEAR_END EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFISCAL_YEAR_END(FISCAL_YEAR_END fISCAL_YEAR_END)
        {
            base.AddObject("FISCAL_YEAR_END", fISCAL_YEAR_END);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUNDs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUNDs(FUND fUND)
        {
            base.AddObject("FUNDs", fUND);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_ASSET EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_ASSET(FUND_ASSET fUND_ASSET)
        {
            base.AddObject("FUND_ASSET", fUND_ASSET);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_ASSET_IDENTIFIER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_ASSET_IDENTIFIER(FUND_ASSET_IDENTIFIER fUND_ASSET_IDENTIFIER)
        {
            base.AddObject("FUND_ASSET_IDENTIFIER", fUND_ASSET_IDENTIFIER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_ASSET_IDENTIFIER_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_ASSET_IDENTIFIER_TYPE(FUND_ASSET_IDENTIFIER_TYPE fUND_ASSET_IDENTIFIER_TYPE)
        {
            base.AddObject("FUND_ASSET_IDENTIFIER_TYPE", fUND_ASSET_IDENTIFIER_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_ASSET_PUBLICATION_MEDIA EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_ASSET_PUBLICATION_MEDIA(FUND_ASSET_PUBLICATION_MEDIA fUND_ASSET_PUBLICATION_MEDIA)
        {
            base.AddObject("FUND_ASSET_PUBLICATION_MEDIA", fUND_ASSET_PUBLICATION_MEDIA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_ASSET_RATING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_ASSET_RATING(FUND_ASSET_RATING fUND_ASSET_RATING)
        {
            base.AddObject("FUND_ASSET_RATING", fUND_ASSET_RATING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_BENCHMARK_ASSOCIATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_BENCHMARK_ASSOCIATION(FUND_BENCHMARK_ASSOCIATION fUND_BENCHMARK_ASSOCIATION)
        {
            base.AddObject("FUND_BENCHMARK_ASSOCIATION", fUND_BENCHMARK_ASSOCIATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_BENCHMARK_ASSOCIATION_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_BENCHMARK_ASSOCIATION_TYPE(FUND_BENCHMARK_ASSOCIATION_TYPE fUND_BENCHMARK_ASSOCIATION_TYPE)
        {
            base.AddObject("FUND_BENCHMARK_ASSOCIATION_TYPE", fUND_BENCHMARK_ASSOCIATION_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_CALENDAR_EVENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_CALENDAR_EVENT(FUND_CALENDAR_EVENT fUND_CALENDAR_EVENT)
        {
            base.AddObject("FUND_CALENDAR_EVENT", fUND_CALENDAR_EVENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_GROUPING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_GROUPING(FUND_GROUPING fUND_GROUPING)
        {
            base.AddObject("FUND_GROUPING", fUND_GROUPING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_PAYMENT_CURRENCY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_PAYMENT_CURRENCY(FUND_PAYMENT_CURRENCY fUND_PAYMENT_CURRENCY)
        {
            base.AddObject("FUND_PAYMENT_CURRENCY", fUND_PAYMENT_CURRENCY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_PORTFOLIO_MANAGER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_PORTFOLIO_MANAGER(FUND_PORTFOLIO_MANAGER fUND_PORTFOLIO_MANAGER)
        {
            base.AddObject("FUND_PORTFOLIO_MANAGER", fUND_PORTFOLIO_MANAGER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_REGISTERED_COUNTRY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_REGISTERED_COUNTRY(FUND_REGISTERED_COUNTRY fUND_REGISTERED_COUNTRY)
        {
            base.AddObject("FUND_REGISTERED_COUNTRY", fUND_REGISTERED_COUNTRY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_REPORTING_CURRENCY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_REPORTING_CURRENCY(FUND_REPORTING_CURRENCY fUND_REPORTING_CURRENCY)
        {
            base.AddObject("FUND_REPORTING_CURRENCY", fUND_REPORTING_CURRENCY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_SHARECLASS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_SHARECLASS(FUND_SHARECLASS fUND_SHARECLASS)
        {
            base.AddObject("FUND_SHARECLASS", fUND_SHARECLASS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_SHARECLASS_FEATURE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_SHARECLASS_FEATURE(FUND_SHARECLASS_FEATURE fUND_SHARECLASS_FEATURE)
        {
            base.AddObject("FUND_SHARECLASS_FEATURE", fUND_SHARECLASS_FEATURE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_SHARECLASS_FEATURE_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_SHARECLASS_FEATURE_TYPE(FUND_SHARECLASS_FEATURE_TYPE fUND_SHARECLASS_FEATURE_TYPE)
        {
            base.AddObject("FUND_SHARECLASS_FEATURE_TYPE", fUND_SHARECLASS_FEATURE_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_SHARECLASS_MANAGEMENT_FEE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_SHARECLASS_MANAGEMENT_FEE(FUND_SHARECLASS_MANAGEMENT_FEE fUND_SHARECLASS_MANAGEMENT_FEE)
        {
            base.AddObject("FUND_SHARECLASS_MANAGEMENT_FEE", fUND_SHARECLASS_MANAGEMENT_FEE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FUND_VALUATION_TIMING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFUND_VALUATION_TIMING(FUND_VALUATION_TIMING fUND_VALUATION_TIMING)
        {
            base.AddObject("FUND_VALUATION_TIMING", fUND_VALUATION_TIMING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GROUP_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGROUP_TYPE(GROUP_TYPE gROUP_TYPE)
        {
            base.AddObject("GROUP_TYPE", gROUP_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GROUP_USAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGROUP_USAGE(GROUP_USAGE gROUP_USAGE)
        {
            base.AddObject("GROUP_USAGE", gROUP_USAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GROUPINGs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGROUPINGs(GROUPING gROUPING)
        {
            base.AddObject("GROUPINGs", gROUPING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HOLDING_FILE_NAME EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHOLDING_FILE_NAME(HOLDING_FILE_NAME hOLDING_FILE_NAME)
        {
            base.AddObject("HOLDING_FILE_NAME", hOLDING_FILE_NAME);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IMA_SECTOR EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIMA_SECTOR(IMA_SECTOR iMA_SECTOR)
        {
            base.AddObject("IMA_SECTOR", iMA_SECTOR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INDEX_ELEMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINDEX_ELEMENT(INDEX_ELEMENT iNDEX_ELEMENT)
        {
            base.AddObject("INDEX_ELEMENT", iNDEX_ELEMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INDEX_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINDEX_TYPE(INDEX_TYPE iNDEX_TYPE)
        {
            base.AddObject("INDEX_TYPE", iNDEX_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INDEX_VARIANT_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINDEX_VARIANT_TYPE(INDEX_VARIANT_TYPE iNDEX_VARIANT_TYPE)
        {
            base.AddObject("INDEX_VARIANT_TYPE", iNDEX_VARIANT_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NAV_FILE_NAME EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNAV_FILE_NAME(NAV_FILE_NAME nAV_FILE_NAME)
        {
            base.AddObject("NAV_FILE_NAME", nAV_FILE_NAME);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PARTies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPARTies(PARTY pARTY)
        {
            base.AddObject("PARTies", pARTY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PARTY_ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPARTY_ROLE(PARTY_ROLE pARTY_ROLE)
        {
            base.AddObject("PARTY_ROLE", pARTY_ROLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PARTY_ROLE_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPARTY_ROLE_TYPE(PARTY_ROLE_TYPE pARTY_ROLE_TYPE)
        {
            base.AddObject("PARTY_ROLE_TYPE", pARTY_ROLE_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RATINGs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRATINGs(RATING rATING)
        {
            base.AddObject("RATINGs", rATING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REBALANCING_FREQUENCY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREBALANCING_FREQUENCY(REBALANCING_FREQUENCY rEBALANCING_FREQUENCY)
        {
            base.AddObject("REBALANCING_FREQUENCY", rEBALANCING_FREQUENCY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SECURITY_GROUP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSECURITY_GROUP(SECURITY_GROUP sECURITY_GROUP)
        {
            base.AddObject("SECURITY_GROUP", sECURITY_GROUP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SECURITY_GROUP_ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSECURITY_GROUP_ROLE(SECURITY_GROUP_ROLE sECURITY_GROUP_ROLE)
        {
            base.AddObject("SECURITY_GROUP_ROLE", sECURITY_GROUP_ROLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SECURITY_GROUP_ROLE_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSECURITY_GROUP_ROLE_TYPE(SECURITY_GROUP_ROLE_TYPE sECURITY_GROUP_ROLE_TYPE)
        {
            base.AddObject("SECURITY_GROUP_ROLE_TYPE", sECURITY_GROUP_ROLE_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SHARECLASSes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSHARECLASSes(SHARECLASS sHARECLASS)
        {
            base.AddObject("SHARECLASSes", sHARECLASS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SUMMARY_FILE_NAME EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSUMMARY_FILE_NAME(SUMMARY_FILE_NAME sUMMARY_FILE_NAME)
        {
            base.AddObject("SUMMARY_FILE_NAME", sUMMARY_FILE_NAME);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UMBRELLAs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUMBRELLAs(UMBRELLA uMBRELLA)
        {
            base.AddObject("UMBRELLAs", uMBRELLA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VALUATION_FREQUENCY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVALUATION_FREQUENCY(VALUATION_FREQUENCY vALUATION_FREQUENCY)
        {
            base.AddObject("VALUATION_FREQUENCY", vALUATION_FREQUENCY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VALUATION_TIMING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVALUATION_TIMING(VALUATION_TIMING vALUATION_TIMING)
        {
            base.AddObject("VALUATION_TIMING", vALUATION_TIMING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VEHICLE_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVEHICLE_TYPE(VEHICLE_TYPE vEHICLE_TYPE)
        {
            base.AddObject("VEHICLE_TYPE", vEHICLE_TYPE);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="ASSET_MATCHING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASSET_MATCHING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASSET_MATCHING object.
        /// </summary>
        /// <param name="fDW_ASSET_EXTERNAL_ID">Initial value of the FDW_ASSET_EXTERNAL_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static ASSET_MATCHING CreateASSET_MATCHING(global::System.String fDW_ASSET_EXTERNAL_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            ASSET_MATCHING aSSET_MATCHING = new ASSET_MATCHING();
            aSSET_MATCHING.FDW_ASSET_EXTERNAL_ID = fDW_ASSET_EXTERNAL_ID;
            aSSET_MATCHING.FDA_USER_CODE = fDA_USER_CODE;
            aSSET_MATCHING.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            aSSET_MATCHING.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return aSSET_MATCHING;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDW_ASSET_EXTERNAL_ID
        {
            get
            {
                return _FDW_ASSET_EXTERNAL_ID;
            }
            set
            {
                if (_FDW_ASSET_EXTERNAL_ID != value)
                {
                    OnFDW_ASSET_EXTERNAL_IDChanging(value);
                    ReportPropertyChanging("FDW_ASSET_EXTERNAL_ID");
                    _FDW_ASSET_EXTERNAL_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FDW_ASSET_EXTERNAL_ID");
                    OnFDW_ASSET_EXTERNAL_IDChanged();
                }
            }
        }
        private global::System.String _FDW_ASSET_EXTERNAL_ID;
        partial void OnFDW_ASSET_EXTERNAL_IDChanging(global::System.String value);
        partial void OnFDW_ASSET_EXTERNAL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SEDOL
        {
            get
            {
                return _SEDOL;
            }
            set
            {
                OnSEDOLChanging(value);
                ReportPropertyChanging("SEDOL");
                _SEDOL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SEDOL");
                OnSEDOLChanged();
            }
        }
        private global::System.String _SEDOL;
        partial void OnSEDOLChanging(global::System.String value);
        partial void OnSEDOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CUSIP
        {
            get
            {
                return _CUSIP;
            }
            set
            {
                OnCUSIPChanging(value);
                ReportPropertyChanging("CUSIP");
                _CUSIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CUSIP");
                OnCUSIPChanged();
            }
        }
        private global::System.String _CUSIP;
        partial void OnCUSIPChanging(global::System.String value);
        partial void OnCUSIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISIN
        {
            get
            {
                return _ISIN;
            }
            set
            {
                OnISINChanging(value);
                ReportPropertyChanging("ISIN");
                _ISIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISIN");
                OnISINChanged();
            }
        }
        private global::System.String _ISIN;
        partial void OnISINChanging(global::System.String value);
        partial void OnISINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OTHER_CD
        {
            get
            {
                return _OTHER_CD;
            }
            set
            {
                OnOTHER_CDChanging(value);
                ReportPropertyChanging("OTHER_CD");
                _OTHER_CD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OTHER_CD");
                OnOTHER_CDChanged();
            }
        }
        private global::System.String _OTHER_CD;
        partial void OnOTHER_CDChanging(global::System.String value);
        partial void OnOTHER_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CG_SYMBOL
        {
            get
            {
                return _CG_SYMBOL;
            }
            set
            {
                OnCG_SYMBOLChanging(value);
                ReportPropertyChanging("CG_SYMBOL");
                _CG_SYMBOL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CG_SYMBOL");
                OnCG_SYMBOLChanged();
            }
        }
        private global::System.String _CG_SYMBOL;
        partial void OnCG_SYMBOLChanging(global::System.String value);
        partial void OnCG_SYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_CD
        {
            get
            {
                return _CURRENCY_CD;
            }
            set
            {
                OnCURRENCY_CDChanging(value);
                ReportPropertyChanging("CURRENCY_CD");
                _CURRENCY_CD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY_CD");
                OnCURRENCY_CDChanged();
            }
        }
        private global::System.String _CURRENCY_CD;
        partial void OnCURRENCY_CDChanging(global::System.String value);
        partial void OnCURRENCY_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CD
        {
            get
            {
                return _COUNTRY_CD;
            }
            set
            {
                OnCOUNTRY_CDChanging(value);
                ReportPropertyChanging("COUNTRY_CD");
                _COUNTRY_CD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUNTRY_CD");
                OnCOUNTRY_CDChanged();
            }
        }
        private global::System.String _COUNTRY_CD;
        partial void OnCOUNTRY_CDChanging(global::System.String value);
        partial void OnCOUNTRY_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASSET_CATEGORY_CD
        {
            get
            {
                return _ASSET_CATEGORY_CD;
            }
            set
            {
                OnASSET_CATEGORY_CDChanging(value);
                ReportPropertyChanging("ASSET_CATEGORY_CD");
                _ASSET_CATEGORY_CD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASSET_CATEGORY_CD");
                OnASSET_CATEGORY_CDChanged();
            }
        }
        private global::System.String _ASSET_CATEGORY_CD;
        partial void OnASSET_CATEGORY_CDChanging(global::System.String value);
        partial void OnASSET_CATEGORY_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUB_INDUSTRY_CD
        {
            get
            {
                return _SUB_INDUSTRY_CD;
            }
            set
            {
                OnSUB_INDUSTRY_CDChanging(value);
                ReportPropertyChanging("SUB_INDUSTRY_CD");
                _SUB_INDUSTRY_CD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUB_INDUSTRY_CD");
                OnSUB_INDUSTRY_CDChanged();
            }
        }
        private global::System.String _SUB_INDUSTRY_CD;
        partial void OnSUB_INDUSTRY_CDChanging(global::System.String value);
        partial void OnSUB_INDUSTRY_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SOURCE
        {
            get
            {
                return _SOURCE;
            }
            set
            {
                OnSOURCEChanging(value);
                ReportPropertyChanging("SOURCE");
                _SOURCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SOURCE");
                OnSOURCEChanged();
            }
        }
        private global::System.String _SOURCE;
        partial void OnSOURCEChanging(global::System.String value);
        partial void OnSOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REMOVE_IND
        {
            get
            {
                return _REMOVE_IND;
            }
            set
            {
                OnREMOVE_INDChanging(value);
                ReportPropertyChanging("REMOVE_IND");
                _REMOVE_IND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REMOVE_IND");
                OnREMOVE_INDChanged();
            }
        }
        private global::System.String _REMOVE_IND;
        partial void OnREMOVE_INDChanging(global::System.String value);
        partial void OnREMOVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ERROR_IND
        {
            get
            {
                return _ERROR_IND;
            }
            set
            {
                OnERROR_INDChanging(value);
                ReportPropertyChanging("ERROR_IND");
                _ERROR_IND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ERROR_IND");
                OnERROR_INDChanged();
            }
        }
        private global::System.String _ERROR_IND;
        partial void OnERROR_INDChanging(global::System.String value);
        partial void OnERROR_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LOG_INTERFACE_STEP_ID
        {
            get
            {
                return _LOG_INTERFACE_STEP_ID;
            }
            set
            {
                OnLOG_INTERFACE_STEP_IDChanging(value);
                ReportPropertyChanging("LOG_INTERFACE_STEP_ID");
                _LOG_INTERFACE_STEP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOG_INTERFACE_STEP_ID");
                OnLOG_INTERFACE_STEP_IDChanged();
            }
        }
        private Nullable<global::System.Decimal> _LOG_INTERFACE_STEP_ID;
        partial void OnLOG_INTERFACE_STEP_IDChanging(Nullable<global::System.Decimal> value);
        partial void OnLOG_INTERFACE_STEP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FDA_CGSYMBOL_UPD_DATE
        {
            get
            {
                return _FDA_CGSYMBOL_UPD_DATE;
            }
            set
            {
                OnFDA_CGSYMBOL_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_CGSYMBOL_UPD_DATE");
                _FDA_CGSYMBOL_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CGSYMBOL_UPD_DATE");
                OnFDA_CGSYMBOL_UPD_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _FDA_CGSYMBOL_UPD_DATE;
        partial void OnFDA_CGSYMBOL_UPD_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnFDA_CGSYMBOL_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="BENCHMARK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BENCHMARK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BENCHMARK object.
        /// </summary>
        /// <param name="bENCHMARK_ID">Initial value of the BENCHMARK_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static BENCHMARK CreateBENCHMARK(global::System.Int32 bENCHMARK_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            BENCHMARK bENCHMARK = new BENCHMARK();
            bENCHMARK.BENCHMARK_ID = bENCHMARK_ID;
            bENCHMARK.CODE = cODE;
            bENCHMARK.ACTIVE_IND = aCTIVE_IND;
            bENCHMARK.FDA_USER_CODE = fDA_USER_CODE;
            bENCHMARK.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            bENCHMARK.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return bENCHMARK;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BENCHMARK_ID
        {
            get
            {
                return _BENCHMARK_ID;
            }
            set
            {
                if (_BENCHMARK_ID != value)
                {
                    OnBENCHMARK_IDChanging(value);
                    ReportPropertyChanging("BENCHMARK_ID");
                    _BENCHMARK_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BENCHMARK_ID");
                    OnBENCHMARK_IDChanged();
                }
            }
        }
        private global::System.Int32 _BENCHMARK_ID;
        partial void OnBENCHMARK_IDChanging(global::System.Int32 value);
        partial void OnBENCHMARK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SHORT_NAME
        {
            get
            {
                return _SHORT_NAME;
            }
            set
            {
                OnSHORT_NAMEChanging(value);
                ReportPropertyChanging("SHORT_NAME");
                _SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SHORT_NAME");
                OnSHORT_NAMEChanged();
            }
        }
        private global::System.String _SHORT_NAME;
        partial void OnSHORT_NAMEChanging(global::System.String value);
        partial void OnSHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LONG_NAME
        {
            get
            {
                return _LONG_NAME;
            }
            set
            {
                OnLONG_NAMEChanging(value);
                ReportPropertyChanging("LONG_NAME");
                _LONG_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LONG_NAME");
                OnLONG_NAMEChanged();
            }
        }
        private global::System.String _LONG_NAME;
        partial void OnLONG_NAMEChanging(global::System.String value);
        partial void OnLONG_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> REBALANCING_FREQUENCY_ID
        {
            get
            {
                return _REBALANCING_FREQUENCY_ID;
            }
            set
            {
                OnREBALANCING_FREQUENCY_IDChanging(value);
                ReportPropertyChanging("REBALANCING_FREQUENCY_ID");
                _REBALANCING_FREQUENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REBALANCING_FREQUENCY_ID");
                OnREBALANCING_FREQUENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _REBALANCING_FREQUENCY_ID;
        partial void OnREBALANCING_FREQUENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnREBALANCING_FREQUENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VALUATION_FREQUENCY_ID
        {
            get
            {
                return _VALUATION_FREQUENCY_ID;
            }
            set
            {
                OnVALUATION_FREQUENCY_IDChanging(value);
                ReportPropertyChanging("VALUATION_FREQUENCY_ID");
                _VALUATION_FREQUENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUATION_FREQUENCY_ID");
                OnVALUATION_FREQUENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _VALUATION_FREQUENCY_ID;
        partial void OnVALUATION_FREQUENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnVALUATION_FREQUENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                OnCURRENCY_IDChanging(value);
                ReportPropertyChanging("CURRENCY_ID");
                _CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CURRENCY_ID");
                OnCURRENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefBENCHMARK62", "BENCHMARK_ASSOCIATION")]
        public EntityCollection<BENCHMARK_ASSOCIATION> BENCHMARK_ASSOCIATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK_ASSOCIATION>("FDAModel.RefBENCHMARK62", "BENCHMARK_ASSOCIATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK_ASSOCIATION>("FDAModel.RefBENCHMARK62", "BENCHMARK_ASSOCIATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefBENCHMARK69", "BENCHMARK_INDEX")]
        public EntityCollection<BENCHMARK_INDEX> BENCHMARK_INDEX
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK_INDEX>("FDAModel.RefBENCHMARK69", "BENCHMARK_INDEX");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK_INDEX>("FDAModel.RefBENCHMARK69", "BENCHMARK_INDEX", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY64", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY64", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY64", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY64", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY64", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefREBALANCING_FREQUENCY71", "REBALANCING_FREQUENCY")]
        public REBALANCING_FREQUENCY REBALANCING_FREQUENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REBALANCING_FREQUENCY>("FDAModel.RefREBALANCING_FREQUENCY71", "REBALANCING_FREQUENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REBALANCING_FREQUENCY>("FDAModel.RefREBALANCING_FREQUENCY71", "REBALANCING_FREQUENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REBALANCING_FREQUENCY> REBALANCING_FREQUENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REBALANCING_FREQUENCY>("FDAModel.RefREBALANCING_FREQUENCY71", "REBALANCING_FREQUENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REBALANCING_FREQUENCY>("FDAModel.RefREBALANCING_FREQUENCY71", "REBALANCING_FREQUENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVALUATION_FREQUENCY60", "VALUATION_FREQUENCY")]
        public VALUATION_FREQUENCY VALUATION_FREQUENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY60", "VALUATION_FREQUENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY60", "VALUATION_FREQUENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VALUATION_FREQUENCY> VALUATION_FREQUENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY60", "VALUATION_FREQUENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY60", "VALUATION_FREQUENCY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="BENCHMARK_ASSOCIATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BENCHMARK_ASSOCIATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BENCHMARK_ASSOCIATION object.
        /// </summary>
        /// <param name="fUND_BENCHMARK_ASSOCIATION_ID">Initial value of the FUND_BENCHMARK_ASSOCIATION_ID property.</param>
        /// <param name="vALID_FROM_DATE">Initial value of the VALID_FROM_DATE property.</param>
        /// <param name="bENCHMARK_ID">Initial value of the BENCHMARK_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static BENCHMARK_ASSOCIATION CreateBENCHMARK_ASSOCIATION(global::System.Int32 fUND_BENCHMARK_ASSOCIATION_ID, global::System.DateTime vALID_FROM_DATE, global::System.Int32 bENCHMARK_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            BENCHMARK_ASSOCIATION bENCHMARK_ASSOCIATION = new BENCHMARK_ASSOCIATION();
            bENCHMARK_ASSOCIATION.FUND_BENCHMARK_ASSOCIATION_ID = fUND_BENCHMARK_ASSOCIATION_ID;
            bENCHMARK_ASSOCIATION.VALID_FROM_DATE = vALID_FROM_DATE;
            bENCHMARK_ASSOCIATION.BENCHMARK_ID = bENCHMARK_ID;
            bENCHMARK_ASSOCIATION.FDA_USER_CODE = fDA_USER_CODE;
            bENCHMARK_ASSOCIATION.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            bENCHMARK_ASSOCIATION.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return bENCHMARK_ASSOCIATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_BENCHMARK_ASSOCIATION_ID
        {
            get
            {
                return _FUND_BENCHMARK_ASSOCIATION_ID;
            }
            set
            {
                if (_FUND_BENCHMARK_ASSOCIATION_ID != value)
                {
                    OnFUND_BENCHMARK_ASSOCIATION_IDChanging(value);
                    ReportPropertyChanging("FUND_BENCHMARK_ASSOCIATION_ID");
                    _FUND_BENCHMARK_ASSOCIATION_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_BENCHMARK_ASSOCIATION_ID");
                    OnFUND_BENCHMARK_ASSOCIATION_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_BENCHMARK_ASSOCIATION_ID;
        partial void OnFUND_BENCHMARK_ASSOCIATION_IDChanging(global::System.Int32 value);
        partial void OnFUND_BENCHMARK_ASSOCIATION_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime VALID_FROM_DATE
        {
            get
            {
                return _VALID_FROM_DATE;
            }
            set
            {
                if (_VALID_FROM_DATE != value)
                {
                    OnVALID_FROM_DATEChanging(value);
                    ReportPropertyChanging("VALID_FROM_DATE");
                    _VALID_FROM_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VALID_FROM_DATE");
                    OnVALID_FROM_DATEChanged();
                }
            }
        }
        private global::System.DateTime _VALID_FROM_DATE;
        partial void OnVALID_FROM_DATEChanging(global::System.DateTime value);
        partial void OnVALID_FROM_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BENCHMARK_ID
        {
            get
            {
                return _BENCHMARK_ID;
            }
            set
            {
                OnBENCHMARK_IDChanging(value);
                ReportPropertyChanging("BENCHMARK_ID");
                _BENCHMARK_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BENCHMARK_ID");
                OnBENCHMARK_IDChanged();
            }
        }
        private global::System.Int32 _BENCHMARK_ID;
        partial void OnBENCHMARK_IDChanging(global::System.Int32 value);
        partial void OnBENCHMARK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefBENCHMARK62", "BENCHMARK")]
        public BENCHMARK BENCHMARK
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK62", "BENCHMARK").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK62", "BENCHMARK").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BENCHMARK> BENCHMARKReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK62", "BENCHMARK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK62", "BENCHMARK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_BENCHMARK_ASSOCIATION174", "FUND_BENCHMARK_ASSOCIATION")]
        public FUND_BENCHMARK_ASSOCIATION FUND_BENCHMARK_ASSOCIATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION174", "FUND_BENCHMARK_ASSOCIATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION174", "FUND_BENCHMARK_ASSOCIATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_BENCHMARK_ASSOCIATION> FUND_BENCHMARK_ASSOCIATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION174", "FUND_BENCHMARK_ASSOCIATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION174", "FUND_BENCHMARK_ASSOCIATION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="BENCHMARK_INDEX")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BENCHMARK_INDEX : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BENCHMARK_INDEX object.
        /// </summary>
        /// <param name="bENCHMARK_ID">Initial value of the BENCHMARK_ID property.</param>
        /// <param name="iNDEX_ELEMENT_ID">Initial value of the INDEX_ELEMENT_ID property.</param>
        /// <param name="wEIGHT">Initial value of the WEIGHT property.</param>
        /// <param name="cURRENCY_ID">Initial value of the CURRENCY_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static BENCHMARK_INDEX CreateBENCHMARK_INDEX(global::System.Int32 bENCHMARK_ID, global::System.Int32 iNDEX_ELEMENT_ID, global::System.Decimal wEIGHT, global::System.Int32 cURRENCY_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            BENCHMARK_INDEX bENCHMARK_INDEX = new BENCHMARK_INDEX();
            bENCHMARK_INDEX.BENCHMARK_ID = bENCHMARK_ID;
            bENCHMARK_INDEX.INDEX_ELEMENT_ID = iNDEX_ELEMENT_ID;
            bENCHMARK_INDEX.WEIGHT = wEIGHT;
            bENCHMARK_INDEX.CURRENCY_ID = cURRENCY_ID;
            bENCHMARK_INDEX.FDA_USER_CODE = fDA_USER_CODE;
            bENCHMARK_INDEX.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            bENCHMARK_INDEX.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return bENCHMARK_INDEX;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BENCHMARK_ID
        {
            get
            {
                return _BENCHMARK_ID;
            }
            set
            {
                if (_BENCHMARK_ID != value)
                {
                    OnBENCHMARK_IDChanging(value);
                    ReportPropertyChanging("BENCHMARK_ID");
                    _BENCHMARK_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BENCHMARK_ID");
                    OnBENCHMARK_IDChanged();
                }
            }
        }
        private global::System.Int32 _BENCHMARK_ID;
        partial void OnBENCHMARK_IDChanging(global::System.Int32 value);
        partial void OnBENCHMARK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INDEX_ELEMENT_ID
        {
            get
            {
                return _INDEX_ELEMENT_ID;
            }
            set
            {
                if (_INDEX_ELEMENT_ID != value)
                {
                    OnINDEX_ELEMENT_IDChanging(value);
                    ReportPropertyChanging("INDEX_ELEMENT_ID");
                    _INDEX_ELEMENT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("INDEX_ELEMENT_ID");
                    OnINDEX_ELEMENT_IDChanged();
                }
            }
        }
        private global::System.Int32 _INDEX_ELEMENT_ID;
        partial void OnINDEX_ELEMENT_IDChanging(global::System.Int32 value);
        partial void OnINDEX_ELEMENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal WEIGHT
        {
            get
            {
                return _WEIGHT;
            }
            set
            {
                OnWEIGHTChanging(value);
                ReportPropertyChanging("WEIGHT");
                _WEIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WEIGHT");
                OnWEIGHTChanged();
            }
        }
        private global::System.Decimal _WEIGHT;
        partial void OnWEIGHTChanging(global::System.Decimal value);
        partial void OnWEIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                OnCURRENCY_IDChanging(value);
                ReportPropertyChanging("CURRENCY_ID");
                _CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CURRENCY_ID");
                OnCURRENCY_IDChanged();
            }
        }
        private global::System.Int32 _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(global::System.Int32 value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefBENCHMARK69", "BENCHMARK")]
        public BENCHMARK BENCHMARK
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK69", "BENCHMARK").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK69", "BENCHMARK").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BENCHMARK> BENCHMARKReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK69", "BENCHMARK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BENCHMARK>("FDAModel.RefBENCHMARK69", "BENCHMARK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY234", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY234", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY234", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY234", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY234", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefINDEX_ELEMENT70", "INDEX_ELEMENT")]
        public INDEX_ELEMENT INDEX_ELEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_ELEMENT>("FDAModel.RefINDEX_ELEMENT70", "INDEX_ELEMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_ELEMENT>("FDAModel.RefINDEX_ELEMENT70", "INDEX_ELEMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INDEX_ELEMENT> INDEX_ELEMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_ELEMENT>("FDAModel.RefINDEX_ELEMENT70", "INDEX_ELEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INDEX_ELEMENT>("FDAModel.RefINDEX_ELEMENT70", "INDEX_ELEMENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="CALENDAR_EVENT_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CALENDAR_EVENT_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CALENDAR_EVENT_TYPE object.
        /// </summary>
        /// <param name="cALENDAR_EVENT_TYPE_ID">Initial value of the CALENDAR_EVENT_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static CALENDAR_EVENT_TYPE CreateCALENDAR_EVENT_TYPE(global::System.Int32 cALENDAR_EVENT_TYPE_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            CALENDAR_EVENT_TYPE cALENDAR_EVENT_TYPE = new CALENDAR_EVENT_TYPE();
            cALENDAR_EVENT_TYPE.CALENDAR_EVENT_TYPE_ID = cALENDAR_EVENT_TYPE_ID;
            cALENDAR_EVENT_TYPE.CODE = cODE;
            cALENDAR_EVENT_TYPE.ACTIVE_IND = aCTIVE_IND;
            cALENDAR_EVENT_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            cALENDAR_EVENT_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            cALENDAR_EVENT_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return cALENDAR_EVENT_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CALENDAR_EVENT_TYPE_ID
        {
            get
            {
                return _CALENDAR_EVENT_TYPE_ID;
            }
            set
            {
                if (_CALENDAR_EVENT_TYPE_ID != value)
                {
                    OnCALENDAR_EVENT_TYPE_IDChanging(value);
                    ReportPropertyChanging("CALENDAR_EVENT_TYPE_ID");
                    _CALENDAR_EVENT_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CALENDAR_EVENT_TYPE_ID");
                    OnCALENDAR_EVENT_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _CALENDAR_EVENT_TYPE_ID;
        partial void OnCALENDAR_EVENT_TYPE_IDChanging(global::System.Int32 value);
        partial void OnCALENDAR_EVENT_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCALENDAR_EVENT_TYPE41", "FUND_CALENDAR_EVENT")]
        public EntityCollection<FUND_CALENDAR_EVENT> FUND_CALENDAR_EVENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_CALENDAR_EVENT>("FDAModel.RefCALENDAR_EVENT_TYPE41", "FUND_CALENDAR_EVENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_CALENDAR_EVENT>("FDAModel.RefCALENDAR_EVENT_TYPE41", "FUND_CALENDAR_EVENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="COUNTRY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COUNTRY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COUNTRY object.
        /// </summary>
        /// <param name="cOUNTRY_ID">Initial value of the COUNTRY_ID property.</param>
        /// <param name="iSO_CODE">Initial value of the ISO_CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static COUNTRY CreateCOUNTRY(global::System.Int32 cOUNTRY_ID, global::System.String iSO_CODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            COUNTRY cOUNTRY = new COUNTRY();
            cOUNTRY.COUNTRY_ID = cOUNTRY_ID;
            cOUNTRY.ISO_CODE = iSO_CODE;
            cOUNTRY.ACTIVE_IND = aCTIVE_IND;
            cOUNTRY.FDA_USER_CODE = fDA_USER_CODE;
            cOUNTRY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            cOUNTRY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return cOUNTRY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COUNTRY_ID
        {
            get
            {
                return _COUNTRY_ID;
            }
            set
            {
                if (_COUNTRY_ID != value)
                {
                    OnCOUNTRY_IDChanging(value);
                    ReportPropertyChanging("COUNTRY_ID");
                    _COUNTRY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("COUNTRY_ID");
                    OnCOUNTRY_IDChanged();
                }
            }
        }
        private global::System.Int32 _COUNTRY_ID;
        partial void OnCOUNTRY_IDChanging(global::System.Int32 value);
        partial void OnCOUNTRY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISO_CODE
        {
            get
            {
                return _ISO_CODE;
            }
            set
            {
                OnISO_CODEChanging(value);
                ReportPropertyChanging("ISO_CODE");
                _ISO_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISO_CODE");
                OnISO_CODEChanged();
            }
        }
        private global::System.String _ISO_CODE;
        partial void OnISO_CODEChanging(global::System.String value);
        partial void OnISO_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCOUNTRY56", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefCOUNTRY56", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefCOUNTRY56", "UMBRELLA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCOUNTRY58", "FUND_REGISTERED_COUNTRY")]
        public EntityCollection<FUND_REGISTERED_COUNTRY> FUND_REGISTERED_COUNTRY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_REGISTERED_COUNTRY>("FDAModel.RefCOUNTRY58", "FUND_REGISTERED_COUNTRY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_REGISTERED_COUNTRY>("FDAModel.RefCOUNTRY58", "FUND_REGISTERED_COUNTRY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="CURRENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CURRENCY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CURRENCY object.
        /// </summary>
        /// <param name="cURRENCY_ID">Initial value of the CURRENCY_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static CURRENCY CreateCURRENCY(global::System.Int32 cURRENCY_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            CURRENCY cURRENCY = new CURRENCY();
            cURRENCY.CURRENCY_ID = cURRENCY_ID;
            cURRENCY.CODE = cODE;
            cURRENCY.ACTIVE_IND = aCTIVE_IND;
            cURRENCY.FDA_USER_CODE = fDA_USER_CODE;
            cURRENCY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            cURRENCY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return cURRENCY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                if (_CURRENCY_ID != value)
                {
                    OnCURRENCY_IDChanging(value);
                    ReportPropertyChanging("CURRENCY_ID");
                    _CURRENCY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CURRENCY_ID");
                    OnCURRENCY_IDChanged();
                }
            }
        }
        private global::System.Int32 _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(global::System.Int32 value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY64", "BENCHMARK")]
        public EntityCollection<BENCHMARK> BENCHMARKs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK>("FDAModel.RefCURRENCY64", "BENCHMARK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK>("FDAModel.RefCURRENCY64", "BENCHMARK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY234", "BENCHMARK_INDEX")]
        public EntityCollection<BENCHMARK_INDEX> BENCHMARK_INDEX
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK_INDEX>("FDAModel.RefCURRENCY234", "BENCHMARK_INDEX");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK_INDEX>("FDAModel.RefCURRENCY234", "BENCHMARK_INDEX", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY13", "FUND_ASSET")]
        public EntityCollection<FUND_ASSET> FUND_ASSET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET>("FDAModel.RefCURRENCY13", "FUND_ASSET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET>("FDAModel.RefCURRENCY13", "FUND_ASSET", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY230", "FUND_PAYMENT_CURRENCY")]
        public EntityCollection<FUND_PAYMENT_CURRENCY> FUND_PAYMENT_CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_PAYMENT_CURRENCY>("FDAModel.RefCURRENCY230", "FUND_PAYMENT_CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_PAYMENT_CURRENCY>("FDAModel.RefCURRENCY230", "FUND_PAYMENT_CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY28", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefCURRENCY28", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefCURRENCY28", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY29", "FUND")]
        public EntityCollection<FUND> FUNDs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefCURRENCY29", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefCURRENCY29", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY39", "FUND")]
        public EntityCollection<FUND> FUNDs2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefCURRENCY39", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefCURRENCY39", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY45", "FUND_REPORTING_CURRENCY")]
        public EntityCollection<FUND_REPORTING_CURRENCY> FUND_REPORTING_CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_REPORTING_CURRENCY>("FDAModel.RefCURRENCY45", "FUND_REPORTING_CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_REPORTING_CURRENCY>("FDAModel.RefCURRENCY45", "FUND_REPORTING_CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY75", "SHARECLASS")]
        public EntityCollection<SHARECLASS> SHARECLASSes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SHARECLASS>("FDAModel.RefCURRENCY75", "SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SHARECLASS>("FDAModel.RefCURRENCY75", "SHARECLASS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="CUT_OFF_TIME")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CUT_OFF_TIME : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CUT_OFF_TIME object.
        /// </summary>
        /// <param name="cUT_OFF_TIME_ID">Initial value of the CUT_OFF_TIME_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static CUT_OFF_TIME CreateCUT_OFF_TIME(global::System.Int32 cUT_OFF_TIME_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            CUT_OFF_TIME cUT_OFF_TIME = new CUT_OFF_TIME();
            cUT_OFF_TIME.CUT_OFF_TIME_ID = cUT_OFF_TIME_ID;
            cUT_OFF_TIME.CODE = cODE;
            cUT_OFF_TIME.ACTIVE_IND = aCTIVE_IND;
            cUT_OFF_TIME.FDA_USER_CODE = fDA_USER_CODE;
            cUT_OFF_TIME.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            cUT_OFF_TIME.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return cUT_OFF_TIME;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CUT_OFF_TIME_ID
        {
            get
            {
                return _CUT_OFF_TIME_ID;
            }
            set
            {
                if (_CUT_OFF_TIME_ID != value)
                {
                    OnCUT_OFF_TIME_IDChanging(value);
                    ReportPropertyChanging("CUT_OFF_TIME_ID");
                    _CUT_OFF_TIME_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CUT_OFF_TIME_ID");
                    OnCUT_OFF_TIME_IDChanged();
                }
            }
        }
        private global::System.Int32 _CUT_OFF_TIME_ID;
        partial void OnCUT_OFF_TIME_IDChanging(global::System.Int32 value);
        partial void OnCUT_OFF_TIME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCUT_OFF_TIME63", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefCUT_OFF_TIME63", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefCUT_OFF_TIME63", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="DISTRIBUTION_FREQUENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DISTRIBUTION_FREQUENCY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DISTRIBUTION_FREQUENCY object.
        /// </summary>
        /// <param name="dISTRIBUTION_FREQUENCY_ID">Initial value of the DISTRIBUTION_FREQUENCY_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static DISTRIBUTION_FREQUENCY CreateDISTRIBUTION_FREQUENCY(global::System.Int32 dISTRIBUTION_FREQUENCY_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            DISTRIBUTION_FREQUENCY dISTRIBUTION_FREQUENCY = new DISTRIBUTION_FREQUENCY();
            dISTRIBUTION_FREQUENCY.DISTRIBUTION_FREQUENCY_ID = dISTRIBUTION_FREQUENCY_ID;
            dISTRIBUTION_FREQUENCY.CODE = cODE;
            dISTRIBUTION_FREQUENCY.ACTIVE_IND = aCTIVE_IND;
            dISTRIBUTION_FREQUENCY.FDA_USER_CODE = fDA_USER_CODE;
            dISTRIBUTION_FREQUENCY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            dISTRIBUTION_FREQUENCY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return dISTRIBUTION_FREQUENCY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DISTRIBUTION_FREQUENCY_ID
        {
            get
            {
                return _DISTRIBUTION_FREQUENCY_ID;
            }
            set
            {
                if (_DISTRIBUTION_FREQUENCY_ID != value)
                {
                    OnDISTRIBUTION_FREQUENCY_IDChanging(value);
                    ReportPropertyChanging("DISTRIBUTION_FREQUENCY_ID");
                    _DISTRIBUTION_FREQUENCY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DISTRIBUTION_FREQUENCY_ID");
                    OnDISTRIBUTION_FREQUENCY_IDChanged();
                }
            }
        }
        private global::System.Int32 _DISTRIBUTION_FREQUENCY_ID;
        partial void OnDISTRIBUTION_FREQUENCY_IDChanging(global::System.Int32 value);
        partial void OnDISTRIBUTION_FREQUENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefDISTRIBUTION_FREQUENCY247", "FUND_SHARECLASS")]
        public EntityCollection<FUND_SHARECLASS> FUND_SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS>("FDAModel.RefDISTRIBUTION_FREQUENCY247", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS>("FDAModel.RefDISTRIBUTION_FREQUENCY247", "FUND_SHARECLASS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="DISTRIBUTION_POLICY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DISTRIBUTION_POLICY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DISTRIBUTION_POLICY object.
        /// </summary>
        /// <param name="dISTRIBUTION_POLICY_ID">Initial value of the DISTRIBUTION_POLICY_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="dISTRIBUTING_IND">Initial value of the DISTRIBUTING_IND property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static DISTRIBUTION_POLICY CreateDISTRIBUTION_POLICY(global::System.Int32 dISTRIBUTION_POLICY_ID, global::System.String cODE, global::System.String dISTRIBUTING_IND, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            DISTRIBUTION_POLICY dISTRIBUTION_POLICY = new DISTRIBUTION_POLICY();
            dISTRIBUTION_POLICY.DISTRIBUTION_POLICY_ID = dISTRIBUTION_POLICY_ID;
            dISTRIBUTION_POLICY.CODE = cODE;
            dISTRIBUTION_POLICY.DISTRIBUTING_IND = dISTRIBUTING_IND;
            dISTRIBUTION_POLICY.ACTIVE_IND = aCTIVE_IND;
            dISTRIBUTION_POLICY.FDA_USER_CODE = fDA_USER_CODE;
            dISTRIBUTION_POLICY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            dISTRIBUTION_POLICY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return dISTRIBUTION_POLICY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DISTRIBUTION_POLICY_ID
        {
            get
            {
                return _DISTRIBUTION_POLICY_ID;
            }
            set
            {
                if (_DISTRIBUTION_POLICY_ID != value)
                {
                    OnDISTRIBUTION_POLICY_IDChanging(value);
                    ReportPropertyChanging("DISTRIBUTION_POLICY_ID");
                    _DISTRIBUTION_POLICY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DISTRIBUTION_POLICY_ID");
                    OnDISTRIBUTION_POLICY_IDChanged();
                }
            }
        }
        private global::System.Int32 _DISTRIBUTION_POLICY_ID;
        partial void OnDISTRIBUTION_POLICY_IDChanging(global::System.Int32 value);
        partial void OnDISTRIBUTION_POLICY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DISTRIBUTING_IND
        {
            get
            {
                return _DISTRIBUTING_IND;
            }
            set
            {
                OnDISTRIBUTING_INDChanging(value);
                ReportPropertyChanging("DISTRIBUTING_IND");
                _DISTRIBUTING_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DISTRIBUTING_IND");
                OnDISTRIBUTING_INDChanged();
            }
        }
        private global::System.String _DISTRIBUTING_IND;
        partial void OnDISTRIBUTING_INDChanging(global::System.String value);
        partial void OnDISTRIBUTING_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefDISTRIBUTION_POLICY233", "FUND_SHARECLASS")]
        public EntityCollection<FUND_SHARECLASS> FUND_SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS>("FDAModel.RefDISTRIBUTION_POLICY233", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS>("FDAModel.RefDISTRIBUTION_POLICY233", "FUND_SHARECLASS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FILE_PROVIDER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FILE_PROVIDER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FILE_PROVIDER object.
        /// </summary>
        /// <param name="pARTY_ROLE_ID">Initial value of the PARTY_ROLE_ID property.</param>
        /// <param name="iNFO_REQUIRED_IND">Initial value of the INFO_REQUIRED_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FILE_PROVIDER CreateFILE_PROVIDER(global::System.Int32 pARTY_ROLE_ID, global::System.String iNFO_REQUIRED_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FILE_PROVIDER fILE_PROVIDER = new FILE_PROVIDER();
            fILE_PROVIDER.PARTY_ROLE_ID = pARTY_ROLE_ID;
            fILE_PROVIDER.INFO_REQUIRED_IND = iNFO_REQUIRED_IND;
            fILE_PROVIDER.FDA_USER_CODE = fDA_USER_CODE;
            fILE_PROVIDER.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fILE_PROVIDER.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fILE_PROVIDER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARTY_ROLE_ID
        {
            get
            {
                return _PARTY_ROLE_ID;
            }
            set
            {
                if (_PARTY_ROLE_ID != value)
                {
                    OnPARTY_ROLE_IDChanging(value);
                    ReportPropertyChanging("PARTY_ROLE_ID");
                    _PARTY_ROLE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PARTY_ROLE_ID");
                    OnPARTY_ROLE_IDChanged();
                }
            }
        }
        private global::System.Int32 _PARTY_ROLE_ID;
        partial void OnPARTY_ROLE_IDChanging(global::System.Int32 value);
        partial void OnPARTY_ROLE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INFO_REQUIRED_IND
        {
            get
            {
                return _INFO_REQUIRED_IND;
            }
            set
            {
                OnINFO_REQUIRED_INDChanging(value);
                ReportPropertyChanging("INFO_REQUIRED_IND");
                _INFO_REQUIRED_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("INFO_REQUIRED_IND");
                OnINFO_REQUIRED_INDChanged();
            }
        }
        private global::System.String _INFO_REQUIRED_IND;
        partial void OnINFO_REQUIRED_INDChanging(global::System.String value);
        partial void OnINFO_REQUIRED_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFILE_PROVIDER157", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefFILE_PROVIDER157", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefFILE_PROVIDER157", "UMBRELLA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE322", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE322", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE322", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE322", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE322", "PARTY_ROLE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FISCAL_YEAR_END")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FISCAL_YEAR_END : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FISCAL_YEAR_END object.
        /// </summary>
        /// <param name="fISCAL_YEAR_END_ID">Initial value of the FISCAL_YEAR_END_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FISCAL_YEAR_END CreateFISCAL_YEAR_END(global::System.Int32 fISCAL_YEAR_END_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FISCAL_YEAR_END fISCAL_YEAR_END = new FISCAL_YEAR_END();
            fISCAL_YEAR_END.FISCAL_YEAR_END_ID = fISCAL_YEAR_END_ID;
            fISCAL_YEAR_END.CODE = cODE;
            fISCAL_YEAR_END.ACTIVE_IND = aCTIVE_IND;
            fISCAL_YEAR_END.FDA_USER_CODE = fDA_USER_CODE;
            fISCAL_YEAR_END.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fISCAL_YEAR_END.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fISCAL_YEAR_END;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FISCAL_YEAR_END_ID
        {
            get
            {
                return _FISCAL_YEAR_END_ID;
            }
            set
            {
                if (_FISCAL_YEAR_END_ID != value)
                {
                    OnFISCAL_YEAR_END_IDChanging(value);
                    ReportPropertyChanging("FISCAL_YEAR_END_ID");
                    _FISCAL_YEAR_END_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FISCAL_YEAR_END_ID");
                    OnFISCAL_YEAR_END_IDChanged();
                }
            }
        }
        private global::System.Int32 _FISCAL_YEAR_END_ID;
        partial void OnFISCAL_YEAR_END_IDChanging(global::System.Int32 value);
        partial void OnFISCAL_YEAR_END_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFISCALYEAREND", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefFISCALYEAREND", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefFISCALYEAREND", "UMBRELLA", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCRONYM">Initial value of the ACRONYM property.</param>
        /// <param name="iNDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND">Initial value of the INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND property.</param>
        /// <param name="eXTERNAL_FEEDER_FUND_IND">Initial value of the EXTERNAL_FEEDER_FUND_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND CreateFUND(global::System.Int32 fUND_ID, global::System.Int32 cODE, global::System.String aCRONYM, global::System.String iNDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND, global::System.String eXTERNAL_FEEDER_FUND_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND fUND = new FUND();
            fUND.FUND_ID = fUND_ID;
            fUND.CODE = cODE;
            fUND.ACRONYM = aCRONYM;
            fUND.INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND = iNDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND;
            fUND.EXTERNAL_FEEDER_FUND_IND = eXTERNAL_FEEDER_FUND_IND;
            fUND.FDA_USER_CODE = fDA_USER_CODE;
            fUND.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.Int32 _CODE;
        partial void OnCODEChanging(global::System.Int32 value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACRONYM
        {
            get
            {
                return _ACRONYM;
            }
            set
            {
                OnACRONYMChanging(value);
                ReportPropertyChanging("ACRONYM");
                _ACRONYM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACRONYM");
                OnACRONYMChanged();
            }
        }
        private global::System.String _ACRONYM;
        partial void OnACRONYMChanging(global::System.String value);
        partial void OnACRONYMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LEGAL_NAME
        {
            get
            {
                return _LEGAL_NAME;
            }
            set
            {
                OnLEGAL_NAMEChanging(value);
                ReportPropertyChanging("LEGAL_NAME");
                _LEGAL_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LEGAL_NAME");
                OnLEGAL_NAMEChanged();
            }
        }
        private global::System.String _LEGAL_NAME;
        partial void OnLEGAL_NAMEChanging(global::System.String value);
        partial void OnLEGAL_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SHORT_NAME
        {
            get
            {
                return _SHORT_NAME;
            }
            set
            {
                OnSHORT_NAMEChanging(value);
                ReportPropertyChanging("SHORT_NAME");
                _SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SHORT_NAME");
                OnSHORT_NAMEChanged();
            }
        }
        private global::System.String _SHORT_NAME;
        partial void OnSHORT_NAMEChanging(global::System.String value);
        partial void OnSHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_ACCOUNTING_ACCOUNT_ID
        {
            get
            {
                return _PORTFOLIO_ACCOUNTING_ACCOUNT_ID;
            }
            set
            {
                OnPORTFOLIO_ACCOUNTING_ACCOUNT_IDChanging(value);
                ReportPropertyChanging("PORTFOLIO_ACCOUNTING_ACCOUNT_ID");
                _PORTFOLIO_ACCOUNTING_ACCOUNT_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORTFOLIO_ACCOUNTING_ACCOUNT_ID");
                OnPORTFOLIO_ACCOUNTING_ACCOUNT_IDChanged();
            }
        }
        private global::System.String _PORTFOLIO_ACCOUNTING_ACCOUNT_ID;
        partial void OnPORTFOLIO_ACCOUNTING_ACCOUNT_IDChanging(global::System.String value);
        partial void OnPORTFOLIO_ACCOUNTING_ACCOUNT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAUNCH_DATE
        {
            get
            {
                return _LAUNCH_DATE;
            }
            set
            {
                OnLAUNCH_DATEChanging(value);
                ReportPropertyChanging("LAUNCH_DATE");
                _LAUNCH_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAUNCH_DATE");
                OnLAUNCH_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAUNCH_DATE;
        partial void OnLAUNCH_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAUNCH_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TERMINATION_DATE
        {
            get
            {
                return _TERMINATION_DATE;
            }
            set
            {
                OnTERMINATION_DATEChanging(value);
                ReportPropertyChanging("TERMINATION_DATE");
                _TERMINATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TERMINATION_DATE");
                OnTERMINATION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _TERMINATION_DATE;
        partial void OnTERMINATION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnTERMINATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INVESTMENT_OBJECTIVE_DESCRIPTION
        {
            get
            {
                return _INVESTMENT_OBJECTIVE_DESCRIPTION;
            }
            set
            {
                OnINVESTMENT_OBJECTIVE_DESCRIPTIONChanging(value);
                ReportPropertyChanging("INVESTMENT_OBJECTIVE_DESCRIPTION");
                _INVESTMENT_OBJECTIVE_DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INVESTMENT_OBJECTIVE_DESCRIPTION");
                OnINVESTMENT_OBJECTIVE_DESCRIPTIONChanged();
            }
        }
        private global::System.String _INVESTMENT_OBJECTIVE_DESCRIPTION;
        partial void OnINVESTMENT_OBJECTIVE_DESCRIPTIONChanging(global::System.String value);
        partial void OnINVESTMENT_OBJECTIVE_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND
        {
            get
            {
                return _INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND;
            }
            set
            {
                OnINDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_INDChanging(value);
                ReportPropertyChanging("INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND");
                _INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND");
                OnINDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_INDChanged();
            }
        }
        private global::System.String _INDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_IND;
        partial void OnINDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_INDChanging(global::System.String value);
        partial void OnINDIVIDUAL_SAVING_ACCOUNT_ELIGIBILITY_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INVESTMENT_RESULT_TEXT
        {
            get
            {
                return _INVESTMENT_RESULT_TEXT;
            }
            set
            {
                OnINVESTMENT_RESULT_TEXTChanging(value);
                ReportPropertyChanging("INVESTMENT_RESULT_TEXT");
                _INVESTMENT_RESULT_TEXT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INVESTMENT_RESULT_TEXT");
                OnINVESTMENT_RESULT_TEXTChanged();
            }
        }
        private global::System.String _INVESTMENT_RESULT_TEXT;
        partial void OnINVESTMENT_RESULT_TEXTChanging(global::System.String value);
        partial void OnINVESTMENT_RESULT_TEXTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EXTERNAL_CODE
        {
            get
            {
                return _EXTERNAL_CODE;
            }
            set
            {
                OnEXTERNAL_CODEChanging(value);
                ReportPropertyChanging("EXTERNAL_CODE");
                _EXTERNAL_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EXTERNAL_CODE");
                OnEXTERNAL_CODEChanged();
            }
        }
        private global::System.String _EXTERNAL_CODE;
        partial void OnEXTERNAL_CODEChanging(global::System.String value);
        partial void OnEXTERNAL_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EXTERNAL_FEEDER_FUND_IND
        {
            get
            {
                return _EXTERNAL_FEEDER_FUND_IND;
            }
            set
            {
                OnEXTERNAL_FEEDER_FUND_INDChanging(value);
                ReportPropertyChanging("EXTERNAL_FEEDER_FUND_IND");
                _EXTERNAL_FEEDER_FUND_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EXTERNAL_FEEDER_FUND_IND");
                OnEXTERNAL_FEEDER_FUND_INDChanged();
            }
        }
        private global::System.String _EXTERNAL_FEEDER_FUND_IND;
        partial void OnEXTERNAL_FEEDER_FUND_INDChanging(global::System.String value);
        partial void OnEXTERNAL_FEEDER_FUND_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UMBRELLA_ID
        {
            get
            {
                return _UMBRELLA_ID;
            }
            set
            {
                OnUMBRELLA_IDChanging(value);
                ReportPropertyChanging("UMBRELLA_ID");
                _UMBRELLA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UMBRELLA_ID");
                OnUMBRELLA_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _UMBRELLA_ID;
        partial void OnUMBRELLA_IDChanging(Nullable<global::System.Int32> value);
        partial void OnUMBRELLA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OPERATING_CURRENCY_ID
        {
            get
            {
                return _OPERATING_CURRENCY_ID;
            }
            set
            {
                OnOPERATING_CURRENCY_IDChanging(value);
                ReportPropertyChanging("OPERATING_CURRENCY_ID");
                _OPERATING_CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPERATING_CURRENCY_ID");
                OnOPERATING_CURRENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _OPERATING_CURRENCY_ID;
        partial void OnOPERATING_CURRENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnOPERATING_CURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BASE_CURRENCY_ID
        {
            get
            {
                return _BASE_CURRENCY_ID;
            }
            set
            {
                OnBASE_CURRENCY_IDChanging(value);
                ReportPropertyChanging("BASE_CURRENCY_ID");
                _BASE_CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BASE_CURRENCY_ID");
                OnBASE_CURRENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _BASE_CURRENCY_ID;
        partial void OnBASE_CURRENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnBASE_CURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> INVESTMENT_RESULT_BASE_CURRENCY_ID
        {
            get
            {
                return _INVESTMENT_RESULT_BASE_CURRENCY_ID;
            }
            set
            {
                OnINVESTMENT_RESULT_BASE_CURRENCY_IDChanging(value);
                ReportPropertyChanging("INVESTMENT_RESULT_BASE_CURRENCY_ID");
                _INVESTMENT_RESULT_BASE_CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INVESTMENT_RESULT_BASE_CURRENCY_ID");
                OnINVESTMENT_RESULT_BASE_CURRENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _INVESTMENT_RESULT_BASE_CURRENCY_ID;
        partial void OnINVESTMENT_RESULT_BASE_CURRENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnINVESTMENT_RESULT_BASE_CURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VALUATION_FREQUENCY_ID
        {
            get
            {
                return _VALUATION_FREQUENCY_ID;
            }
            set
            {
                OnVALUATION_FREQUENCY_IDChanging(value);
                ReportPropertyChanging("VALUATION_FREQUENCY_ID");
                _VALUATION_FREQUENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUATION_FREQUENCY_ID");
                OnVALUATION_FREQUENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _VALUATION_FREQUENCY_ID;
        partial void OnVALUATION_FREQUENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnVALUATION_FREQUENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CUT_OFF_TIME_ID
        {
            get
            {
                return _CUT_OFF_TIME_ID;
            }
            set
            {
                OnCUT_OFF_TIME_IDChanging(value);
                ReportPropertyChanging("CUT_OFF_TIME_ID");
                _CUT_OFF_TIME_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CUT_OFF_TIME_ID");
                OnCUT_OFF_TIME_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _CUT_OFF_TIME_ID;
        partial void OnCUT_OFF_TIME_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCUT_OFF_TIME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> INVESTMENT_ADVISOR_ID
        {
            get
            {
                return _INVESTMENT_ADVISOR_ID;
            }
            set
            {
                OnINVESTMENT_ADVISOR_IDChanging(value);
                ReportPropertyChanging("INVESTMENT_ADVISOR_ID");
                _INVESTMENT_ADVISOR_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INVESTMENT_ADVISOR_ID");
                OnINVESTMENT_ADVISOR_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _INVESTMENT_ADVISOR_ID;
        partial void OnINVESTMENT_ADVISOR_IDChanging(Nullable<global::System.Int32> value);
        partial void OnINVESTMENT_ADVISOR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IMA_SECTOR_ID
        {
            get
            {
                return _IMA_SECTOR_ID;
            }
            set
            {
                OnIMA_SECTOR_IDChanging(value);
                ReportPropertyChanging("IMA_SECTOR_ID");
                _IMA_SECTOR_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IMA_SECTOR_ID");
                OnIMA_SECTOR_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _IMA_SECTOR_ID;
        partial void OnIMA_SECTOR_IDChanging(Nullable<global::System.Int32> value);
        partial void OnIMA_SECTOR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NAV_FILE_NAME_ID
        {
            get
            {
                return _NAV_FILE_NAME_ID;
            }
            set
            {
                OnNAV_FILE_NAME_IDChanging(value);
                ReportPropertyChanging("NAV_FILE_NAME_ID");
                _NAV_FILE_NAME_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NAV_FILE_NAME_ID");
                OnNAV_FILE_NAME_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _NAV_FILE_NAME_ID;
        partial void OnNAV_FILE_NAME_IDChanging(Nullable<global::System.Int32> value);
        partial void OnNAV_FILE_NAME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HOLDING_FILE_NAME_ID
        {
            get
            {
                return _HOLDING_FILE_NAME_ID;
            }
            set
            {
                OnHOLDING_FILE_NAME_IDChanging(value);
                ReportPropertyChanging("HOLDING_FILE_NAME_ID");
                _HOLDING_FILE_NAME_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HOLDING_FILE_NAME_ID");
                OnHOLDING_FILE_NAME_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _HOLDING_FILE_NAME_ID;
        partial void OnHOLDING_FILE_NAME_IDChanging(Nullable<global::System.Int32> value);
        partial void OnHOLDING_FILE_NAME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SUMMARY_FILE_NAME_ID
        {
            get
            {
                return _SUMMARY_FILE_NAME_ID;
            }
            set
            {
                OnSUMMARY_FILE_NAME_IDChanging(value);
                ReportPropertyChanging("SUMMARY_FILE_NAME_ID");
                _SUMMARY_FILE_NAME_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SUMMARY_FILE_NAME_ID");
                OnSUMMARY_FILE_NAME_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _SUMMARY_FILE_NAME_ID;
        partial void OnSUMMARY_FILE_NAME_IDChanging(Nullable<global::System.Int32> value);
        partial void OnSUMMARY_FILE_NAME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FUND_STATUS
        {
            get
            {
                return _FUND_STATUS;
            }
            set
            {
                OnFUND_STATUSChanging(value);
                ReportPropertyChanging("FUND_STATUS");
                _FUND_STATUS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FUND_STATUS");
                OnFUND_STATUSChanged();
            }
        }
        private Nullable<global::System.Int32> _FUND_STATUS;
        partial void OnFUND_STATUSChanging(Nullable<global::System.Int32> value);
        partial void OnFUND_STATUSChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY28", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY28", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY28", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY28", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY28", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY29", "CURRENCY")]
        public CURRENCY CURRENCY1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY29", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY29", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCY1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY29", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY29", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY39", "CURRENCY")]
        public CURRENCY CURRENCY2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY39", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY39", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCY2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY39", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY39", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCUT_OFF_TIME63", "CUT_OFF_TIME")]
        public CUT_OFF_TIME CUT_OFF_TIME
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUT_OFF_TIME>("FDAModel.RefCUT_OFF_TIME63", "CUT_OFF_TIME").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUT_OFF_TIME>("FDAModel.RefCUT_OFF_TIME63", "CUT_OFF_TIME").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CUT_OFF_TIME> CUT_OFF_TIMEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUT_OFF_TIME>("FDAModel.RefCUT_OFF_TIME63", "CUT_OFF_TIME");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CUT_OFF_TIME>("FDAModel.RefCUT_OFF_TIME63", "CUT_OFF_TIME", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND173", "FUND_BENCHMARK_ASSOCIATION")]
        public EntityCollection<FUND_BENCHMARK_ASSOCIATION> FUND_BENCHMARK_ASSOCIATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND173", "FUND_BENCHMARK_ASSOCIATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND173", "FUND_BENCHMARK_ASSOCIATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND188", "FUND_PORTFOLIO_MANAGER")]
        public EntityCollection<FUND_PORTFOLIO_MANAGER> FUND_PORTFOLIO_MANAGER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_PORTFOLIO_MANAGER>("FDAModel.RefFUND188", "FUND_PORTFOLIO_MANAGER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_PORTFOLIO_MANAGER>("FDAModel.RefFUND188", "FUND_PORTFOLIO_MANAGER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND229", "FUND_PAYMENT_CURRENCY")]
        public EntityCollection<FUND_PAYMENT_CURRENCY> FUND_PAYMENT_CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_PAYMENT_CURRENCY>("FDAModel.RefFUND229", "FUND_PAYMENT_CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_PAYMENT_CURRENCY>("FDAModel.RefFUND229", "FUND_PAYMENT_CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND4", "FUND_GROUPING")]
        public EntityCollection<FUND_GROUPING> FUND_GROUPING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_GROUPING>("FDAModel.RefFUND4", "FUND_GROUPING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_GROUPING>("FDAModel.RefFUND4", "FUND_GROUPING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND40", "FUND_CALENDAR_EVENT")]
        public EntityCollection<FUND_CALENDAR_EVENT> FUND_CALENDAR_EVENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_CALENDAR_EVENT>("FDAModel.RefFUND40", "FUND_CALENDAR_EVENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_CALENDAR_EVENT>("FDAModel.RefFUND40", "FUND_CALENDAR_EVENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND44", "FUND_REPORTING_CURRENCY")]
        public EntityCollection<FUND_REPORTING_CURRENCY> FUND_REPORTING_CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_REPORTING_CURRENCY>("FDAModel.RefFUND44", "FUND_REPORTING_CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_REPORTING_CURRENCY>("FDAModel.RefFUND44", "FUND_REPORTING_CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND57", "FUND_REGISTERED_COUNTRY")]
        public EntityCollection<FUND_REGISTERED_COUNTRY> FUND_REGISTERED_COUNTRY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_REGISTERED_COUNTRY>("FDAModel.RefFUND57", "FUND_REGISTERED_COUNTRY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_REGISTERED_COUNTRY>("FDAModel.RefFUND57", "FUND_REGISTERED_COUNTRY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND72", "FUND_VALUATION_TIMING")]
        public EntityCollection<FUND_VALUATION_TIMING> FUND_VALUATION_TIMING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_VALUATION_TIMING>("FDAModel.RefFUND72", "FUND_VALUATION_TIMING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_VALUATION_TIMING>("FDAModel.RefFUND72", "FUND_VALUATION_TIMING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND8", "FUND_SHARECLASS")]
        public EntityCollection<FUND_SHARECLASS> FUND_SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS>("FDAModel.RefFUND8", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS>("FDAModel.RefFUND8", "FUND_SHARECLASS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefHOLDING_FILE_NAME", "HOLDING_FILE_NAME")]
        public HOLDING_FILE_NAME HOLDING_FILE_NAME
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HOLDING_FILE_NAME>("FDAModel.RefHOLDING_FILE_NAME", "HOLDING_FILE_NAME").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HOLDING_FILE_NAME>("FDAModel.RefHOLDING_FILE_NAME", "HOLDING_FILE_NAME").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HOLDING_FILE_NAME> HOLDING_FILE_NAMEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HOLDING_FILE_NAME>("FDAModel.RefHOLDING_FILE_NAME", "HOLDING_FILE_NAME");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HOLDING_FILE_NAME>("FDAModel.RefHOLDING_FILE_NAME", "HOLDING_FILE_NAME", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefIMA_SECTOR189", "IMA_SECTOR")]
        public IMA_SECTOR IMA_SECTOR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IMA_SECTOR>("FDAModel.RefIMA_SECTOR189", "IMA_SECTOR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IMA_SECTOR>("FDAModel.RefIMA_SECTOR189", "IMA_SECTOR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IMA_SECTOR> IMA_SECTORReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IMA_SECTOR>("FDAModel.RefIMA_SECTOR189", "IMA_SECTOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IMA_SECTOR>("FDAModel.RefIMA_SECTOR189", "IMA_SECTOR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefNAV_FILE_NAME", "NAV_FILE_NAME")]
        public NAV_FILE_NAME NAV_FILE_NAME
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NAV_FILE_NAME>("FDAModel.RefNAV_FILE_NAME", "NAV_FILE_NAME").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NAV_FILE_NAME>("FDAModel.RefNAV_FILE_NAME", "NAV_FILE_NAME").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NAV_FILE_NAME> NAV_FILE_NAMEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NAV_FILE_NAME>("FDAModel.RefNAV_FILE_NAME", "NAV_FILE_NAME");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NAV_FILE_NAME>("FDAModel.RefNAV_FILE_NAME", "NAV_FILE_NAME", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE327", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE327", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE327", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE327", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE327", "PARTY_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefSUMMARY_FILE_NAME", "SUMMARY_FILE_NAME")]
        public SUMMARY_FILE_NAME SUMMARY_FILE_NAME
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUMMARY_FILE_NAME>("FDAModel.RefSUMMARY_FILE_NAME", "SUMMARY_FILE_NAME").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUMMARY_FILE_NAME>("FDAModel.RefSUMMARY_FILE_NAME", "SUMMARY_FILE_NAME").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SUMMARY_FILE_NAME> SUMMARY_FILE_NAMEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUMMARY_FILE_NAME>("FDAModel.RefSUMMARY_FILE_NAME", "SUMMARY_FILE_NAME");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SUMMARY_FILE_NAME>("FDAModel.RefSUMMARY_FILE_NAME", "SUMMARY_FILE_NAME", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefUMBRELLA6", "UMBRELLA")]
        public UMBRELLA UMBRELLA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMBRELLA>("FDAModel.RefUMBRELLA6", "UMBRELLA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMBRELLA>("FDAModel.RefUMBRELLA6", "UMBRELLA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UMBRELLA> UMBRELLAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMBRELLA>("FDAModel.RefUMBRELLA6", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UMBRELLA>("FDAModel.RefUMBRELLA6", "UMBRELLA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVALUATION_FREQUENCY59", "VALUATION_FREQUENCY")]
        public VALUATION_FREQUENCY VALUATION_FREQUENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY59", "VALUATION_FREQUENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY59", "VALUATION_FREQUENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VALUATION_FREQUENCY> VALUATION_FREQUENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY59", "VALUATION_FREQUENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VALUATION_FREQUENCY>("FDAModel.RefVALUATION_FREQUENCY59", "VALUATION_FREQUENCY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_ASSET")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_ASSET : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_ASSET object.
        /// </summary>
        /// <param name="fUND_ASSET_ID">Initial value of the FUND_ASSET_ID property.</param>
        /// <param name="cG_CODE">Initial value of the CG_CODE property.</param>
        /// <param name="fUND_SHARECLASS_ID">Initial value of the FUND_SHARECLASS_ID property.</param>
        /// <param name="cURRENCY_ID">Initial value of the CURRENCY_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_ASSET CreateFUND_ASSET(global::System.Int32 fUND_ASSET_ID, global::System.String cG_CODE, global::System.Int32 fUND_SHARECLASS_ID, global::System.Int32 cURRENCY_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_ASSET fUND_ASSET = new FUND_ASSET();
            fUND_ASSET.FUND_ASSET_ID = fUND_ASSET_ID;
            fUND_ASSET.CG_CODE = cG_CODE;
            fUND_ASSET.FUND_SHARECLASS_ID = fUND_SHARECLASS_ID;
            fUND_ASSET.CURRENCY_ID = cURRENCY_ID;
            fUND_ASSET.FDA_USER_CODE = fDA_USER_CODE;
            fUND_ASSET.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_ASSET.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_ASSET;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ASSET_ID
        {
            get
            {
                return _FUND_ASSET_ID;
            }
            set
            {
                if (_FUND_ASSET_ID != value)
                {
                    OnFUND_ASSET_IDChanging(value);
                    ReportPropertyChanging("FUND_ASSET_ID");
                    _FUND_ASSET_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ASSET_ID");
                    OnFUND_ASSET_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ASSET_ID;
        partial void OnFUND_ASSET_IDChanging(global::System.Int32 value);
        partial void OnFUND_ASSET_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CG_CODE
        {
            get
            {
                return _CG_CODE;
            }
            set
            {
                OnCG_CODEChanging(value);
                ReportPropertyChanging("CG_CODE");
                _CG_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CG_CODE");
                OnCG_CODEChanged();
            }
        }
        private global::System.String _CG_CODE;
        partial void OnCG_CODEChanging(global::System.String value);
        partial void OnCG_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_SHARECLASS_ID
        {
            get
            {
                return _FUND_SHARECLASS_ID;
            }
            set
            {
                OnFUND_SHARECLASS_IDChanging(value);
                ReportPropertyChanging("FUND_SHARECLASS_ID");
                _FUND_SHARECLASS_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FUND_SHARECLASS_ID");
                OnFUND_SHARECLASS_IDChanged();
            }
        }
        private global::System.Int32 _FUND_SHARECLASS_ID;
        partial void OnFUND_SHARECLASS_IDChanging(global::System.Int32 value);
        partial void OnFUND_SHARECLASS_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                OnCURRENCY_IDChanging(value);
                ReportPropertyChanging("CURRENCY_ID");
                _CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CURRENCY_ID");
                OnCURRENCY_IDChanged();
            }
        }
        private global::System.Int32 _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(global::System.Int32 value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAUNCH_DATE
        {
            get
            {
                return _LAUNCH_DATE;
            }
            set
            {
                OnLAUNCH_DATEChanging(value);
                ReportPropertyChanging("LAUNCH_DATE");
                _LAUNCH_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAUNCH_DATE");
                OnLAUNCH_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAUNCH_DATE;
        partial void OnLAUNCH_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAUNCH_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TERMINATION_DATE
        {
            get
            {
                return _TERMINATION_DATE;
            }
            set
            {
                OnTERMINATION_DATEChanging(value);
                ReportPropertyChanging("TERMINATION_DATE");
                _TERMINATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TERMINATION_DATE");
                OnTERMINATION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _TERMINATION_DATE;
        partial void OnTERMINATION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnTERMINATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FDA_ACTIVATION_DATE
        {
            get
            {
                return _FDA_ACTIVATION_DATE;
            }
            set
            {
                OnFDA_ACTIVATION_DATEChanging(value);
                ReportPropertyChanging("FDA_ACTIVATION_DATE");
                _FDA_ACTIVATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_ACTIVATION_DATE");
                OnFDA_ACTIVATION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _FDA_ACTIVATION_DATE;
        partial void OnFDA_ACTIVATION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnFDA_ACTIVATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FDA_VALIDATION_DATE
        {
            get
            {
                return _FDA_VALIDATION_DATE;
            }
            set
            {
                OnFDA_VALIDATION_DATEChanging(value);
                ReportPropertyChanging("FDA_VALIDATION_DATE");
                _FDA_VALIDATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_VALIDATION_DATE");
                OnFDA_VALIDATION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _FDA_VALIDATION_DATE;
        partial void OnFDA_VALIDATION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnFDA_VALIDATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY13", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY13", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY13", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY13", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY13", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET131", "FUND_ASSET_RATING")]
        public EntityCollection<FUND_ASSET_RATING> FUND_ASSET_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET_RATING>("FDAModel.RefFUND_ASSET131", "FUND_ASSET_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET_RATING>("FDAModel.RefFUND_ASSET131", "FUND_ASSET_RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET36", "FUND_ASSET_IDENTIFIER")]
        public EntityCollection<FUND_ASSET_IDENTIFIER> FUND_ASSET_IDENTIFIER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET_IDENTIFIER>("FDAModel.RefFUND_ASSET36", "FUND_ASSET_IDENTIFIER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET_IDENTIFIER>("FDAModel.RefFUND_ASSET36", "FUND_ASSET_IDENTIFIER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET78", "FUND_ASSET_PUBLICATION_MEDIA")]
        public EntityCollection<FUND_ASSET_PUBLICATION_MEDIA> FUND_ASSET_PUBLICATION_MEDIA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET_PUBLICATION_MEDIA>("FDAModel.RefFUND_ASSET78", "FUND_ASSET_PUBLICATION_MEDIA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET_PUBLICATION_MEDIA>("FDAModel.RefFUND_ASSET78", "FUND_ASSET_PUBLICATION_MEDIA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS12", "FUND_SHARECLASS")]
        public FUND_SHARECLASS FUND_SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS12", "FUND_SHARECLASS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS12", "FUND_SHARECLASS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_SHARECLASS> FUND_SHARECLASSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS12", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS12", "FUND_SHARECLASS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_ASSET_IDENTIFIER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_ASSET_IDENTIFIER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_ASSET_IDENTIFIER object.
        /// </summary>
        /// <param name="fUND_ASSET_ID">Initial value of the FUND_ASSET_ID property.</param>
        /// <param name="aSSET_ID_TYPE_ID">Initial value of the ASSET_ID_TYPE_ID property.</param>
        /// <param name="vALID_FROM_DATE">Initial value of the VALID_FROM_DATE property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_ASSET_IDENTIFIER CreateFUND_ASSET_IDENTIFIER(global::System.Int32 fUND_ASSET_ID, global::System.Int32 aSSET_ID_TYPE_ID, global::System.DateTime vALID_FROM_DATE, global::System.String cODE, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_ASSET_IDENTIFIER fUND_ASSET_IDENTIFIER = new FUND_ASSET_IDENTIFIER();
            fUND_ASSET_IDENTIFIER.FUND_ASSET_ID = fUND_ASSET_ID;
            fUND_ASSET_IDENTIFIER.ASSET_ID_TYPE_ID = aSSET_ID_TYPE_ID;
            fUND_ASSET_IDENTIFIER.VALID_FROM_DATE = vALID_FROM_DATE;
            fUND_ASSET_IDENTIFIER.CODE = cODE;
            fUND_ASSET_IDENTIFIER.FDA_USER_CODE = fDA_USER_CODE;
            fUND_ASSET_IDENTIFIER.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_ASSET_IDENTIFIER.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_ASSET_IDENTIFIER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ASSET_ID
        {
            get
            {
                return _FUND_ASSET_ID;
            }
            set
            {
                if (_FUND_ASSET_ID != value)
                {
                    OnFUND_ASSET_IDChanging(value);
                    ReportPropertyChanging("FUND_ASSET_ID");
                    _FUND_ASSET_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ASSET_ID");
                    OnFUND_ASSET_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ASSET_ID;
        partial void OnFUND_ASSET_IDChanging(global::System.Int32 value);
        partial void OnFUND_ASSET_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASSET_ID_TYPE_ID
        {
            get
            {
                return _ASSET_ID_TYPE_ID;
            }
            set
            {
                if (_ASSET_ID_TYPE_ID != value)
                {
                    OnASSET_ID_TYPE_IDChanging(value);
                    ReportPropertyChanging("ASSET_ID_TYPE_ID");
                    _ASSET_ID_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASSET_ID_TYPE_ID");
                    OnASSET_ID_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _ASSET_ID_TYPE_ID;
        partial void OnASSET_ID_TYPE_IDChanging(global::System.Int32 value);
        partial void OnASSET_ID_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime VALID_FROM_DATE
        {
            get
            {
                return _VALID_FROM_DATE;
            }
            set
            {
                if (_VALID_FROM_DATE != value)
                {
                    OnVALID_FROM_DATEChanging(value);
                    ReportPropertyChanging("VALID_FROM_DATE");
                    _VALID_FROM_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VALID_FROM_DATE");
                    OnVALID_FROM_DATEChanged();
                }
            }
        }
        private global::System.DateTime _VALID_FROM_DATE;
        partial void OnVALID_FROM_DATEChanging(global::System.DateTime value);
        partial void OnVALID_FROM_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET36", "FUND_ASSET")]
        public FUND_ASSET FUND_ASSET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET36", "FUND_ASSET").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET36", "FUND_ASSET").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_ASSET> FUND_ASSETReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET36", "FUND_ASSET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET36", "FUND_ASSET", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER_TYPE")]
        public FUND_ASSET_IDENTIFIER_TYPE FUND_ASSET_IDENTIFIER_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET_IDENTIFIER_TYPE>("FDAModel.RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET_IDENTIFIER_TYPE>("FDAModel.RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_ASSET_IDENTIFIER_TYPE> FUND_ASSET_IDENTIFIER_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET_IDENTIFIER_TYPE>("FDAModel.RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_ASSET_IDENTIFIER_TYPE>("FDAModel.RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_ASSET_IDENTIFIER_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_ASSET_IDENTIFIER_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_ASSET_IDENTIFIER_TYPE object.
        /// </summary>
        /// <param name="aSSET_ID_TYPE_ID">Initial value of the ASSET_ID_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_ASSET_IDENTIFIER_TYPE CreateFUND_ASSET_IDENTIFIER_TYPE(global::System.Int32 aSSET_ID_TYPE_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_ASSET_IDENTIFIER_TYPE fUND_ASSET_IDENTIFIER_TYPE = new FUND_ASSET_IDENTIFIER_TYPE();
            fUND_ASSET_IDENTIFIER_TYPE.ASSET_ID_TYPE_ID = aSSET_ID_TYPE_ID;
            fUND_ASSET_IDENTIFIER_TYPE.CODE = cODE;
            fUND_ASSET_IDENTIFIER_TYPE.ACTIVE_IND = aCTIVE_IND;
            fUND_ASSET_IDENTIFIER_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            fUND_ASSET_IDENTIFIER_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_ASSET_IDENTIFIER_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_ASSET_IDENTIFIER_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASSET_ID_TYPE_ID
        {
            get
            {
                return _ASSET_ID_TYPE_ID;
            }
            set
            {
                if (_ASSET_ID_TYPE_ID != value)
                {
                    OnASSET_ID_TYPE_IDChanging(value);
                    ReportPropertyChanging("ASSET_ID_TYPE_ID");
                    _ASSET_ID_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASSET_ID_TYPE_ID");
                    OnASSET_ID_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _ASSET_ID_TYPE_ID;
        partial void OnASSET_ID_TYPE_IDChanging(global::System.Int32 value);
        partial void OnASSET_ID_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER")]
        public EntityCollection<FUND_ASSET_IDENTIFIER> FUND_ASSET_IDENTIFIER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET_IDENTIFIER>("FDAModel.RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET_IDENTIFIER>("FDAModel.RefFUND_ASSET_IDENTIFIER_TYPE37", "FUND_ASSET_IDENTIFIER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_ASSET_PUBLICATION_MEDIA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_ASSET_PUBLICATION_MEDIA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_ASSET_PUBLICATION_MEDIA object.
        /// </summary>
        /// <param name="fUND_ASSET_ID">Initial value of the FUND_ASSET_ID property.</param>
        /// <param name="pUBLICATION_MEDIA_ID">Initial value of the PUBLICATION_MEDIA_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_ASSET_PUBLICATION_MEDIA CreateFUND_ASSET_PUBLICATION_MEDIA(global::System.Int32 fUND_ASSET_ID, global::System.Int32 pUBLICATION_MEDIA_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_ASSET_PUBLICATION_MEDIA fUND_ASSET_PUBLICATION_MEDIA = new FUND_ASSET_PUBLICATION_MEDIA();
            fUND_ASSET_PUBLICATION_MEDIA.FUND_ASSET_ID = fUND_ASSET_ID;
            fUND_ASSET_PUBLICATION_MEDIA.PUBLICATION_MEDIA_ID = pUBLICATION_MEDIA_ID;
            fUND_ASSET_PUBLICATION_MEDIA.FDA_USER_CODE = fDA_USER_CODE;
            fUND_ASSET_PUBLICATION_MEDIA.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_ASSET_PUBLICATION_MEDIA.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_ASSET_PUBLICATION_MEDIA;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ASSET_ID
        {
            get
            {
                return _FUND_ASSET_ID;
            }
            set
            {
                if (_FUND_ASSET_ID != value)
                {
                    OnFUND_ASSET_IDChanging(value);
                    ReportPropertyChanging("FUND_ASSET_ID");
                    _FUND_ASSET_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ASSET_ID");
                    OnFUND_ASSET_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ASSET_ID;
        partial void OnFUND_ASSET_IDChanging(global::System.Int32 value);
        partial void OnFUND_ASSET_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PUBLICATION_MEDIA_ID
        {
            get
            {
                return _PUBLICATION_MEDIA_ID;
            }
            set
            {
                if (_PUBLICATION_MEDIA_ID != value)
                {
                    OnPUBLICATION_MEDIA_IDChanging(value);
                    ReportPropertyChanging("PUBLICATION_MEDIA_ID");
                    _PUBLICATION_MEDIA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PUBLICATION_MEDIA_ID");
                    OnPUBLICATION_MEDIA_IDChanged();
                }
            }
        }
        private global::System.Int32 _PUBLICATION_MEDIA_ID;
        partial void OnPUBLICATION_MEDIA_IDChanging(global::System.Int32 value);
        partial void OnPUBLICATION_MEDIA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET78", "FUND_ASSET")]
        public FUND_ASSET FUND_ASSET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET78", "FUND_ASSET").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET78", "FUND_ASSET").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_ASSET> FUND_ASSETReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET78", "FUND_ASSET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET78", "FUND_ASSET", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE325", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE325", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE325", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE325", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE325", "PARTY_ROLE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_ASSET_RATING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_ASSET_RATING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_ASSET_RATING object.
        /// </summary>
        /// <param name="fUND_ASSET_ID">Initial value of the FUND_ASSET_ID property.</param>
        /// <param name="vALID_FROM_DATE">Initial value of the VALID_FROM_DATE property.</param>
        /// <param name="rATING_ID">Initial value of the RATING_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_ASSET_RATING CreateFUND_ASSET_RATING(global::System.Int32 fUND_ASSET_ID, global::System.DateTime vALID_FROM_DATE, global::System.Int32 rATING_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_ASSET_RATING fUND_ASSET_RATING = new FUND_ASSET_RATING();
            fUND_ASSET_RATING.FUND_ASSET_ID = fUND_ASSET_ID;
            fUND_ASSET_RATING.VALID_FROM_DATE = vALID_FROM_DATE;
            fUND_ASSET_RATING.RATING_ID = rATING_ID;
            fUND_ASSET_RATING.FDA_USER_CODE = fDA_USER_CODE;
            fUND_ASSET_RATING.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_ASSET_RATING.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_ASSET_RATING;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ASSET_ID
        {
            get
            {
                return _FUND_ASSET_ID;
            }
            set
            {
                if (_FUND_ASSET_ID != value)
                {
                    OnFUND_ASSET_IDChanging(value);
                    ReportPropertyChanging("FUND_ASSET_ID");
                    _FUND_ASSET_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ASSET_ID");
                    OnFUND_ASSET_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ASSET_ID;
        partial void OnFUND_ASSET_IDChanging(global::System.Int32 value);
        partial void OnFUND_ASSET_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime VALID_FROM_DATE
        {
            get
            {
                return _VALID_FROM_DATE;
            }
            set
            {
                if (_VALID_FROM_DATE != value)
                {
                    OnVALID_FROM_DATEChanging(value);
                    ReportPropertyChanging("VALID_FROM_DATE");
                    _VALID_FROM_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VALID_FROM_DATE");
                    OnVALID_FROM_DATEChanged();
                }
            }
        }
        private global::System.DateTime _VALID_FROM_DATE;
        partial void OnVALID_FROM_DATEChanging(global::System.DateTime value);
        partial void OnVALID_FROM_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RATING_ID
        {
            get
            {
                return _RATING_ID;
            }
            set
            {
                if (_RATING_ID != value)
                {
                    OnRATING_IDChanging(value);
                    ReportPropertyChanging("RATING_ID");
                    _RATING_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RATING_ID");
                    OnRATING_IDChanged();
                }
            }
        }
        private global::System.Int32 _RATING_ID;
        partial void OnRATING_IDChanging(global::System.Int32 value);
        partial void OnRATING_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_ASSET131", "FUND_ASSET")]
        public FUND_ASSET FUND_ASSET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET131", "FUND_ASSET").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET131", "FUND_ASSET").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_ASSET> FUND_ASSETReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET131", "FUND_ASSET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_ASSET>("FDAModel.RefFUND_ASSET131", "FUND_ASSET", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefRATING50", "RATING")]
        public RATING RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("FDAModel.RefRATING50", "RATING").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("FDAModel.RefRATING50", "RATING").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RATING> RATINGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("FDAModel.RefRATING50", "RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RATING>("FDAModel.RefRATING50", "RATING", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_BENCHMARK_ASSOCIATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_BENCHMARK_ASSOCIATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_BENCHMARK_ASSOCIATION object.
        /// </summary>
        /// <param name="fUND_BENCHMARK_ASSOCIATION_ID">Initial value of the FUND_BENCHMARK_ASSOCIATION_ID property.</param>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_BENCHMARK_ASSOCIATION CreateFUND_BENCHMARK_ASSOCIATION(global::System.Int32 fUND_BENCHMARK_ASSOCIATION_ID, global::System.Int32 fUND_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_BENCHMARK_ASSOCIATION fUND_BENCHMARK_ASSOCIATION = new FUND_BENCHMARK_ASSOCIATION();
            fUND_BENCHMARK_ASSOCIATION.FUND_BENCHMARK_ASSOCIATION_ID = fUND_BENCHMARK_ASSOCIATION_ID;
            fUND_BENCHMARK_ASSOCIATION.FUND_ID = fUND_ID;
            fUND_BENCHMARK_ASSOCIATION.FDA_USER_CODE = fDA_USER_CODE;
            fUND_BENCHMARK_ASSOCIATION.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_BENCHMARK_ASSOCIATION.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_BENCHMARK_ASSOCIATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_BENCHMARK_ASSOCIATION_ID
        {
            get
            {
                return _FUND_BENCHMARK_ASSOCIATION_ID;
            }
            set
            {
                if (_FUND_BENCHMARK_ASSOCIATION_ID != value)
                {
                    OnFUND_BENCHMARK_ASSOCIATION_IDChanging(value);
                    ReportPropertyChanging("FUND_BENCHMARK_ASSOCIATION_ID");
                    _FUND_BENCHMARK_ASSOCIATION_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_BENCHMARK_ASSOCIATION_ID");
                    OnFUND_BENCHMARK_ASSOCIATION_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_BENCHMARK_ASSOCIATION_ID;
        partial void OnFUND_BENCHMARK_ASSOCIATION_IDChanging(global::System.Int32 value);
        partial void OnFUND_BENCHMARK_ASSOCIATION_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                OnFUND_IDChanging(value);
                ReportPropertyChanging("FUND_ID");
                _FUND_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FUND_ID");
                OnFUND_IDChanged();
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FUND_BENCHMARK_ASSOCIATION_TYPE_ID
        {
            get
            {
                return _FUND_BENCHMARK_ASSOCIATION_TYPE_ID;
            }
            set
            {
                OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanging(value);
                ReportPropertyChanging("FUND_BENCHMARK_ASSOCIATION_TYPE_ID");
                _FUND_BENCHMARK_ASSOCIATION_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FUND_BENCHMARK_ASSOCIATION_TYPE_ID");
                OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FUND_BENCHMARK_ASSOCIATION_TYPE_ID;
        partial void OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_BENCHMARK_ASSOCIATION174", "BENCHMARK_ASSOCIATION")]
        public EntityCollection<BENCHMARK_ASSOCIATION> BENCHMARK_ASSOCIATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION174", "BENCHMARK_ASSOCIATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION174", "BENCHMARK_ASSOCIATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND173", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND173", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND173", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND173", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND173", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION_TYPE")]
        public FUND_BENCHMARK_ASSOCIATION_TYPE FUND_BENCHMARK_ASSOCIATION_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_BENCHMARK_ASSOCIATION_TYPE>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_BENCHMARK_ASSOCIATION_TYPE>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_BENCHMARK_ASSOCIATION_TYPE> FUND_BENCHMARK_ASSOCIATION_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_BENCHMARK_ASSOCIATION_TYPE>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_BENCHMARK_ASSOCIATION_TYPE>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_BENCHMARK_ASSOCIATION_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_BENCHMARK_ASSOCIATION_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_BENCHMARK_ASSOCIATION_TYPE object.
        /// </summary>
        /// <param name="fUND_BENCHMARK_ASSOCIATION_TYPE_ID">Initial value of the FUND_BENCHMARK_ASSOCIATION_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_BENCHMARK_ASSOCIATION_TYPE CreateFUND_BENCHMARK_ASSOCIATION_TYPE(global::System.Int32 fUND_BENCHMARK_ASSOCIATION_TYPE_ID, global::System.String cODE, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_BENCHMARK_ASSOCIATION_TYPE fUND_BENCHMARK_ASSOCIATION_TYPE = new FUND_BENCHMARK_ASSOCIATION_TYPE();
            fUND_BENCHMARK_ASSOCIATION_TYPE.FUND_BENCHMARK_ASSOCIATION_TYPE_ID = fUND_BENCHMARK_ASSOCIATION_TYPE_ID;
            fUND_BENCHMARK_ASSOCIATION_TYPE.CODE = cODE;
            fUND_BENCHMARK_ASSOCIATION_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            fUND_BENCHMARK_ASSOCIATION_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_BENCHMARK_ASSOCIATION_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_BENCHMARK_ASSOCIATION_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_BENCHMARK_ASSOCIATION_TYPE_ID
        {
            get
            {
                return _FUND_BENCHMARK_ASSOCIATION_TYPE_ID;
            }
            set
            {
                if (_FUND_BENCHMARK_ASSOCIATION_TYPE_ID != value)
                {
                    OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanging(value);
                    ReportPropertyChanging("FUND_BENCHMARK_ASSOCIATION_TYPE_ID");
                    _FUND_BENCHMARK_ASSOCIATION_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_BENCHMARK_ASSOCIATION_TYPE_ID");
                    OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_BENCHMARK_ASSOCIATION_TYPE_ID;
        partial void OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanging(global::System.Int32 value);
        partial void OnFUND_BENCHMARK_ASSOCIATION_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION")]
        public EntityCollection<FUND_BENCHMARK_ASSOCIATION> FUND_BENCHMARK_ASSOCIATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_BENCHMARK_ASSOCIATION>("FDAModel.RefFUND_BENCHMARK_ASSOCIATION_TYPE216", "FUND_BENCHMARK_ASSOCIATION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_CALENDAR_EVENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_CALENDAR_EVENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_CALENDAR_EVENT object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="cALENDAR_EVENT_TYPE_ID">Initial value of the CALENDAR_EVENT_TYPE_ID property.</param>
        /// <param name="eVENT_DATE">Initial value of the EVENT_DATE property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_CALENDAR_EVENT CreateFUND_CALENDAR_EVENT(global::System.Int32 fUND_ID, global::System.Int32 cALENDAR_EVENT_TYPE_ID, global::System.DateTime eVENT_DATE, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_CALENDAR_EVENT fUND_CALENDAR_EVENT = new FUND_CALENDAR_EVENT();
            fUND_CALENDAR_EVENT.FUND_ID = fUND_ID;
            fUND_CALENDAR_EVENT.CALENDAR_EVENT_TYPE_ID = cALENDAR_EVENT_TYPE_ID;
            fUND_CALENDAR_EVENT.EVENT_DATE = eVENT_DATE;
            fUND_CALENDAR_EVENT.FDA_USER_CODE = fDA_USER_CODE;
            fUND_CALENDAR_EVENT.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_CALENDAR_EVENT.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_CALENDAR_EVENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CALENDAR_EVENT_TYPE_ID
        {
            get
            {
                return _CALENDAR_EVENT_TYPE_ID;
            }
            set
            {
                if (_CALENDAR_EVENT_TYPE_ID != value)
                {
                    OnCALENDAR_EVENT_TYPE_IDChanging(value);
                    ReportPropertyChanging("CALENDAR_EVENT_TYPE_ID");
                    _CALENDAR_EVENT_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CALENDAR_EVENT_TYPE_ID");
                    OnCALENDAR_EVENT_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _CALENDAR_EVENT_TYPE_ID;
        partial void OnCALENDAR_EVENT_TYPE_IDChanging(global::System.Int32 value);
        partial void OnCALENDAR_EVENT_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EVENT_DATE
        {
            get
            {
                return _EVENT_DATE;
            }
            set
            {
                if (_EVENT_DATE != value)
                {
                    OnEVENT_DATEChanging(value);
                    ReportPropertyChanging("EVENT_DATE");
                    _EVENT_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EVENT_DATE");
                    OnEVENT_DATEChanged();
                }
            }
        }
        private global::System.DateTime _EVENT_DATE;
        partial void OnEVENT_DATEChanging(global::System.DateTime value);
        partial void OnEVENT_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCALENDAR_EVENT_TYPE41", "CALENDAR_EVENT_TYPE")]
        public CALENDAR_EVENT_TYPE CALENDAR_EVENT_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CALENDAR_EVENT_TYPE>("FDAModel.RefCALENDAR_EVENT_TYPE41", "CALENDAR_EVENT_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CALENDAR_EVENT_TYPE>("FDAModel.RefCALENDAR_EVENT_TYPE41", "CALENDAR_EVENT_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CALENDAR_EVENT_TYPE> CALENDAR_EVENT_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CALENDAR_EVENT_TYPE>("FDAModel.RefCALENDAR_EVENT_TYPE41", "CALENDAR_EVENT_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CALENDAR_EVENT_TYPE>("FDAModel.RefCALENDAR_EVENT_TYPE41", "CALENDAR_EVENT_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND40", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND40", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND40", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND40", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND40", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_GROUPING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_GROUPING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_GROUPING object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="gROUP_USAGE_ID">Initial value of the GROUP_USAGE_ID property.</param>
        /// <param name="gROUP_TYPE_ID">Initial value of the GROUP_TYPE_ID property.</param>
        /// <param name="oRDER_NUMBER">Initial value of the ORDER_NUMBER property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_GROUPING CreateFUND_GROUPING(global::System.Int32 fUND_ID, global::System.Int32 gROUP_USAGE_ID, global::System.Int32 gROUP_TYPE_ID, global::System.Decimal oRDER_NUMBER, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_GROUPING fUND_GROUPING = new FUND_GROUPING();
            fUND_GROUPING.FUND_ID = fUND_ID;
            fUND_GROUPING.GROUP_USAGE_ID = gROUP_USAGE_ID;
            fUND_GROUPING.GROUP_TYPE_ID = gROUP_TYPE_ID;
            fUND_GROUPING.ORDER_NUMBER = oRDER_NUMBER;
            fUND_GROUPING.FDA_USER_CODE = fDA_USER_CODE;
            fUND_GROUPING.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_GROUPING.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_GROUPING;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_USAGE_ID
        {
            get
            {
                return _GROUP_USAGE_ID;
            }
            set
            {
                if (_GROUP_USAGE_ID != value)
                {
                    OnGROUP_USAGE_IDChanging(value);
                    ReportPropertyChanging("GROUP_USAGE_ID");
                    _GROUP_USAGE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GROUP_USAGE_ID");
                    OnGROUP_USAGE_IDChanged();
                }
            }
        }
        private global::System.Int32 _GROUP_USAGE_ID;
        partial void OnGROUP_USAGE_IDChanging(global::System.Int32 value);
        partial void OnGROUP_USAGE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_TYPE_ID
        {
            get
            {
                return _GROUP_TYPE_ID;
            }
            set
            {
                if (_GROUP_TYPE_ID != value)
                {
                    OnGROUP_TYPE_IDChanging(value);
                    ReportPropertyChanging("GROUP_TYPE_ID");
                    _GROUP_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GROUP_TYPE_ID");
                    OnGROUP_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _GROUP_TYPE_ID;
        partial void OnGROUP_TYPE_IDChanging(global::System.Int32 value);
        partial void OnGROUP_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ORDER_NUMBER
        {
            get
            {
                return _ORDER_NUMBER;
            }
            set
            {
                OnORDER_NUMBERChanging(value);
                ReportPropertyChanging("ORDER_NUMBER");
                _ORDER_NUMBER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ORDER_NUMBER");
                OnORDER_NUMBERChanged();
            }
        }
        private global::System.Decimal _ORDER_NUMBER;
        partial void OnORDER_NUMBERChanging(global::System.Decimal value);
        partial void OnORDER_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND4", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND4", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND4", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND4", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND4", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefGROUPING3", "GROUPING")]
        public GROUPING GROUPING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUPING>("FDAModel.RefGROUPING3", "GROUPING").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUPING>("FDAModel.RefGROUPING3", "GROUPING").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUPING> GROUPINGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUPING>("FDAModel.RefGROUPING3", "GROUPING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUPING>("FDAModel.RefGROUPING3", "GROUPING", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_PAYMENT_CURRENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_PAYMENT_CURRENCY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_PAYMENT_CURRENCY object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="cURRENCY_ID">Initial value of the CURRENCY_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_PAYMENT_CURRENCY CreateFUND_PAYMENT_CURRENCY(global::System.Int32 fUND_ID, global::System.Int32 cURRENCY_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_PAYMENT_CURRENCY fUND_PAYMENT_CURRENCY = new FUND_PAYMENT_CURRENCY();
            fUND_PAYMENT_CURRENCY.FUND_ID = fUND_ID;
            fUND_PAYMENT_CURRENCY.CURRENCY_ID = cURRENCY_ID;
            fUND_PAYMENT_CURRENCY.FDA_USER_CODE = fDA_USER_CODE;
            fUND_PAYMENT_CURRENCY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_PAYMENT_CURRENCY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_PAYMENT_CURRENCY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                if (_CURRENCY_ID != value)
                {
                    OnCURRENCY_IDChanging(value);
                    ReportPropertyChanging("CURRENCY_ID");
                    _CURRENCY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CURRENCY_ID");
                    OnCURRENCY_IDChanged();
                }
            }
        }
        private global::System.Int32 _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(global::System.Int32 value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY230", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY230", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY230", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY230", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY230", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND229", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND229", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND229", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND229", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND229", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_PORTFOLIO_MANAGER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_PORTFOLIO_MANAGER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_PORTFOLIO_MANAGER object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="pORTFOLIO_MANAGER_ID">Initial value of the PORTFOLIO_MANAGER_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_PORTFOLIO_MANAGER CreateFUND_PORTFOLIO_MANAGER(global::System.Int32 fUND_ID, global::System.Int32 pORTFOLIO_MANAGER_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_PORTFOLIO_MANAGER fUND_PORTFOLIO_MANAGER = new FUND_PORTFOLIO_MANAGER();
            fUND_PORTFOLIO_MANAGER.FUND_ID = fUND_ID;
            fUND_PORTFOLIO_MANAGER.PORTFOLIO_MANAGER_ID = pORTFOLIO_MANAGER_ID;
            fUND_PORTFOLIO_MANAGER.FDA_USER_CODE = fDA_USER_CODE;
            fUND_PORTFOLIO_MANAGER.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_PORTFOLIO_MANAGER.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_PORTFOLIO_MANAGER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PORTFOLIO_MANAGER_ID
        {
            get
            {
                return _PORTFOLIO_MANAGER_ID;
            }
            set
            {
                if (_PORTFOLIO_MANAGER_ID != value)
                {
                    OnPORTFOLIO_MANAGER_IDChanging(value);
                    ReportPropertyChanging("PORTFOLIO_MANAGER_ID");
                    _PORTFOLIO_MANAGER_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PORTFOLIO_MANAGER_ID");
                    OnPORTFOLIO_MANAGER_IDChanged();
                }
            }
        }
        private global::System.Int32 _PORTFOLIO_MANAGER_ID;
        partial void OnPORTFOLIO_MANAGER_IDChanging(global::System.Int32 value);
        partial void OnPORTFOLIO_MANAGER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND188", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND188", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND188", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND188", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND188", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE326", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE326", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE326", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE326", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE326", "PARTY_ROLE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_REGISTERED_COUNTRY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_REGISTERED_COUNTRY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_REGISTERED_COUNTRY object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="cOUNTRY_ID">Initial value of the COUNTRY_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_REGISTERED_COUNTRY CreateFUND_REGISTERED_COUNTRY(global::System.Int32 fUND_ID, global::System.Int32 cOUNTRY_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_REGISTERED_COUNTRY fUND_REGISTERED_COUNTRY = new FUND_REGISTERED_COUNTRY();
            fUND_REGISTERED_COUNTRY.FUND_ID = fUND_ID;
            fUND_REGISTERED_COUNTRY.COUNTRY_ID = cOUNTRY_ID;
            fUND_REGISTERED_COUNTRY.FDA_USER_CODE = fDA_USER_CODE;
            fUND_REGISTERED_COUNTRY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_REGISTERED_COUNTRY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_REGISTERED_COUNTRY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COUNTRY_ID
        {
            get
            {
                return _COUNTRY_ID;
            }
            set
            {
                if (_COUNTRY_ID != value)
                {
                    OnCOUNTRY_IDChanging(value);
                    ReportPropertyChanging("COUNTRY_ID");
                    _COUNTRY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("COUNTRY_ID");
                    OnCOUNTRY_IDChanged();
                }
            }
        }
        private global::System.Int32 _COUNTRY_ID;
        partial void OnCOUNTRY_IDChanging(global::System.Int32 value);
        partial void OnCOUNTRY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCOUNTRY58", "COUNTRY")]
        public COUNTRY COUNTRY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY58", "COUNTRY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY58", "COUNTRY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COUNTRY> COUNTRYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY58", "COUNTRY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY58", "COUNTRY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND57", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND57", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND57", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND57", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND57", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_REPORTING_CURRENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_REPORTING_CURRENCY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_REPORTING_CURRENCY object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="cURRENCY_ID">Initial value of the CURRENCY_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_REPORTING_CURRENCY CreateFUND_REPORTING_CURRENCY(global::System.Int32 fUND_ID, global::System.Int32 cURRENCY_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_REPORTING_CURRENCY fUND_REPORTING_CURRENCY = new FUND_REPORTING_CURRENCY();
            fUND_REPORTING_CURRENCY.FUND_ID = fUND_ID;
            fUND_REPORTING_CURRENCY.CURRENCY_ID = cURRENCY_ID;
            fUND_REPORTING_CURRENCY.FDA_USER_CODE = fDA_USER_CODE;
            fUND_REPORTING_CURRENCY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_REPORTING_CURRENCY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_REPORTING_CURRENCY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                if (_CURRENCY_ID != value)
                {
                    OnCURRENCY_IDChanging(value);
                    ReportPropertyChanging("CURRENCY_ID");
                    _CURRENCY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CURRENCY_ID");
                    OnCURRENCY_IDChanged();
                }
            }
        }
        private global::System.Int32 _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(global::System.Int32 value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY45", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY45", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY45", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY45", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY45", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND44", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND44", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND44", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND44", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND44", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_SHARECLASS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_SHARECLASS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_SHARECLASS object.
        /// </summary>
        /// <param name="fUND_SHARECLASS_ID">Initial value of the FUND_SHARECLASS_ID property.</param>
        /// <param name="sHARECLASS_ID">Initial value of the SHARECLASS_ID property.</param>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="wEB_PUBLISHING_IND">Initial value of the WEB_PUBLISHING_IND property.</param>
        /// <param name="bASE_SHARECLASS_IND">Initial value of the BASE_SHARECLASS_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_SHARECLASS CreateFUND_SHARECLASS(global::System.Int32 fUND_SHARECLASS_ID, global::System.Int32 sHARECLASS_ID, global::System.Int32 fUND_ID, global::System.String wEB_PUBLISHING_IND, global::System.String bASE_SHARECLASS_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_SHARECLASS fUND_SHARECLASS = new FUND_SHARECLASS();
            fUND_SHARECLASS.FUND_SHARECLASS_ID = fUND_SHARECLASS_ID;
            fUND_SHARECLASS.SHARECLASS_ID = sHARECLASS_ID;
            fUND_SHARECLASS.FUND_ID = fUND_ID;
            fUND_SHARECLASS.WEB_PUBLISHING_IND = wEB_PUBLISHING_IND;
            fUND_SHARECLASS.BASE_SHARECLASS_IND = bASE_SHARECLASS_IND;
            fUND_SHARECLASS.FDA_USER_CODE = fDA_USER_CODE;
            fUND_SHARECLASS.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_SHARECLASS.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_SHARECLASS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_SHARECLASS_ID
        {
            get
            {
                return _FUND_SHARECLASS_ID;
            }
            set
            {
                if (_FUND_SHARECLASS_ID != value)
                {
                    OnFUND_SHARECLASS_IDChanging(value);
                    ReportPropertyChanging("FUND_SHARECLASS_ID");
                    _FUND_SHARECLASS_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_SHARECLASS_ID");
                    OnFUND_SHARECLASS_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_SHARECLASS_ID;
        partial void OnFUND_SHARECLASS_IDChanging(global::System.Int32 value);
        partial void OnFUND_SHARECLASS_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SHARECLASS_ID
        {
            get
            {
                return _SHARECLASS_ID;
            }
            set
            {
                OnSHARECLASS_IDChanging(value);
                ReportPropertyChanging("SHARECLASS_ID");
                _SHARECLASS_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SHARECLASS_ID");
                OnSHARECLASS_IDChanged();
            }
        }
        private global::System.Int32 _SHARECLASS_ID;
        partial void OnSHARECLASS_IDChanging(global::System.Int32 value);
        partial void OnSHARECLASS_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                OnFUND_IDChanging(value);
                ReportPropertyChanging("FUND_ID");
                _FUND_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FUND_ID");
                OnFUND_IDChanged();
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAUNCH_DATE
        {
            get
            {
                return _LAUNCH_DATE;
            }
            set
            {
                OnLAUNCH_DATEChanging(value);
                ReportPropertyChanging("LAUNCH_DATE");
                _LAUNCH_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAUNCH_DATE");
                OnLAUNCH_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAUNCH_DATE;
        partial void OnLAUNCH_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAUNCH_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TERMINATION_DATE
        {
            get
            {
                return _TERMINATION_DATE;
            }
            set
            {
                OnTERMINATION_DATEChanging(value);
                ReportPropertyChanging("TERMINATION_DATE");
                _TERMINATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TERMINATION_DATE");
                OnTERMINATION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _TERMINATION_DATE;
        partial void OnTERMINATION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnTERMINATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WEB_PUBLISHING_IND
        {
            get
            {
                return _WEB_PUBLISHING_IND;
            }
            set
            {
                OnWEB_PUBLISHING_INDChanging(value);
                ReportPropertyChanging("WEB_PUBLISHING_IND");
                _WEB_PUBLISHING_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WEB_PUBLISHING_IND");
                OnWEB_PUBLISHING_INDChanged();
            }
        }
        private global::System.String _WEB_PUBLISHING_IND;
        partial void OnWEB_PUBLISHING_INDChanging(global::System.String value);
        partial void OnWEB_PUBLISHING_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BASE_SHARECLASS_IND
        {
            get
            {
                return _BASE_SHARECLASS_IND;
            }
            set
            {
                OnBASE_SHARECLASS_INDChanging(value);
                ReportPropertyChanging("BASE_SHARECLASS_IND");
                _BASE_SHARECLASS_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BASE_SHARECLASS_IND");
                OnBASE_SHARECLASS_INDChanged();
            }
        }
        private global::System.String _BASE_SHARECLASS_IND;
        partial void OnBASE_SHARECLASS_INDChanging(global::System.String value);
        partial void OnBASE_SHARECLASS_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RELATED_FUND_SHARECLASS_ID
        {
            get
            {
                return _RELATED_FUND_SHARECLASS_ID;
            }
            set
            {
                OnRELATED_FUND_SHARECLASS_IDChanging(value);
                ReportPropertyChanging("RELATED_FUND_SHARECLASS_ID");
                _RELATED_FUND_SHARECLASS_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RELATED_FUND_SHARECLASS_ID");
                OnRELATED_FUND_SHARECLASS_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _RELATED_FUND_SHARECLASS_ID;
        partial void OnRELATED_FUND_SHARECLASS_IDChanging(Nullable<global::System.Int32> value);
        partial void OnRELATED_FUND_SHARECLASS_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SHARECLASS_EXPLANATION_TEXT
        {
            get
            {
                return _SHARECLASS_EXPLANATION_TEXT;
            }
            set
            {
                OnSHARECLASS_EXPLANATION_TEXTChanging(value);
                ReportPropertyChanging("SHARECLASS_EXPLANATION_TEXT");
                _SHARECLASS_EXPLANATION_TEXT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SHARECLASS_EXPLANATION_TEXT");
                OnSHARECLASS_EXPLANATION_TEXTChanged();
            }
        }
        private global::System.String _SHARECLASS_EXPLANATION_TEXT;
        partial void OnSHARECLASS_EXPLANATION_TEXTChanging(global::System.String value);
        partial void OnSHARECLASS_EXPLANATION_TEXTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DISTRIBUTION_POLICY_ID
        {
            get
            {
                return _DISTRIBUTION_POLICY_ID;
            }
            set
            {
                OnDISTRIBUTION_POLICY_IDChanging(value);
                ReportPropertyChanging("DISTRIBUTION_POLICY_ID");
                _DISTRIBUTION_POLICY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DISTRIBUTION_POLICY_ID");
                OnDISTRIBUTION_POLICY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _DISTRIBUTION_POLICY_ID;
        partial void OnDISTRIBUTION_POLICY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDISTRIBUTION_POLICY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DISTRIBUTION_FREQUENCY_ID
        {
            get
            {
                return _DISTRIBUTION_FREQUENCY_ID;
            }
            set
            {
                OnDISTRIBUTION_FREQUENCY_IDChanging(value);
                ReportPropertyChanging("DISTRIBUTION_FREQUENCY_ID");
                _DISTRIBUTION_FREQUENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DISTRIBUTION_FREQUENCY_ID");
                OnDISTRIBUTION_FREQUENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _DISTRIBUTION_FREQUENCY_ID;
        partial void OnDISTRIBUTION_FREQUENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDISTRIBUTION_FREQUENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefDISTRIBUTION_FREQUENCY247", "DISTRIBUTION_FREQUENCY")]
        public DISTRIBUTION_FREQUENCY DISTRIBUTION_FREQUENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRIBUTION_FREQUENCY>("FDAModel.RefDISTRIBUTION_FREQUENCY247", "DISTRIBUTION_FREQUENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRIBUTION_FREQUENCY>("FDAModel.RefDISTRIBUTION_FREQUENCY247", "DISTRIBUTION_FREQUENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DISTRIBUTION_FREQUENCY> DISTRIBUTION_FREQUENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRIBUTION_FREQUENCY>("FDAModel.RefDISTRIBUTION_FREQUENCY247", "DISTRIBUTION_FREQUENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DISTRIBUTION_FREQUENCY>("FDAModel.RefDISTRIBUTION_FREQUENCY247", "DISTRIBUTION_FREQUENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefDISTRIBUTION_POLICY233", "DISTRIBUTION_POLICY")]
        public DISTRIBUTION_POLICY DISTRIBUTION_POLICY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRIBUTION_POLICY>("FDAModel.RefDISTRIBUTION_POLICY233", "DISTRIBUTION_POLICY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRIBUTION_POLICY>("FDAModel.RefDISTRIBUTION_POLICY233", "DISTRIBUTION_POLICY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DISTRIBUTION_POLICY> DISTRIBUTION_POLICYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRIBUTION_POLICY>("FDAModel.RefDISTRIBUTION_POLICY233", "DISTRIBUTION_POLICY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DISTRIBUTION_POLICY>("FDAModel.RefDISTRIBUTION_POLICY233", "DISTRIBUTION_POLICY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND8", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND8", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND8", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND8", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND8", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS12", "FUND_ASSET")]
        public EntityCollection<FUND_ASSET> FUND_ASSET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET>("FDAModel.RefFUND_SHARECLASS12", "FUND_ASSET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET>("FDAModel.RefFUND_SHARECLASS12", "FUND_ASSET", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS149", "FUND_SHARECLASS1")]
        public EntityCollection<FUND_SHARECLASS> FUND_SHARECLASS1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS149", "FUND_SHARECLASS1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS149", "FUND_SHARECLASS1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS149", "FUND_SHARECLASS")]
        public FUND_SHARECLASS FUND_SHARECLASS2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS149", "FUND_SHARECLASS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS149", "FUND_SHARECLASS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_SHARECLASS> FUND_SHARECLASS2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS149", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS149", "FUND_SHARECLASS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS150", "FUND_SHARECLASS_FEATURE")]
        public EntityCollection<FUND_SHARECLASS_FEATURE> FUND_SHARECLASS_FEATURE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS_FEATURE>("FDAModel.RefFUND_SHARECLASS150", "FUND_SHARECLASS_FEATURE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS_FEATURE>("FDAModel.RefFUND_SHARECLASS150", "FUND_SHARECLASS_FEATURE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS79", "FUND_SHARECLASS_MANAGEMENT_FEE")]
        public EntityCollection<FUND_SHARECLASS_MANAGEMENT_FEE> FUND_SHARECLASS_MANAGEMENT_FEE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS_MANAGEMENT_FEE>("FDAModel.RefFUND_SHARECLASS79", "FUND_SHARECLASS_MANAGEMENT_FEE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS_MANAGEMENT_FEE>("FDAModel.RefFUND_SHARECLASS79", "FUND_SHARECLASS_MANAGEMENT_FEE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefSHARECLASS9", "SHARECLASS")]
        public SHARECLASS SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHARECLASS>("FDAModel.RefSHARECLASS9", "SHARECLASS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHARECLASS>("FDAModel.RefSHARECLASS9", "SHARECLASS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SHARECLASS> SHARECLASSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHARECLASS>("FDAModel.RefSHARECLASS9", "SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SHARECLASS>("FDAModel.RefSHARECLASS9", "SHARECLASS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_SHARECLASS_FEATURE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_SHARECLASS_FEATURE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_SHARECLASS_FEATURE object.
        /// </summary>
        /// <param name="fUND_SHARECLASS_ID">Initial value of the FUND_SHARECLASS_ID property.</param>
        /// <param name="fUND_SHARECLASS_FEATURE_TYPE_ID">Initial value of the FUND_SHARECLASS_FEATURE_TYPE_ID property.</param>
        /// <param name="fEATURE_TEXT">Initial value of the FEATURE_TEXT property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_SHARECLASS_FEATURE CreateFUND_SHARECLASS_FEATURE(global::System.Int32 fUND_SHARECLASS_ID, global::System.Int32 fUND_SHARECLASS_FEATURE_TYPE_ID, global::System.String fEATURE_TEXT, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_SHARECLASS_FEATURE fUND_SHARECLASS_FEATURE = new FUND_SHARECLASS_FEATURE();
            fUND_SHARECLASS_FEATURE.FUND_SHARECLASS_ID = fUND_SHARECLASS_ID;
            fUND_SHARECLASS_FEATURE.FUND_SHARECLASS_FEATURE_TYPE_ID = fUND_SHARECLASS_FEATURE_TYPE_ID;
            fUND_SHARECLASS_FEATURE.FEATURE_TEXT = fEATURE_TEXT;
            fUND_SHARECLASS_FEATURE.FDA_USER_CODE = fDA_USER_CODE;
            fUND_SHARECLASS_FEATURE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_SHARECLASS_FEATURE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_SHARECLASS_FEATURE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_SHARECLASS_ID
        {
            get
            {
                return _FUND_SHARECLASS_ID;
            }
            set
            {
                if (_FUND_SHARECLASS_ID != value)
                {
                    OnFUND_SHARECLASS_IDChanging(value);
                    ReportPropertyChanging("FUND_SHARECLASS_ID");
                    _FUND_SHARECLASS_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_SHARECLASS_ID");
                    OnFUND_SHARECLASS_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_SHARECLASS_ID;
        partial void OnFUND_SHARECLASS_IDChanging(global::System.Int32 value);
        partial void OnFUND_SHARECLASS_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_SHARECLASS_FEATURE_TYPE_ID
        {
            get
            {
                return _FUND_SHARECLASS_FEATURE_TYPE_ID;
            }
            set
            {
                if (_FUND_SHARECLASS_FEATURE_TYPE_ID != value)
                {
                    OnFUND_SHARECLASS_FEATURE_TYPE_IDChanging(value);
                    ReportPropertyChanging("FUND_SHARECLASS_FEATURE_TYPE_ID");
                    _FUND_SHARECLASS_FEATURE_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_SHARECLASS_FEATURE_TYPE_ID");
                    OnFUND_SHARECLASS_FEATURE_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_SHARECLASS_FEATURE_TYPE_ID;
        partial void OnFUND_SHARECLASS_FEATURE_TYPE_IDChanging(global::System.Int32 value);
        partial void OnFUND_SHARECLASS_FEATURE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FEATURE_TEXT
        {
            get
            {
                return _FEATURE_TEXT;
            }
            set
            {
                OnFEATURE_TEXTChanging(value);
                ReportPropertyChanging("FEATURE_TEXT");
                _FEATURE_TEXT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FEATURE_TEXT");
                OnFEATURE_TEXTChanged();
            }
        }
        private global::System.String _FEATURE_TEXT;
        partial void OnFEATURE_TEXTChanging(global::System.String value);
        partial void OnFEATURE_TEXTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS150", "FUND_SHARECLASS")]
        public FUND_SHARECLASS FUND_SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS150", "FUND_SHARECLASS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS150", "FUND_SHARECLASS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_SHARECLASS> FUND_SHARECLASSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS150", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS150", "FUND_SHARECLASS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE_TYPE")]
        public FUND_SHARECLASS_FEATURE_TYPE FUND_SHARECLASS_FEATURE_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS_FEATURE_TYPE>("FDAModel.RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS_FEATURE_TYPE>("FDAModel.RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_SHARECLASS_FEATURE_TYPE> FUND_SHARECLASS_FEATURE_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS_FEATURE_TYPE>("FDAModel.RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_SHARECLASS_FEATURE_TYPE>("FDAModel.RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_SHARECLASS_FEATURE_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_SHARECLASS_FEATURE_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_SHARECLASS_FEATURE_TYPE object.
        /// </summary>
        /// <param name="fUND_SHARECLASS_FEATURE_TYPE_ID">Initial value of the FUND_SHARECLASS_FEATURE_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_SHARECLASS_FEATURE_TYPE CreateFUND_SHARECLASS_FEATURE_TYPE(global::System.Int32 fUND_SHARECLASS_FEATURE_TYPE_ID, global::System.String cODE, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_SHARECLASS_FEATURE_TYPE fUND_SHARECLASS_FEATURE_TYPE = new FUND_SHARECLASS_FEATURE_TYPE();
            fUND_SHARECLASS_FEATURE_TYPE.FUND_SHARECLASS_FEATURE_TYPE_ID = fUND_SHARECLASS_FEATURE_TYPE_ID;
            fUND_SHARECLASS_FEATURE_TYPE.CODE = cODE;
            fUND_SHARECLASS_FEATURE_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            fUND_SHARECLASS_FEATURE_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_SHARECLASS_FEATURE_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_SHARECLASS_FEATURE_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_SHARECLASS_FEATURE_TYPE_ID
        {
            get
            {
                return _FUND_SHARECLASS_FEATURE_TYPE_ID;
            }
            set
            {
                if (_FUND_SHARECLASS_FEATURE_TYPE_ID != value)
                {
                    OnFUND_SHARECLASS_FEATURE_TYPE_IDChanging(value);
                    ReportPropertyChanging("FUND_SHARECLASS_FEATURE_TYPE_ID");
                    _FUND_SHARECLASS_FEATURE_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_SHARECLASS_FEATURE_TYPE_ID");
                    OnFUND_SHARECLASS_FEATURE_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_SHARECLASS_FEATURE_TYPE_ID;
        partial void OnFUND_SHARECLASS_FEATURE_TYPE_IDChanging(global::System.Int32 value);
        partial void OnFUND_SHARECLASS_FEATURE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE")]
        public EntityCollection<FUND_SHARECLASS_FEATURE> FUND_SHARECLASS_FEATURE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS_FEATURE>("FDAModel.RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS_FEATURE>("FDAModel.RefFUND_SHARECLASS_FEATURE_TYPE151", "FUND_SHARECLASS_FEATURE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_SHARECLASS_MANAGEMENT_FEE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_SHARECLASS_MANAGEMENT_FEE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_SHARECLASS_MANAGEMENT_FEE object.
        /// </summary>
        /// <param name="fUND_SHARECLASS_ID">Initial value of the FUND_SHARECLASS_ID property.</param>
        /// <param name="vALID_FROM_DATE">Initial value of the VALID_FROM_DATE property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_SHARECLASS_MANAGEMENT_FEE CreateFUND_SHARECLASS_MANAGEMENT_FEE(global::System.Int32 fUND_SHARECLASS_ID, global::System.DateTime vALID_FROM_DATE, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_SHARECLASS_MANAGEMENT_FEE fUND_SHARECLASS_MANAGEMENT_FEE = new FUND_SHARECLASS_MANAGEMENT_FEE();
            fUND_SHARECLASS_MANAGEMENT_FEE.FUND_SHARECLASS_ID = fUND_SHARECLASS_ID;
            fUND_SHARECLASS_MANAGEMENT_FEE.VALID_FROM_DATE = vALID_FROM_DATE;
            fUND_SHARECLASS_MANAGEMENT_FEE.FDA_USER_CODE = fDA_USER_CODE;
            fUND_SHARECLASS_MANAGEMENT_FEE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_SHARECLASS_MANAGEMENT_FEE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_SHARECLASS_MANAGEMENT_FEE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_SHARECLASS_ID
        {
            get
            {
                return _FUND_SHARECLASS_ID;
            }
            set
            {
                if (_FUND_SHARECLASS_ID != value)
                {
                    OnFUND_SHARECLASS_IDChanging(value);
                    ReportPropertyChanging("FUND_SHARECLASS_ID");
                    _FUND_SHARECLASS_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_SHARECLASS_ID");
                    OnFUND_SHARECLASS_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_SHARECLASS_ID;
        partial void OnFUND_SHARECLASS_IDChanging(global::System.Int32 value);
        partial void OnFUND_SHARECLASS_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime VALID_FROM_DATE
        {
            get
            {
                return _VALID_FROM_DATE;
            }
            set
            {
                if (_VALID_FROM_DATE != value)
                {
                    OnVALID_FROM_DATEChanging(value);
                    ReportPropertyChanging("VALID_FROM_DATE");
                    _VALID_FROM_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VALID_FROM_DATE");
                    OnVALID_FROM_DATEChanged();
                }
            }
        }
        private global::System.DateTime _VALID_FROM_DATE;
        partial void OnVALID_FROM_DATEChanging(global::System.DateTime value);
        partial void OnVALID_FROM_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PERCENTAGE
        {
            get
            {
                return _PERCENTAGE;
            }
            set
            {
                OnPERCENTAGEChanging(value);
                ReportPropertyChanging("PERCENTAGE");
                _PERCENTAGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERCENTAGE");
                OnPERCENTAGEChanged();
            }
        }
        private Nullable<global::System.Decimal> _PERCENTAGE;
        partial void OnPERCENTAGEChanging(Nullable<global::System.Decimal> value);
        partial void OnPERCENTAGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND_SHARECLASS79", "FUND_SHARECLASS")]
        public FUND_SHARECLASS FUND_SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS79", "FUND_SHARECLASS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS79", "FUND_SHARECLASS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND_SHARECLASS> FUND_SHARECLASSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS79", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND_SHARECLASS>("FDAModel.RefFUND_SHARECLASS79", "FUND_SHARECLASS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="FUND_VALUATION_TIMING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FUND_VALUATION_TIMING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FUND_VALUATION_TIMING object.
        /// </summary>
        /// <param name="fUND_ID">Initial value of the FUND_ID property.</param>
        /// <param name="fUND_VALUATION_TIMING_VALID_FROM_DATE">Initial value of the FUND_VALUATION_TIMING_VALID_FROM_DATE property.</param>
        /// <param name="vALUATION_TIMING_ID">Initial value of the VALUATION_TIMING_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static FUND_VALUATION_TIMING CreateFUND_VALUATION_TIMING(global::System.Int32 fUND_ID, global::System.DateTime fUND_VALUATION_TIMING_VALID_FROM_DATE, global::System.Int32 vALUATION_TIMING_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            FUND_VALUATION_TIMING fUND_VALUATION_TIMING = new FUND_VALUATION_TIMING();
            fUND_VALUATION_TIMING.FUND_ID = fUND_ID;
            fUND_VALUATION_TIMING.FUND_VALUATION_TIMING_VALID_FROM_DATE = fUND_VALUATION_TIMING_VALID_FROM_DATE;
            fUND_VALUATION_TIMING.VALUATION_TIMING_ID = vALUATION_TIMING_ID;
            fUND_VALUATION_TIMING.FDA_USER_CODE = fDA_USER_CODE;
            fUND_VALUATION_TIMING.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            fUND_VALUATION_TIMING.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return fUND_VALUATION_TIMING;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FUND_ID
        {
            get
            {
                return _FUND_ID;
            }
            set
            {
                if (_FUND_ID != value)
                {
                    OnFUND_IDChanging(value);
                    ReportPropertyChanging("FUND_ID");
                    _FUND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_ID");
                    OnFUND_IDChanged();
                }
            }
        }
        private global::System.Int32 _FUND_ID;
        partial void OnFUND_IDChanging(global::System.Int32 value);
        partial void OnFUND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FUND_VALUATION_TIMING_VALID_FROM_DATE
        {
            get
            {
                return _FUND_VALUATION_TIMING_VALID_FROM_DATE;
            }
            set
            {
                if (_FUND_VALUATION_TIMING_VALID_FROM_DATE != value)
                {
                    OnFUND_VALUATION_TIMING_VALID_FROM_DATEChanging(value);
                    ReportPropertyChanging("FUND_VALUATION_TIMING_VALID_FROM_DATE");
                    _FUND_VALUATION_TIMING_VALID_FROM_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FUND_VALUATION_TIMING_VALID_FROM_DATE");
                    OnFUND_VALUATION_TIMING_VALID_FROM_DATEChanged();
                }
            }
        }
        private global::System.DateTime _FUND_VALUATION_TIMING_VALID_FROM_DATE;
        partial void OnFUND_VALUATION_TIMING_VALID_FROM_DATEChanging(global::System.DateTime value);
        partial void OnFUND_VALUATION_TIMING_VALID_FROM_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VALUATION_TIMING_ID
        {
            get
            {
                return _VALUATION_TIMING_ID;
            }
            set
            {
                OnVALUATION_TIMING_IDChanging(value);
                ReportPropertyChanging("VALUATION_TIMING_ID");
                _VALUATION_TIMING_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUATION_TIMING_ID");
                OnVALUATION_TIMING_IDChanged();
            }
        }
        private global::System.Int32 _VALUATION_TIMING_ID;
        partial void OnVALUATION_TIMING_IDChanging(global::System.Int32 value);
        partial void OnVALUATION_TIMING_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFUND72", "FUND")]
        public FUND FUND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND72", "FUND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND72", "FUND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FUND> FUNDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FUND>("FDAModel.RefFUND72", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FUND>("FDAModel.RefFUND72", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVALUATION_TIMING73", "VALUATION_TIMING")]
        public VALUATION_TIMING VALUATION_TIMING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_TIMING>("FDAModel.RefVALUATION_TIMING73", "VALUATION_TIMING").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_TIMING>("FDAModel.RefVALUATION_TIMING73", "VALUATION_TIMING").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VALUATION_TIMING> VALUATION_TIMINGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VALUATION_TIMING>("FDAModel.RefVALUATION_TIMING73", "VALUATION_TIMING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VALUATION_TIMING>("FDAModel.RefVALUATION_TIMING73", "VALUATION_TIMING", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="GROUP_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GROUP_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GROUP_TYPE object.
        /// </summary>
        /// <param name="gROUP_TYPE_ID">Initial value of the GROUP_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static GROUP_TYPE CreateGROUP_TYPE(global::System.Int32 gROUP_TYPE_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            GROUP_TYPE gROUP_TYPE = new GROUP_TYPE();
            gROUP_TYPE.GROUP_TYPE_ID = gROUP_TYPE_ID;
            gROUP_TYPE.CODE = cODE;
            gROUP_TYPE.ACTIVE_IND = aCTIVE_IND;
            gROUP_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            gROUP_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            gROUP_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return gROUP_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_TYPE_ID
        {
            get
            {
                return _GROUP_TYPE_ID;
            }
            set
            {
                if (_GROUP_TYPE_ID != value)
                {
                    OnGROUP_TYPE_IDChanging(value);
                    ReportPropertyChanging("GROUP_TYPE_ID");
                    _GROUP_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GROUP_TYPE_ID");
                    OnGROUP_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _GROUP_TYPE_ID;
        partial void OnGROUP_TYPE_IDChanging(global::System.Int32 value);
        partial void OnGROUP_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefGROUP_TYPE2", "GROUPING")]
        public EntityCollection<GROUPING> GROUPINGs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GROUPING>("FDAModel.RefGROUP_TYPE2", "GROUPING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GROUPING>("FDAModel.RefGROUP_TYPE2", "GROUPING", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="GROUP_USAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GROUP_USAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GROUP_USAGE object.
        /// </summary>
        /// <param name="gROUP_USAGE_ID">Initial value of the GROUP_USAGE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static GROUP_USAGE CreateGROUP_USAGE(global::System.Int32 gROUP_USAGE_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            GROUP_USAGE gROUP_USAGE = new GROUP_USAGE();
            gROUP_USAGE.GROUP_USAGE_ID = gROUP_USAGE_ID;
            gROUP_USAGE.CODE = cODE;
            gROUP_USAGE.ACTIVE_IND = aCTIVE_IND;
            gROUP_USAGE.FDA_USER_CODE = fDA_USER_CODE;
            gROUP_USAGE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            gROUP_USAGE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return gROUP_USAGE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_USAGE_ID
        {
            get
            {
                return _GROUP_USAGE_ID;
            }
            set
            {
                if (_GROUP_USAGE_ID != value)
                {
                    OnGROUP_USAGE_IDChanging(value);
                    ReportPropertyChanging("GROUP_USAGE_ID");
                    _GROUP_USAGE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GROUP_USAGE_ID");
                    OnGROUP_USAGE_IDChanged();
                }
            }
        }
        private global::System.Int32 _GROUP_USAGE_ID;
        partial void OnGROUP_USAGE_IDChanging(global::System.Int32 value);
        partial void OnGROUP_USAGE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefGROUP_USAGE1", "GROUPING")]
        public EntityCollection<GROUPING> GROUPINGs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GROUPING>("FDAModel.RefGROUP_USAGE1", "GROUPING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GROUPING>("FDAModel.RefGROUP_USAGE1", "GROUPING", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="GROUPING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GROUPING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GROUPING object.
        /// </summary>
        /// <param name="gROUP_USAGE_ID">Initial value of the GROUP_USAGE_ID property.</param>
        /// <param name="gROUP_TYPE_ID">Initial value of the GROUP_TYPE_ID property.</param>
        /// <param name="oRDER_NUMBER">Initial value of the ORDER_NUMBER property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static GROUPING CreateGROUPING(global::System.Int32 gROUP_USAGE_ID, global::System.Int32 gROUP_TYPE_ID, global::System.Decimal oRDER_NUMBER, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            GROUPING gROUPING = new GROUPING();
            gROUPING.GROUP_USAGE_ID = gROUP_USAGE_ID;
            gROUPING.GROUP_TYPE_ID = gROUP_TYPE_ID;
            gROUPING.ORDER_NUMBER = oRDER_NUMBER;
            gROUPING.FDA_USER_CODE = fDA_USER_CODE;
            gROUPING.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            gROUPING.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return gROUPING;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_USAGE_ID
        {
            get
            {
                return _GROUP_USAGE_ID;
            }
            set
            {
                if (_GROUP_USAGE_ID != value)
                {
                    OnGROUP_USAGE_IDChanging(value);
                    ReportPropertyChanging("GROUP_USAGE_ID");
                    _GROUP_USAGE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GROUP_USAGE_ID");
                    OnGROUP_USAGE_IDChanged();
                }
            }
        }
        private global::System.Int32 _GROUP_USAGE_ID;
        partial void OnGROUP_USAGE_IDChanging(global::System.Int32 value);
        partial void OnGROUP_USAGE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_TYPE_ID
        {
            get
            {
                return _GROUP_TYPE_ID;
            }
            set
            {
                if (_GROUP_TYPE_ID != value)
                {
                    OnGROUP_TYPE_IDChanging(value);
                    ReportPropertyChanging("GROUP_TYPE_ID");
                    _GROUP_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GROUP_TYPE_ID");
                    OnGROUP_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _GROUP_TYPE_ID;
        partial void OnGROUP_TYPE_IDChanging(global::System.Int32 value);
        partial void OnGROUP_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ORDER_NUMBER
        {
            get
            {
                return _ORDER_NUMBER;
            }
            set
            {
                OnORDER_NUMBERChanging(value);
                ReportPropertyChanging("ORDER_NUMBER");
                _ORDER_NUMBER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ORDER_NUMBER");
                OnORDER_NUMBERChanged();
            }
        }
        private global::System.Decimal _ORDER_NUMBER;
        partial void OnORDER_NUMBERChanging(global::System.Decimal value);
        partial void OnORDER_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefGROUPING3", "FUND_GROUPING")]
        public EntityCollection<FUND_GROUPING> FUND_GROUPING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_GROUPING>("FDAModel.RefGROUPING3", "FUND_GROUPING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_GROUPING>("FDAModel.RefGROUPING3", "FUND_GROUPING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefGROUP_TYPE2", "GROUP_TYPE")]
        public GROUP_TYPE GROUP_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP_TYPE>("FDAModel.RefGROUP_TYPE2", "GROUP_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP_TYPE>("FDAModel.RefGROUP_TYPE2", "GROUP_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP_TYPE> GROUP_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP_TYPE>("FDAModel.RefGROUP_TYPE2", "GROUP_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP_TYPE>("FDAModel.RefGROUP_TYPE2", "GROUP_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefGROUP_USAGE1", "GROUP_USAGE")]
        public GROUP_USAGE GROUP_USAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP_USAGE>("FDAModel.RefGROUP_USAGE1", "GROUP_USAGE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP_USAGE>("FDAModel.RefGROUP_USAGE1", "GROUP_USAGE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP_USAGE> GROUP_USAGEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP_USAGE>("FDAModel.RefGROUP_USAGE1", "GROUP_USAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP_USAGE>("FDAModel.RefGROUP_USAGE1", "GROUP_USAGE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="HOLDING_FILE_NAME")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HOLDING_FILE_NAME : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HOLDING_FILE_NAME object.
        /// </summary>
        /// <param name="hOLDING_FILE_NAME_ID">Initial value of the HOLDING_FILE_NAME_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static HOLDING_FILE_NAME CreateHOLDING_FILE_NAME(global::System.Int32 hOLDING_FILE_NAME_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            HOLDING_FILE_NAME hOLDING_FILE_NAME = new HOLDING_FILE_NAME();
            hOLDING_FILE_NAME.HOLDING_FILE_NAME_ID = hOLDING_FILE_NAME_ID;
            hOLDING_FILE_NAME.CODE = cODE;
            hOLDING_FILE_NAME.ACTIVE_IND = aCTIVE_IND;
            hOLDING_FILE_NAME.FDA_USER_CODE = fDA_USER_CODE;
            hOLDING_FILE_NAME.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            hOLDING_FILE_NAME.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return hOLDING_FILE_NAME;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HOLDING_FILE_NAME_ID
        {
            get
            {
                return _HOLDING_FILE_NAME_ID;
            }
            set
            {
                if (_HOLDING_FILE_NAME_ID != value)
                {
                    OnHOLDING_FILE_NAME_IDChanging(value);
                    ReportPropertyChanging("HOLDING_FILE_NAME_ID");
                    _HOLDING_FILE_NAME_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HOLDING_FILE_NAME_ID");
                    OnHOLDING_FILE_NAME_IDChanged();
                }
            }
        }
        private global::System.Int32 _HOLDING_FILE_NAME_ID;
        partial void OnHOLDING_FILE_NAME_IDChanging(global::System.Int32 value);
        partial void OnHOLDING_FILE_NAME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefHOLDING_FILE_NAME", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefHOLDING_FILE_NAME", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefHOLDING_FILE_NAME", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="IMA_SECTOR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IMA_SECTOR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IMA_SECTOR object.
        /// </summary>
        /// <param name="iMA_SECTOR_ID">Initial value of the IMA_SECTOR_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static IMA_SECTOR CreateIMA_SECTOR(global::System.Int32 iMA_SECTOR_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            IMA_SECTOR iMA_SECTOR = new IMA_SECTOR();
            iMA_SECTOR.IMA_SECTOR_ID = iMA_SECTOR_ID;
            iMA_SECTOR.CODE = cODE;
            iMA_SECTOR.ACTIVE_IND = aCTIVE_IND;
            iMA_SECTOR.FDA_USER_CODE = fDA_USER_CODE;
            iMA_SECTOR.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            iMA_SECTOR.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return iMA_SECTOR;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IMA_SECTOR_ID
        {
            get
            {
                return _IMA_SECTOR_ID;
            }
            set
            {
                if (_IMA_SECTOR_ID != value)
                {
                    OnIMA_SECTOR_IDChanging(value);
                    ReportPropertyChanging("IMA_SECTOR_ID");
                    _IMA_SECTOR_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IMA_SECTOR_ID");
                    OnIMA_SECTOR_IDChanged();
                }
            }
        }
        private global::System.Int32 _IMA_SECTOR_ID;
        partial void OnIMA_SECTOR_IDChanging(global::System.Int32 value);
        partial void OnIMA_SECTOR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefIMA_SECTOR189", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefIMA_SECTOR189", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefIMA_SECTOR189", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="INDEX_ELEMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INDEX_ELEMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INDEX_ELEMENT object.
        /// </summary>
        /// <param name="iNDEX_ELEMENT_ID">Initial value of the INDEX_ELEMENT_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="iNDEX_TYPE_ID">Initial value of the INDEX_TYPE_ID property.</param>
        /// <param name="iNDEX_VARIANT_TYPE_ID">Initial value of the INDEX_VARIANT_TYPE_ID property.</param>
        /// <param name="iNDEX_PROVIDER_ID">Initial value of the INDEX_PROVIDER_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static INDEX_ELEMENT CreateINDEX_ELEMENT(global::System.Int32 iNDEX_ELEMENT_ID, global::System.String cODE, global::System.Int32 iNDEX_TYPE_ID, global::System.Int32 iNDEX_VARIANT_TYPE_ID, global::System.Int32 iNDEX_PROVIDER_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            INDEX_ELEMENT iNDEX_ELEMENT = new INDEX_ELEMENT();
            iNDEX_ELEMENT.INDEX_ELEMENT_ID = iNDEX_ELEMENT_ID;
            iNDEX_ELEMENT.CODE = cODE;
            iNDEX_ELEMENT.INDEX_TYPE_ID = iNDEX_TYPE_ID;
            iNDEX_ELEMENT.INDEX_VARIANT_TYPE_ID = iNDEX_VARIANT_TYPE_ID;
            iNDEX_ELEMENT.INDEX_PROVIDER_ID = iNDEX_PROVIDER_ID;
            iNDEX_ELEMENT.FDA_USER_CODE = fDA_USER_CODE;
            iNDEX_ELEMENT.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            iNDEX_ELEMENT.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return iNDEX_ELEMENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INDEX_ELEMENT_ID
        {
            get
            {
                return _INDEX_ELEMENT_ID;
            }
            set
            {
                if (_INDEX_ELEMENT_ID != value)
                {
                    OnINDEX_ELEMENT_IDChanging(value);
                    ReportPropertyChanging("INDEX_ELEMENT_ID");
                    _INDEX_ELEMENT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("INDEX_ELEMENT_ID");
                    OnINDEX_ELEMENT_IDChanged();
                }
            }
        }
        private global::System.Int32 _INDEX_ELEMENT_ID;
        partial void OnINDEX_ELEMENT_IDChanging(global::System.Int32 value);
        partial void OnINDEX_ELEMENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INDEX_TYPE_ID
        {
            get
            {
                return _INDEX_TYPE_ID;
            }
            set
            {
                OnINDEX_TYPE_IDChanging(value);
                ReportPropertyChanging("INDEX_TYPE_ID");
                _INDEX_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INDEX_TYPE_ID");
                OnINDEX_TYPE_IDChanged();
            }
        }
        private global::System.Int32 _INDEX_TYPE_ID;
        partial void OnINDEX_TYPE_IDChanging(global::System.Int32 value);
        partial void OnINDEX_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INDEX_VARIANT_TYPE_ID
        {
            get
            {
                return _INDEX_VARIANT_TYPE_ID;
            }
            set
            {
                OnINDEX_VARIANT_TYPE_IDChanging(value);
                ReportPropertyChanging("INDEX_VARIANT_TYPE_ID");
                _INDEX_VARIANT_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INDEX_VARIANT_TYPE_ID");
                OnINDEX_VARIANT_TYPE_IDChanged();
            }
        }
        private global::System.Int32 _INDEX_VARIANT_TYPE_ID;
        partial void OnINDEX_VARIANT_TYPE_IDChanging(global::System.Int32 value);
        partial void OnINDEX_VARIANT_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INDEX_PROVIDER_ID
        {
            get
            {
                return _INDEX_PROVIDER_ID;
            }
            set
            {
                OnINDEX_PROVIDER_IDChanging(value);
                ReportPropertyChanging("INDEX_PROVIDER_ID");
                _INDEX_PROVIDER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INDEX_PROVIDER_ID");
                OnINDEX_PROVIDER_IDChanged();
            }
        }
        private global::System.Int32 _INDEX_PROVIDER_ID;
        partial void OnINDEX_PROVIDER_IDChanging(global::System.Int32 value);
        partial void OnINDEX_PROVIDER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefINDEX_ELEMENT70", "BENCHMARK_INDEX")]
        public EntityCollection<BENCHMARK_INDEX> BENCHMARK_INDEX
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK_INDEX>("FDAModel.RefINDEX_ELEMENT70", "BENCHMARK_INDEX");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK_INDEX>("FDAModel.RefINDEX_ELEMENT70", "BENCHMARK_INDEX", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefINDEX_TYPE66", "INDEX_TYPE")]
        public INDEX_TYPE INDEX_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_TYPE>("FDAModel.RefINDEX_TYPE66", "INDEX_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_TYPE>("FDAModel.RefINDEX_TYPE66", "INDEX_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INDEX_TYPE> INDEX_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_TYPE>("FDAModel.RefINDEX_TYPE66", "INDEX_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INDEX_TYPE>("FDAModel.RefINDEX_TYPE66", "INDEX_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefINDEX_VARIANT_TYPE67", "INDEX_VARIANT_TYPE")]
        public INDEX_VARIANT_TYPE INDEX_VARIANT_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_VARIANT_TYPE>("FDAModel.RefINDEX_VARIANT_TYPE67", "INDEX_VARIANT_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_VARIANT_TYPE>("FDAModel.RefINDEX_VARIANT_TYPE67", "INDEX_VARIANT_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INDEX_VARIANT_TYPE> INDEX_VARIANT_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INDEX_VARIANT_TYPE>("FDAModel.RefINDEX_VARIANT_TYPE67", "INDEX_VARIANT_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INDEX_VARIANT_TYPE>("FDAModel.RefINDEX_VARIANT_TYPE67", "INDEX_VARIANT_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE323", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE323", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE323", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE323", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE323", "PARTY_ROLE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="INDEX_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INDEX_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INDEX_TYPE object.
        /// </summary>
        /// <param name="iNDEX_TYPE_ID">Initial value of the INDEX_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static INDEX_TYPE CreateINDEX_TYPE(global::System.Int32 iNDEX_TYPE_ID, global::System.String cODE, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            INDEX_TYPE iNDEX_TYPE = new INDEX_TYPE();
            iNDEX_TYPE.INDEX_TYPE_ID = iNDEX_TYPE_ID;
            iNDEX_TYPE.CODE = cODE;
            iNDEX_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            iNDEX_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            iNDEX_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return iNDEX_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INDEX_TYPE_ID
        {
            get
            {
                return _INDEX_TYPE_ID;
            }
            set
            {
                if (_INDEX_TYPE_ID != value)
                {
                    OnINDEX_TYPE_IDChanging(value);
                    ReportPropertyChanging("INDEX_TYPE_ID");
                    _INDEX_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("INDEX_TYPE_ID");
                    OnINDEX_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _INDEX_TYPE_ID;
        partial void OnINDEX_TYPE_IDChanging(global::System.Int32 value);
        partial void OnINDEX_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefINDEX_TYPE66", "INDEX_ELEMENT")]
        public EntityCollection<INDEX_ELEMENT> INDEX_ELEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INDEX_ELEMENT>("FDAModel.RefINDEX_TYPE66", "INDEX_ELEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INDEX_ELEMENT>("FDAModel.RefINDEX_TYPE66", "INDEX_ELEMENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="INDEX_VARIANT_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INDEX_VARIANT_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INDEX_VARIANT_TYPE object.
        /// </summary>
        /// <param name="iNDEX_VARIANT_TYPE_ID">Initial value of the INDEX_VARIANT_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static INDEX_VARIANT_TYPE CreateINDEX_VARIANT_TYPE(global::System.Int32 iNDEX_VARIANT_TYPE_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            INDEX_VARIANT_TYPE iNDEX_VARIANT_TYPE = new INDEX_VARIANT_TYPE();
            iNDEX_VARIANT_TYPE.INDEX_VARIANT_TYPE_ID = iNDEX_VARIANT_TYPE_ID;
            iNDEX_VARIANT_TYPE.CODE = cODE;
            iNDEX_VARIANT_TYPE.ACTIVE_IND = aCTIVE_IND;
            iNDEX_VARIANT_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            iNDEX_VARIANT_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            iNDEX_VARIANT_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return iNDEX_VARIANT_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INDEX_VARIANT_TYPE_ID
        {
            get
            {
                return _INDEX_VARIANT_TYPE_ID;
            }
            set
            {
                if (_INDEX_VARIANT_TYPE_ID != value)
                {
                    OnINDEX_VARIANT_TYPE_IDChanging(value);
                    ReportPropertyChanging("INDEX_VARIANT_TYPE_ID");
                    _INDEX_VARIANT_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("INDEX_VARIANT_TYPE_ID");
                    OnINDEX_VARIANT_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _INDEX_VARIANT_TYPE_ID;
        partial void OnINDEX_VARIANT_TYPE_IDChanging(global::System.Int32 value);
        partial void OnINDEX_VARIANT_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefINDEX_VARIANT_TYPE67", "INDEX_ELEMENT")]
        public EntityCollection<INDEX_ELEMENT> INDEX_ELEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INDEX_ELEMENT>("FDAModel.RefINDEX_VARIANT_TYPE67", "INDEX_ELEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INDEX_ELEMENT>("FDAModel.RefINDEX_VARIANT_TYPE67", "INDEX_ELEMENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="NAV_FILE_NAME")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NAV_FILE_NAME : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NAV_FILE_NAME object.
        /// </summary>
        /// <param name="nAV_FILE_NAME_ID">Initial value of the NAV_FILE_NAME_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static NAV_FILE_NAME CreateNAV_FILE_NAME(global::System.Int32 nAV_FILE_NAME_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            NAV_FILE_NAME nAV_FILE_NAME = new NAV_FILE_NAME();
            nAV_FILE_NAME.NAV_FILE_NAME_ID = nAV_FILE_NAME_ID;
            nAV_FILE_NAME.CODE = cODE;
            nAV_FILE_NAME.ACTIVE_IND = aCTIVE_IND;
            nAV_FILE_NAME.FDA_USER_CODE = fDA_USER_CODE;
            nAV_FILE_NAME.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            nAV_FILE_NAME.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return nAV_FILE_NAME;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NAV_FILE_NAME_ID
        {
            get
            {
                return _NAV_FILE_NAME_ID;
            }
            set
            {
                if (_NAV_FILE_NAME_ID != value)
                {
                    OnNAV_FILE_NAME_IDChanging(value);
                    ReportPropertyChanging("NAV_FILE_NAME_ID");
                    _NAV_FILE_NAME_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NAV_FILE_NAME_ID");
                    OnNAV_FILE_NAME_IDChanged();
                }
            }
        }
        private global::System.Int32 _NAV_FILE_NAME_ID;
        partial void OnNAV_FILE_NAME_IDChanging(global::System.Int32 value);
        partial void OnNAV_FILE_NAME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefNAV_FILE_NAME", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefNAV_FILE_NAME", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefNAV_FILE_NAME", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="PARTY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PARTY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PARTY object.
        /// </summary>
        /// <param name="pARTY_ID">Initial value of the PARTY_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static PARTY CreatePARTY(global::System.Int32 pARTY_ID, global::System.String cODE, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            PARTY pARTY = new PARTY();
            pARTY.PARTY_ID = pARTY_ID;
            pARTY.CODE = cODE;
            pARTY.FDA_USER_CODE = fDA_USER_CODE;
            pARTY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            pARTY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return pARTY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARTY_ID
        {
            get
            {
                return _PARTY_ID;
            }
            set
            {
                if (_PARTY_ID != value)
                {
                    OnPARTY_IDChanging(value);
                    ReportPropertyChanging("PARTY_ID");
                    _PARTY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PARTY_ID");
                    OnPARTY_IDChanged();
                }
            }
        }
        private global::System.Int32 _PARTY_ID;
        partial void OnPARTY_IDChanging(global::System.Int32 value);
        partial void OnPARTY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY321", "PARTY_ROLE")]
        public EntityCollection<PARTY_ROLE> PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PARTY_ROLE>("FDAModel.RefPARTY321", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PARTY_ROLE>("FDAModel.RefPARTY321", "PARTY_ROLE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="PARTY_ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PARTY_ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PARTY_ROLE object.
        /// </summary>
        /// <param name="pARTY_ROLE_ID">Initial value of the PARTY_ROLE_ID property.</param>
        /// <param name="pARTY_ID">Initial value of the PARTY_ID property.</param>
        /// <param name="pARTY_ROLE_TYPE_ID">Initial value of the PARTY_ROLE_TYPE_ID property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static PARTY_ROLE CreatePARTY_ROLE(global::System.Int32 pARTY_ROLE_ID, global::System.Int32 pARTY_ID, global::System.Int32 pARTY_ROLE_TYPE_ID, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            PARTY_ROLE pARTY_ROLE = new PARTY_ROLE();
            pARTY_ROLE.PARTY_ROLE_ID = pARTY_ROLE_ID;
            pARTY_ROLE.PARTY_ID = pARTY_ID;
            pARTY_ROLE.PARTY_ROLE_TYPE_ID = pARTY_ROLE_TYPE_ID;
            pARTY_ROLE.ACTIVE_IND = aCTIVE_IND;
            pARTY_ROLE.FDA_USER_CODE = fDA_USER_CODE;
            pARTY_ROLE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            pARTY_ROLE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return pARTY_ROLE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARTY_ROLE_ID
        {
            get
            {
                return _PARTY_ROLE_ID;
            }
            set
            {
                if (_PARTY_ROLE_ID != value)
                {
                    OnPARTY_ROLE_IDChanging(value);
                    ReportPropertyChanging("PARTY_ROLE_ID");
                    _PARTY_ROLE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PARTY_ROLE_ID");
                    OnPARTY_ROLE_IDChanged();
                }
            }
        }
        private global::System.Int32 _PARTY_ROLE_ID;
        partial void OnPARTY_ROLE_IDChanging(global::System.Int32 value);
        partial void OnPARTY_ROLE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARTY_ID
        {
            get
            {
                return _PARTY_ID;
            }
            set
            {
                OnPARTY_IDChanging(value);
                ReportPropertyChanging("PARTY_ID");
                _PARTY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PARTY_ID");
                OnPARTY_IDChanged();
            }
        }
        private global::System.Int32 _PARTY_ID;
        partial void OnPARTY_IDChanging(global::System.Int32 value);
        partial void OnPARTY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARTY_ROLE_TYPE_ID
        {
            get
            {
                return _PARTY_ROLE_TYPE_ID;
            }
            set
            {
                OnPARTY_ROLE_TYPE_IDChanging(value);
                ReportPropertyChanging("PARTY_ROLE_TYPE_ID");
                _PARTY_ROLE_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PARTY_ROLE_TYPE_ID");
                OnPARTY_ROLE_TYPE_IDChanged();
            }
        }
        private global::System.Int32 _PARTY_ROLE_TYPE_ID;
        partial void OnPARTY_ROLE_TYPE_IDChanging(global::System.Int32 value);
        partial void OnPARTY_ROLE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE322", "FILE_PROVIDER")]
        public FILE_PROVIDER FILE_PROVIDER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILE_PROVIDER>("FDAModel.RefPARTY_ROLE322", "FILE_PROVIDER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILE_PROVIDER>("FDAModel.RefPARTY_ROLE322", "FILE_PROVIDER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FILE_PROVIDER> FILE_PROVIDERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILE_PROVIDER>("FDAModel.RefPARTY_ROLE322", "FILE_PROVIDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FILE_PROVIDER>("FDAModel.RefPARTY_ROLE322", "FILE_PROVIDER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE327", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefPARTY_ROLE327", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefPARTY_ROLE327", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE325", "FUND_ASSET_PUBLICATION_MEDIA")]
        public EntityCollection<FUND_ASSET_PUBLICATION_MEDIA> FUND_ASSET_PUBLICATION_MEDIA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET_PUBLICATION_MEDIA>("FDAModel.RefPARTY_ROLE325", "FUND_ASSET_PUBLICATION_MEDIA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET_PUBLICATION_MEDIA>("FDAModel.RefPARTY_ROLE325", "FUND_ASSET_PUBLICATION_MEDIA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE326", "FUND_PORTFOLIO_MANAGER")]
        public EntityCollection<FUND_PORTFOLIO_MANAGER> FUND_PORTFOLIO_MANAGER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_PORTFOLIO_MANAGER>("FDAModel.RefPARTY_ROLE326", "FUND_PORTFOLIO_MANAGER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_PORTFOLIO_MANAGER>("FDAModel.RefPARTY_ROLE326", "FUND_PORTFOLIO_MANAGER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE323", "INDEX_ELEMENT")]
        public EntityCollection<INDEX_ELEMENT> INDEX_ELEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INDEX_ELEMENT>("FDAModel.RefPARTY_ROLE323", "INDEX_ELEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INDEX_ELEMENT>("FDAModel.RefPARTY_ROLE323", "INDEX_ELEMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY321", "PARTY")]
        public PARTY PARTY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY>("FDAModel.RefPARTY321", "PARTY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY>("FDAModel.RefPARTY321", "PARTY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY> PARTYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY>("FDAModel.RefPARTY321", "PARTY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY>("FDAModel.RefPARTY321", "PARTY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE_TYPE320", "PARTY_ROLE_TYPE")]
        public PARTY_ROLE_TYPE PARTY_ROLE_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE_TYPE>("FDAModel.RefPARTY_ROLE_TYPE320", "PARTY_ROLE_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE_TYPE>("FDAModel.RefPARTY_ROLE_TYPE320", "PARTY_ROLE_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE_TYPE> PARTY_ROLE_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE_TYPE>("FDAModel.RefPARTY_ROLE_TYPE320", "PARTY_ROLE_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE_TYPE>("FDAModel.RefPARTY_ROLE_TYPE320", "PARTY_ROLE_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE324", "RATING")]
        public EntityCollection<RATING> RATINGs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RATING>("FDAModel.RefPARTY_ROLE324", "RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RATING>("FDAModel.RefPARTY_ROLE324", "RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE328", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE328", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE328", "UMBRELLA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE329", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE329", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE329", "UMBRELLA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE330", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE330", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE330", "UMBRELLA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE331", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE331", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefPARTY_ROLE331", "UMBRELLA", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="PARTY_ROLE_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PARTY_ROLE_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PARTY_ROLE_TYPE object.
        /// </summary>
        /// <param name="pARTY_ROLE_TYPE_ID">Initial value of the PARTY_ROLE_TYPE_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static PARTY_ROLE_TYPE CreatePARTY_ROLE_TYPE(global::System.Int32 pARTY_ROLE_TYPE_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            PARTY_ROLE_TYPE pARTY_ROLE_TYPE = new PARTY_ROLE_TYPE();
            pARTY_ROLE_TYPE.PARTY_ROLE_TYPE_ID = pARTY_ROLE_TYPE_ID;
            pARTY_ROLE_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            pARTY_ROLE_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            pARTY_ROLE_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return pARTY_ROLE_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARTY_ROLE_TYPE_ID
        {
            get
            {
                return _PARTY_ROLE_TYPE_ID;
            }
            set
            {
                if (_PARTY_ROLE_TYPE_ID != value)
                {
                    OnPARTY_ROLE_TYPE_IDChanging(value);
                    ReportPropertyChanging("PARTY_ROLE_TYPE_ID");
                    _PARTY_ROLE_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PARTY_ROLE_TYPE_ID");
                    OnPARTY_ROLE_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _PARTY_ROLE_TYPE_ID;
        partial void OnPARTY_ROLE_TYPE_IDChanging(global::System.Int32 value);
        partial void OnPARTY_ROLE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FDA_FDW_PREFIX_CODE
        {
            get
            {
                return _FDA_FDW_PREFIX_CODE;
            }
            set
            {
                OnFDA_FDW_PREFIX_CODEChanging(value);
                ReportPropertyChanging("FDA_FDW_PREFIX_CODE");
                _FDA_FDW_PREFIX_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FDA_FDW_PREFIX_CODE");
                OnFDA_FDW_PREFIX_CODEChanged();
            }
        }
        private global::System.String _FDA_FDW_PREFIX_CODE;
        partial void OnFDA_FDW_PREFIX_CODEChanging(global::System.String value);
        partial void OnFDA_FDW_PREFIX_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE_TYPE320", "PARTY_ROLE")]
        public EntityCollection<PARTY_ROLE> PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PARTY_ROLE>("FDAModel.RefPARTY_ROLE_TYPE320", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PARTY_ROLE>("FDAModel.RefPARTY_ROLE_TYPE320", "PARTY_ROLE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="RATING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RATING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RATING object.
        /// </summary>
        /// <param name="rATING_ID">Initial value of the RATING_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="rATING_PROVIDER_ID">Initial value of the RATING_PROVIDER_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static RATING CreateRATING(global::System.Int32 rATING_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.Int32 rATING_PROVIDER_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            RATING rATING = new RATING();
            rATING.RATING_ID = rATING_ID;
            rATING.CODE = cODE;
            rATING.ACTIVE_IND = aCTIVE_IND;
            rATING.RATING_PROVIDER_ID = rATING_PROVIDER_ID;
            rATING.FDA_USER_CODE = fDA_USER_CODE;
            rATING.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            rATING.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return rATING;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RATING_ID
        {
            get
            {
                return _RATING_ID;
            }
            set
            {
                if (_RATING_ID != value)
                {
                    OnRATING_IDChanging(value);
                    ReportPropertyChanging("RATING_ID");
                    _RATING_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RATING_ID");
                    OnRATING_IDChanged();
                }
            }
        }
        private global::System.Int32 _RATING_ID;
        partial void OnRATING_IDChanging(global::System.Int32 value);
        partial void OnRATING_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RATING_PROVIDER_ID
        {
            get
            {
                return _RATING_PROVIDER_ID;
            }
            set
            {
                OnRATING_PROVIDER_IDChanging(value);
                ReportPropertyChanging("RATING_PROVIDER_ID");
                _RATING_PROVIDER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RATING_PROVIDER_ID");
                OnRATING_PROVIDER_IDChanged();
            }
        }
        private global::System.Int32 _RATING_PROVIDER_ID;
        partial void OnRATING_PROVIDER_IDChanging(global::System.Int32 value);
        partial void OnRATING_PROVIDER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefRATING50", "FUND_ASSET_RATING")]
        public EntityCollection<FUND_ASSET_RATING> FUND_ASSET_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_ASSET_RATING>("FDAModel.RefRATING50", "FUND_ASSET_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_ASSET_RATING>("FDAModel.RefRATING50", "FUND_ASSET_RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE324", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE324", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE324", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE324", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE324", "PARTY_ROLE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="REBALANCING_FREQUENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REBALANCING_FREQUENCY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REBALANCING_FREQUENCY object.
        /// </summary>
        /// <param name="rEBALANCING_FREQUENCY_ID">Initial value of the REBALANCING_FREQUENCY_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static REBALANCING_FREQUENCY CreateREBALANCING_FREQUENCY(global::System.Int32 rEBALANCING_FREQUENCY_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            REBALANCING_FREQUENCY rEBALANCING_FREQUENCY = new REBALANCING_FREQUENCY();
            rEBALANCING_FREQUENCY.REBALANCING_FREQUENCY_ID = rEBALANCING_FREQUENCY_ID;
            rEBALANCING_FREQUENCY.CODE = cODE;
            rEBALANCING_FREQUENCY.ACTIVE_IND = aCTIVE_IND;
            rEBALANCING_FREQUENCY.FDA_USER_CODE = fDA_USER_CODE;
            rEBALANCING_FREQUENCY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            rEBALANCING_FREQUENCY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return rEBALANCING_FREQUENCY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 REBALANCING_FREQUENCY_ID
        {
            get
            {
                return _REBALANCING_FREQUENCY_ID;
            }
            set
            {
                if (_REBALANCING_FREQUENCY_ID != value)
                {
                    OnREBALANCING_FREQUENCY_IDChanging(value);
                    ReportPropertyChanging("REBALANCING_FREQUENCY_ID");
                    _REBALANCING_FREQUENCY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("REBALANCING_FREQUENCY_ID");
                    OnREBALANCING_FREQUENCY_IDChanged();
                }
            }
        }
        private global::System.Int32 _REBALANCING_FREQUENCY_ID;
        partial void OnREBALANCING_FREQUENCY_IDChanging(global::System.Int32 value);
        partial void OnREBALANCING_FREQUENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefREBALANCING_FREQUENCY71", "BENCHMARK")]
        public EntityCollection<BENCHMARK> BENCHMARKs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK>("FDAModel.RefREBALANCING_FREQUENCY71", "BENCHMARK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK>("FDAModel.RefREBALANCING_FREQUENCY71", "BENCHMARK", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="SECURITY_GROUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SECURITY_GROUP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SECURITY_GROUP object.
        /// </summary>
        /// <param name="sECURITY_GROUP_ID">Initial value of the SECURITY_GROUP_ID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static SECURITY_GROUP CreateSECURITY_GROUP(global::System.Int32 sECURITY_GROUP_ID, global::System.String nAME, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            SECURITY_GROUP sECURITY_GROUP = new SECURITY_GROUP();
            sECURITY_GROUP.SECURITY_GROUP_ID = sECURITY_GROUP_ID;
            sECURITY_GROUP.NAME = nAME;
            sECURITY_GROUP.FDA_USER_CODE = fDA_USER_CODE;
            sECURITY_GROUP.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            sECURITY_GROUP.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return sECURITY_GROUP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SECURITY_GROUP_ID
        {
            get
            {
                return _SECURITY_GROUP_ID;
            }
            set
            {
                if (_SECURITY_GROUP_ID != value)
                {
                    OnSECURITY_GROUP_IDChanging(value);
                    ReportPropertyChanging("SECURITY_GROUP_ID");
                    _SECURITY_GROUP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SECURITY_GROUP_ID");
                    OnSECURITY_GROUP_IDChanged();
                }
            }
        }
        private global::System.Int32 _SECURITY_GROUP_ID;
        partial void OnSECURITY_GROUP_IDChanging(global::System.Int32 value);
        partial void OnSECURITY_GROUP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="SECURITY_GROUP_ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SECURITY_GROUP_ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SECURITY_GROUP_ROLE object.
        /// </summary>
        /// <param name="sECURITY_GROUP_ROLE_ID">Initial value of the SECURITY_GROUP_ROLE_ID property.</param>
        /// <param name="sECURITY_GROUP_ID">Initial value of the SECURITY_GROUP_ID property.</param>
        /// <param name="sECURITY_GROUP_ROLE_TYPE_ID">Initial value of the SECURITY_GROUP_ROLE_TYPE_ID property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static SECURITY_GROUP_ROLE CreateSECURITY_GROUP_ROLE(global::System.Int32 sECURITY_GROUP_ROLE_ID, global::System.Int32 sECURITY_GROUP_ID, global::System.Int32 sECURITY_GROUP_ROLE_TYPE_ID, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            SECURITY_GROUP_ROLE sECURITY_GROUP_ROLE = new SECURITY_GROUP_ROLE();
            sECURITY_GROUP_ROLE.SECURITY_GROUP_ROLE_ID = sECURITY_GROUP_ROLE_ID;
            sECURITY_GROUP_ROLE.SECURITY_GROUP_ID = sECURITY_GROUP_ID;
            sECURITY_GROUP_ROLE.SECURITY_GROUP_ROLE_TYPE_ID = sECURITY_GROUP_ROLE_TYPE_ID;
            sECURITY_GROUP_ROLE.ACTIVE_IND = aCTIVE_IND;
            sECURITY_GROUP_ROLE.FDA_USER_CODE = fDA_USER_CODE;
            sECURITY_GROUP_ROLE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            sECURITY_GROUP_ROLE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return sECURITY_GROUP_ROLE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SECURITY_GROUP_ROLE_ID
        {
            get
            {
                return _SECURITY_GROUP_ROLE_ID;
            }
            set
            {
                if (_SECURITY_GROUP_ROLE_ID != value)
                {
                    OnSECURITY_GROUP_ROLE_IDChanging(value);
                    ReportPropertyChanging("SECURITY_GROUP_ROLE_ID");
                    _SECURITY_GROUP_ROLE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SECURITY_GROUP_ROLE_ID");
                    OnSECURITY_GROUP_ROLE_IDChanged();
                }
            }
        }
        private global::System.Int32 _SECURITY_GROUP_ROLE_ID;
        partial void OnSECURITY_GROUP_ROLE_IDChanging(global::System.Int32 value);
        partial void OnSECURITY_GROUP_ROLE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SECURITY_GROUP_ID
        {
            get
            {
                return _SECURITY_GROUP_ID;
            }
            set
            {
                OnSECURITY_GROUP_IDChanging(value);
                ReportPropertyChanging("SECURITY_GROUP_ID");
                _SECURITY_GROUP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SECURITY_GROUP_ID");
                OnSECURITY_GROUP_IDChanged();
            }
        }
        private global::System.Int32 _SECURITY_GROUP_ID;
        partial void OnSECURITY_GROUP_IDChanging(global::System.Int32 value);
        partial void OnSECURITY_GROUP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SECURITY_GROUP_ROLE_TYPE_ID
        {
            get
            {
                return _SECURITY_GROUP_ROLE_TYPE_ID;
            }
            set
            {
                OnSECURITY_GROUP_ROLE_TYPE_IDChanging(value);
                ReportPropertyChanging("SECURITY_GROUP_ROLE_TYPE_ID");
                _SECURITY_GROUP_ROLE_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SECURITY_GROUP_ROLE_TYPE_ID");
                OnSECURITY_GROUP_ROLE_TYPE_IDChanged();
            }
        }
        private global::System.Int32 _SECURITY_GROUP_ROLE_TYPE_ID;
        partial void OnSECURITY_GROUP_ROLE_TYPE_IDChanging(global::System.Int32 value);
        partial void OnSECURITY_GROUP_ROLE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="SECURITY_GROUP_ROLE_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SECURITY_GROUP_ROLE_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SECURITY_GROUP_ROLE_TYPE object.
        /// </summary>
        /// <param name="sECURITY_GROUP_ROLE_TYPE_ID">Initial value of the SECURITY_GROUP_ROLE_TYPE_ID property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static SECURITY_GROUP_ROLE_TYPE CreateSECURITY_GROUP_ROLE_TYPE(global::System.Int32 sECURITY_GROUP_ROLE_TYPE_ID, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            SECURITY_GROUP_ROLE_TYPE sECURITY_GROUP_ROLE_TYPE = new SECURITY_GROUP_ROLE_TYPE();
            sECURITY_GROUP_ROLE_TYPE.SECURITY_GROUP_ROLE_TYPE_ID = sECURITY_GROUP_ROLE_TYPE_ID;
            sECURITY_GROUP_ROLE_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            sECURITY_GROUP_ROLE_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            sECURITY_GROUP_ROLE_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return sECURITY_GROUP_ROLE_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SECURITY_GROUP_ROLE_TYPE_ID
        {
            get
            {
                return _SECURITY_GROUP_ROLE_TYPE_ID;
            }
            set
            {
                if (_SECURITY_GROUP_ROLE_TYPE_ID != value)
                {
                    OnSECURITY_GROUP_ROLE_TYPE_IDChanging(value);
                    ReportPropertyChanging("SECURITY_GROUP_ROLE_TYPE_ID");
                    _SECURITY_GROUP_ROLE_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SECURITY_GROUP_ROLE_TYPE_ID");
                    OnSECURITY_GROUP_ROLE_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _SECURITY_GROUP_ROLE_TYPE_ID;
        partial void OnSECURITY_GROUP_ROLE_TYPE_IDChanging(global::System.Int32 value);
        partial void OnSECURITY_GROUP_ROLE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FDA_FDW_PREFIX_CODE
        {
            get
            {
                return _FDA_FDW_PREFIX_CODE;
            }
            set
            {
                OnFDA_FDW_PREFIX_CODEChanging(value);
                ReportPropertyChanging("FDA_FDW_PREFIX_CODE");
                _FDA_FDW_PREFIX_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FDA_FDW_PREFIX_CODE");
                OnFDA_FDW_PREFIX_CODEChanged();
            }
        }
        private global::System.String _FDA_FDW_PREFIX_CODE;
        partial void OnFDA_FDW_PREFIX_CODEChanging(global::System.String value);
        partial void OnFDA_FDW_PREFIX_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="SHARECLASS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SHARECLASS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SHARECLASS object.
        /// </summary>
        /// <param name="sHARECLASS_ID">Initial value of the SHARECLASS_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static SHARECLASS CreateSHARECLASS(global::System.Int32 sHARECLASS_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            SHARECLASS sHARECLASS = new SHARECLASS();
            sHARECLASS.SHARECLASS_ID = sHARECLASS_ID;
            sHARECLASS.CODE = cODE;
            sHARECLASS.ACTIVE_IND = aCTIVE_IND;
            sHARECLASS.FDA_USER_CODE = fDA_USER_CODE;
            sHARECLASS.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            sHARECLASS.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return sHARECLASS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SHARECLASS_ID
        {
            get
            {
                return _SHARECLASS_ID;
            }
            set
            {
                if (_SHARECLASS_ID != value)
                {
                    OnSHARECLASS_IDChanging(value);
                    ReportPropertyChanging("SHARECLASS_ID");
                    _SHARECLASS_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHARECLASS_ID");
                    OnSHARECLASS_IDChanged();
                }
            }
        }
        private global::System.Int32 _SHARECLASS_ID;
        partial void OnSHARECLASS_IDChanging(global::System.Int32 value);
        partial void OnSHARECLASS_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HEDGE_CURRENCY_ID
        {
            get
            {
                return _HEDGE_CURRENCY_ID;
            }
            set
            {
                OnHEDGE_CURRENCY_IDChanging(value);
                ReportPropertyChanging("HEDGE_CURRENCY_ID");
                _HEDGE_CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEDGE_CURRENCY_ID");
                OnHEDGE_CURRENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _HEDGE_CURRENCY_ID;
        partial void OnHEDGE_CURRENCY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnHEDGE_CURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEFAULT_EXPLANATION_TEXT
        {
            get
            {
                return _DEFAULT_EXPLANATION_TEXT;
            }
            set
            {
                OnDEFAULT_EXPLANATION_TEXTChanging(value);
                ReportPropertyChanging("DEFAULT_EXPLANATION_TEXT");
                _DEFAULT_EXPLANATION_TEXT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEFAULT_EXPLANATION_TEXT");
                OnDEFAULT_EXPLANATION_TEXTChanged();
            }
        }
        private global::System.String _DEFAULT_EXPLANATION_TEXT;
        partial void OnDEFAULT_EXPLANATION_TEXTChanging(global::System.String value);
        partial void OnDEFAULT_EXPLANATION_TEXTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCURRENCY75", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY75", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY75", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("FDAModel.RefCURRENCY75", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("FDAModel.RefCURRENCY75", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefSHARECLASS9", "FUND_SHARECLASS")]
        public EntityCollection<FUND_SHARECLASS> FUND_SHARECLASS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_SHARECLASS>("FDAModel.RefSHARECLASS9", "FUND_SHARECLASS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_SHARECLASS>("FDAModel.RefSHARECLASS9", "FUND_SHARECLASS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="SUMMARY_FILE_NAME")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SUMMARY_FILE_NAME : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SUMMARY_FILE_NAME object.
        /// </summary>
        /// <param name="sUMMARY_FILE_NAME_ID">Initial value of the SUMMARY_FILE_NAME_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static SUMMARY_FILE_NAME CreateSUMMARY_FILE_NAME(global::System.Int32 sUMMARY_FILE_NAME_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            SUMMARY_FILE_NAME sUMMARY_FILE_NAME = new SUMMARY_FILE_NAME();
            sUMMARY_FILE_NAME.SUMMARY_FILE_NAME_ID = sUMMARY_FILE_NAME_ID;
            sUMMARY_FILE_NAME.CODE = cODE;
            sUMMARY_FILE_NAME.ACTIVE_IND = aCTIVE_IND;
            sUMMARY_FILE_NAME.FDA_USER_CODE = fDA_USER_CODE;
            sUMMARY_FILE_NAME.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            sUMMARY_FILE_NAME.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return sUMMARY_FILE_NAME;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SUMMARY_FILE_NAME_ID
        {
            get
            {
                return _SUMMARY_FILE_NAME_ID;
            }
            set
            {
                if (_SUMMARY_FILE_NAME_ID != value)
                {
                    OnSUMMARY_FILE_NAME_IDChanging(value);
                    ReportPropertyChanging("SUMMARY_FILE_NAME_ID");
                    _SUMMARY_FILE_NAME_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SUMMARY_FILE_NAME_ID");
                    OnSUMMARY_FILE_NAME_IDChanged();
                }
            }
        }
        private global::System.Int32 _SUMMARY_FILE_NAME_ID;
        partial void OnSUMMARY_FILE_NAME_IDChanging(global::System.Int32 value);
        partial void OnSUMMARY_FILE_NAME_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefSUMMARY_FILE_NAME", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefSUMMARY_FILE_NAME", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefSUMMARY_FILE_NAME", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="UMBRELLA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UMBRELLA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UMBRELLA object.
        /// </summary>
        /// <param name="uMBRELLA_ID">Initial value of the UMBRELLA_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        /// <param name="sTATUS_UPD_DATE">Initial value of the STATUS_UPD_DATE property.</param>
        public static UMBRELLA CreateUMBRELLA(global::System.Int32 uMBRELLA_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE, global::System.DateTime sTATUS_UPD_DATE)
        {
            UMBRELLA uMBRELLA = new UMBRELLA();
            uMBRELLA.UMBRELLA_ID = uMBRELLA_ID;
            uMBRELLA.CODE = cODE;
            uMBRELLA.ACTIVE_IND = aCTIVE_IND;
            uMBRELLA.FDA_USER_CODE = fDA_USER_CODE;
            uMBRELLA.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            uMBRELLA.FDA_CREATION_DATE = fDA_CREATION_DATE;
            uMBRELLA.STATUS_UPD_DATE = sTATUS_UPD_DATE;
            return uMBRELLA;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UMBRELLA_ID
        {
            get
            {
                return _UMBRELLA_ID;
            }
            set
            {
                if (_UMBRELLA_ID != value)
                {
                    OnUMBRELLA_IDChanging(value);
                    ReportPropertyChanging("UMBRELLA_ID");
                    _UMBRELLA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UMBRELLA_ID");
                    OnUMBRELLA_IDChanged();
                }
            }
        }
        private global::System.Int32 _UMBRELLA_ID;
        partial void OnUMBRELLA_IDChanging(global::System.Int32 value);
        partial void OnUMBRELLA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LEGAL_NAME
        {
            get
            {
                return _LEGAL_NAME;
            }
            set
            {
                OnLEGAL_NAMEChanging(value);
                ReportPropertyChanging("LEGAL_NAME");
                _LEGAL_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LEGAL_NAME");
                OnLEGAL_NAMEChanged();
            }
        }
        private global::System.String _LEGAL_NAME;
        partial void OnLEGAL_NAMEChanging(global::System.String value);
        partial void OnLEGAL_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SHORT_NAME
        {
            get
            {
                return _SHORT_NAME;
            }
            set
            {
                OnSHORT_NAMEChanging(value);
                ReportPropertyChanging("SHORT_NAME");
                _SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SHORT_NAME");
                OnSHORT_NAMEChanged();
            }
        }
        private global::System.String _SHORT_NAME;
        partial void OnSHORT_NAMEChanging(global::System.String value);
        partial void OnSHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DOMICILE_COUNTRY_ID
        {
            get
            {
                return _DOMICILE_COUNTRY_ID;
            }
            set
            {
                OnDOMICILE_COUNTRY_IDChanging(value);
                ReportPropertyChanging("DOMICILE_COUNTRY_ID");
                _DOMICILE_COUNTRY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOMICILE_COUNTRY_ID");
                OnDOMICILE_COUNTRY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _DOMICILE_COUNTRY_ID;
        partial void OnDOMICILE_COUNTRY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDOMICILE_COUNTRY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PAYING_AGENT_ID
        {
            get
            {
                return _PAYING_AGENT_ID;
            }
            set
            {
                OnPAYING_AGENT_IDChanging(value);
                ReportPropertyChanging("PAYING_AGENT_ID");
                _PAYING_AGENT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PAYING_AGENT_ID");
                OnPAYING_AGENT_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _PAYING_AGENT_ID;
        partial void OnPAYING_AGENT_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPAYING_AGENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FILE_PROVIDER_ID
        {
            get
            {
                return _FILE_PROVIDER_ID;
            }
            set
            {
                OnFILE_PROVIDER_IDChanging(value);
                ReportPropertyChanging("FILE_PROVIDER_ID");
                _FILE_PROVIDER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FILE_PROVIDER_ID");
                OnFILE_PROVIDER_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FILE_PROVIDER_ID;
        partial void OnFILE_PROVIDER_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFILE_PROVIDER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CUSTODIAN_ID
        {
            get
            {
                return _CUSTODIAN_ID;
            }
            set
            {
                OnCUSTODIAN_IDChanging(value);
                ReportPropertyChanging("CUSTODIAN_ID");
                _CUSTODIAN_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CUSTODIAN_ID");
                OnCUSTODIAN_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _CUSTODIAN_ID;
        partial void OnCUSTODIAN_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCUSTODIAN_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LEGAL_ADVISOR_ID
        {
            get
            {
                return _LEGAL_ADVISOR_ID;
            }
            set
            {
                OnLEGAL_ADVISOR_IDChanging(value);
                ReportPropertyChanging("LEGAL_ADVISOR_ID");
                _LEGAL_ADVISOR_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LEGAL_ADVISOR_ID");
                OnLEGAL_ADVISOR_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _LEGAL_ADVISOR_ID;
        partial void OnLEGAL_ADVISOR_IDChanging(Nullable<global::System.Int32> value);
        partial void OnLEGAL_ADVISOR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ADMINISTRATIVE_MANAGER_ID
        {
            get
            {
                return _ADMINISTRATIVE_MANAGER_ID;
            }
            set
            {
                OnADMINISTRATIVE_MANAGER_IDChanging(value);
                ReportPropertyChanging("ADMINISTRATIVE_MANAGER_ID");
                _ADMINISTRATIVE_MANAGER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ADMINISTRATIVE_MANAGER_ID");
                OnADMINISTRATIVE_MANAGER_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ADMINISTRATIVE_MANAGER_ID;
        partial void OnADMINISTRATIVE_MANAGER_IDChanging(Nullable<global::System.Int32> value);
        partial void OnADMINISTRATIVE_MANAGER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VEHICLE_TYPE_ID
        {
            get
            {
                return _VEHICLE_TYPE_ID;
            }
            set
            {
                OnVEHICLE_TYPE_IDChanging(value);
                ReportPropertyChanging("VEHICLE_TYPE_ID");
                _VEHICLE_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VEHICLE_TYPE_ID");
                OnVEHICLE_TYPE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _VEHICLE_TYPE_ID;
        partial void OnVEHICLE_TYPE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnVEHICLE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FISCAL_YEAR_END_ID
        {
            get
            {
                return _FISCAL_YEAR_END_ID;
            }
            set
            {
                OnFISCAL_YEAR_END_IDChanging(value);
                ReportPropertyChanging("FISCAL_YEAR_END_ID");
                _FISCAL_YEAR_END_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FISCAL_YEAR_END_ID");
                OnFISCAL_YEAR_END_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FISCAL_YEAR_END_ID;
        partial void OnFISCAL_YEAR_END_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFISCAL_YEAR_END_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime STATUS_UPD_DATE
        {
            get
            {
                return _STATUS_UPD_DATE;
            }
            set
            {
                OnSTATUS_UPD_DATEChanging(value);
                ReportPropertyChanging("STATUS_UPD_DATE");
                _STATUS_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STATUS_UPD_DATE");
                OnSTATUS_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _STATUS_UPD_DATE;
        partial void OnSTATUS_UPD_DATEChanging(global::System.DateTime value);
        partial void OnSTATUS_UPD_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefCOUNTRY56", "COUNTRY")]
        public COUNTRY COUNTRY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY56", "COUNTRY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY56", "COUNTRY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COUNTRY> COUNTRYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY56", "COUNTRY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COUNTRY>("FDAModel.RefCOUNTRY56", "COUNTRY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFILE_PROVIDER157", "FILE_PROVIDER")]
        public FILE_PROVIDER FILE_PROVIDER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILE_PROVIDER>("FDAModel.RefFILE_PROVIDER157", "FILE_PROVIDER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILE_PROVIDER>("FDAModel.RefFILE_PROVIDER157", "FILE_PROVIDER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FILE_PROVIDER> FILE_PROVIDERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILE_PROVIDER>("FDAModel.RefFILE_PROVIDER157", "FILE_PROVIDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FILE_PROVIDER>("FDAModel.RefFILE_PROVIDER157", "FILE_PROVIDER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefFISCALYEAREND", "FISCAL_YEAR_END")]
        public FISCAL_YEAR_END FISCAL_YEAR_END
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FISCAL_YEAR_END>("FDAModel.RefFISCALYEAREND", "FISCAL_YEAR_END").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FISCAL_YEAR_END>("FDAModel.RefFISCALYEAREND", "FISCAL_YEAR_END").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FISCAL_YEAR_END> FISCAL_YEAR_ENDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FISCAL_YEAR_END>("FDAModel.RefFISCALYEAREND", "FISCAL_YEAR_END");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FISCAL_YEAR_END>("FDAModel.RefFISCALYEAREND", "FISCAL_YEAR_END", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefUMBRELLA6", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefUMBRELLA6", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefUMBRELLA6", "FUND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE328", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE328", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE328", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE328", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE328", "PARTY_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE329", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE329", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE329", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE329", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE329", "PARTY_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE330", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE330", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE330", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLE2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE330", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE330", "PARTY_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefPARTY_ROLE331", "PARTY_ROLE")]
        public PARTY_ROLE PARTY_ROLE3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE331", "PARTY_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE331", "PARTY_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PARTY_ROLE> PARTY_ROLE3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE331", "PARTY_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PARTY_ROLE>("FDAModel.RefPARTY_ROLE331", "PARTY_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVehicalType", "VEHICLE_TYPE")]
        public VEHICLE_TYPE VEHICLE_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE_TYPE>("FDAModel.RefVehicalType", "VEHICLE_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE_TYPE>("FDAModel.RefVehicalType", "VEHICLE_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VEHICLE_TYPE> VEHICLE_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE_TYPE>("FDAModel.RefVehicalType", "VEHICLE_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VEHICLE_TYPE>("FDAModel.RefVehicalType", "VEHICLE_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="VALUATION_FREQUENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VALUATION_FREQUENCY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VALUATION_FREQUENCY object.
        /// </summary>
        /// <param name="vALUATION_FREQUENCY_ID">Initial value of the VALUATION_FREQUENCY_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static VALUATION_FREQUENCY CreateVALUATION_FREQUENCY(global::System.Int32 vALUATION_FREQUENCY_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            VALUATION_FREQUENCY vALUATION_FREQUENCY = new VALUATION_FREQUENCY();
            vALUATION_FREQUENCY.VALUATION_FREQUENCY_ID = vALUATION_FREQUENCY_ID;
            vALUATION_FREQUENCY.CODE = cODE;
            vALUATION_FREQUENCY.ACTIVE_IND = aCTIVE_IND;
            vALUATION_FREQUENCY.FDA_USER_CODE = fDA_USER_CODE;
            vALUATION_FREQUENCY.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            vALUATION_FREQUENCY.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return vALUATION_FREQUENCY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VALUATION_FREQUENCY_ID
        {
            get
            {
                return _VALUATION_FREQUENCY_ID;
            }
            set
            {
                if (_VALUATION_FREQUENCY_ID != value)
                {
                    OnVALUATION_FREQUENCY_IDChanging(value);
                    ReportPropertyChanging("VALUATION_FREQUENCY_ID");
                    _VALUATION_FREQUENCY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VALUATION_FREQUENCY_ID");
                    OnVALUATION_FREQUENCY_IDChanged();
                }
            }
        }
        private global::System.Int32 _VALUATION_FREQUENCY_ID;
        partial void OnVALUATION_FREQUENCY_IDChanging(global::System.Int32 value);
        partial void OnVALUATION_FREQUENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVALUATION_FREQUENCY60", "BENCHMARK")]
        public EntityCollection<BENCHMARK> BENCHMARKs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BENCHMARK>("FDAModel.RefVALUATION_FREQUENCY60", "BENCHMARK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BENCHMARK>("FDAModel.RefVALUATION_FREQUENCY60", "BENCHMARK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVALUATION_FREQUENCY59", "FUND")]
        public EntityCollection<FUND> FUNDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND>("FDAModel.RefVALUATION_FREQUENCY59", "FUND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND>("FDAModel.RefVALUATION_FREQUENCY59", "FUND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="VALUATION_TIMING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VALUATION_TIMING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VALUATION_TIMING object.
        /// </summary>
        /// <param name="vALUATION_TIMING_ID">Initial value of the VALUATION_TIMING_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static VALUATION_TIMING CreateVALUATION_TIMING(global::System.Int32 vALUATION_TIMING_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            VALUATION_TIMING vALUATION_TIMING = new VALUATION_TIMING();
            vALUATION_TIMING.VALUATION_TIMING_ID = vALUATION_TIMING_ID;
            vALUATION_TIMING.CODE = cODE;
            vALUATION_TIMING.ACTIVE_IND = aCTIVE_IND;
            vALUATION_TIMING.FDA_USER_CODE = fDA_USER_CODE;
            vALUATION_TIMING.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            vALUATION_TIMING.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return vALUATION_TIMING;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VALUATION_TIMING_ID
        {
            get
            {
                return _VALUATION_TIMING_ID;
            }
            set
            {
                if (_VALUATION_TIMING_ID != value)
                {
                    OnVALUATION_TIMING_IDChanging(value);
                    ReportPropertyChanging("VALUATION_TIMING_ID");
                    _VALUATION_TIMING_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VALUATION_TIMING_ID");
                    OnVALUATION_TIMING_IDChanged();
                }
            }
        }
        private global::System.Int32 _VALUATION_TIMING_ID;
        partial void OnVALUATION_TIMING_IDChanging(global::System.Int32 value);
        partial void OnVALUATION_TIMING_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVALUATION_TIMING73", "FUND_VALUATION_TIMING")]
        public EntityCollection<FUND_VALUATION_TIMING> FUND_VALUATION_TIMING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FUND_VALUATION_TIMING>("FDAModel.RefVALUATION_TIMING73", "FUND_VALUATION_TIMING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FUND_VALUATION_TIMING>("FDAModel.RefVALUATION_TIMING73", "FUND_VALUATION_TIMING", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FDAModel", Name="VEHICLE_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VEHICLE_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VEHICLE_TYPE object.
        /// </summary>
        /// <param name="vEHICLE_TYPE_ID">Initial value of the VEHICLE_TYPE_ID property.</param>
        /// <param name="cODE">Initial value of the CODE property.</param>
        /// <param name="aCTIVE_IND">Initial value of the ACTIVE_IND property.</param>
        /// <param name="fDA_USER_CODE">Initial value of the FDA_USER_CODE property.</param>
        /// <param name="fDA_LAST_UPD_DATE">Initial value of the FDA_LAST_UPD_DATE property.</param>
        /// <param name="fDA_CREATION_DATE">Initial value of the FDA_CREATION_DATE property.</param>
        public static VEHICLE_TYPE CreateVEHICLE_TYPE(global::System.Int32 vEHICLE_TYPE_ID, global::System.String cODE, global::System.String aCTIVE_IND, global::System.String fDA_USER_CODE, global::System.DateTime fDA_LAST_UPD_DATE, global::System.DateTime fDA_CREATION_DATE)
        {
            VEHICLE_TYPE vEHICLE_TYPE = new VEHICLE_TYPE();
            vEHICLE_TYPE.VEHICLE_TYPE_ID = vEHICLE_TYPE_ID;
            vEHICLE_TYPE.CODE = cODE;
            vEHICLE_TYPE.ACTIVE_IND = aCTIVE_IND;
            vEHICLE_TYPE.FDA_USER_CODE = fDA_USER_CODE;
            vEHICLE_TYPE.FDA_LAST_UPD_DATE = fDA_LAST_UPD_DATE;
            vEHICLE_TYPE.FDA_CREATION_DATE = fDA_CREATION_DATE;
            return vEHICLE_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VEHICLE_TYPE_ID
        {
            get
            {
                return _VEHICLE_TYPE_ID;
            }
            set
            {
                if (_VEHICLE_TYPE_ID != value)
                {
                    OnVEHICLE_TYPE_IDChanging(value);
                    ReportPropertyChanging("VEHICLE_TYPE_ID");
                    _VEHICLE_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VEHICLE_TYPE_ID");
                    OnVEHICLE_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _VEHICLE_TYPE_ID;
        partial void OnVEHICLE_TYPE_IDChanging(global::System.Int32 value);
        partial void OnVEHICLE_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACTIVE_IND
        {
            get
            {
                return _ACTIVE_IND;
            }
            set
            {
                OnACTIVE_INDChanging(value);
                ReportPropertyChanging("ACTIVE_IND");
                _ACTIVE_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ACTIVE_IND");
                OnACTIVE_INDChanged();
            }
        }
        private global::System.String _ACTIVE_IND;
        partial void OnACTIVE_INDChanging(global::System.String value);
        partial void OnACTIVE_INDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDA_USER_CODE
        {
            get
            {
                return _FDA_USER_CODE;
            }
            set
            {
                OnFDA_USER_CODEChanging(value);
                ReportPropertyChanging("FDA_USER_CODE");
                _FDA_USER_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FDA_USER_CODE");
                OnFDA_USER_CODEChanged();
            }
        }
        private global::System.String _FDA_USER_CODE;
        partial void OnFDA_USER_CODEChanging(global::System.String value);
        partial void OnFDA_USER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_LAST_UPD_DATE
        {
            get
            {
                return _FDA_LAST_UPD_DATE;
            }
            set
            {
                OnFDA_LAST_UPD_DATEChanging(value);
                ReportPropertyChanging("FDA_LAST_UPD_DATE");
                _FDA_LAST_UPD_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_LAST_UPD_DATE");
                OnFDA_LAST_UPD_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_LAST_UPD_DATE;
        partial void OnFDA_LAST_UPD_DATEChanging(global::System.DateTime value);
        partial void OnFDA_LAST_UPD_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FDA_CREATION_DATE
        {
            get
            {
                return _FDA_CREATION_DATE;
            }
            set
            {
                OnFDA_CREATION_DATEChanging(value);
                ReportPropertyChanging("FDA_CREATION_DATE");
                _FDA_CREATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDA_CREATION_DATE");
                OnFDA_CREATION_DATEChanged();
            }
        }
        private global::System.DateTime _FDA_CREATION_DATE;
        partial void OnFDA_CREATION_DATEChanging(global::System.DateTime value);
        partial void OnFDA_CREATION_DATEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FDAModel", "RefVehicalType", "UMBRELLA")]
        public EntityCollection<UMBRELLA> UMBRELLAs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UMBRELLA>("FDAModel.RefVehicalType", "UMBRELLA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UMBRELLA>("FDAModel.RefVehicalType", "UMBRELLA", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
